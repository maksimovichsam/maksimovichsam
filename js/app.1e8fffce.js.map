{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/assets/pendulum.png","webpack:///./src/assets/cramers_rule1.svg","webpack:///./src/assets/monster_equations.png","webpack:///./src/App.vue?d9ee","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/components/About.vue?5c46","webpack:///src/components/About.vue","webpack:///./src/components/About.vue?f71c","webpack:///./src/components/About.vue","webpack:///./src/components/Index.vue?1468","webpack:///src/components/Index.vue","webpack:///./src/components/Index.vue?d617","webpack:///./src/components/Index.vue","webpack:///./src/components/pages/RotatingSolids.vue?07de","webpack:///src/components/pages/RotatingSolids.vue","webpack:///./src/components/pages/RotatingSolids.vue?5e99","webpack:///./src/components/pages/RotatingSolids.vue","webpack:///./src/components/pages/Snake.vue?de4f","webpack:///src/components/pages/Snake.vue","webpack:///./src/components/pages/Snake.vue?a83b","webpack:///./src/components/pages/Snake.vue","webpack:///./src/components/pages/OrbitalMechanics.vue?454f","webpack:///src/components/pages/OrbitalMechanics.vue","webpack:///./src/components/pages/OrbitalMechanics.vue?bf57","webpack:///./src/components/pages/OrbitalMechanics.vue","webpack:///./src/components/pages/ForcesSimulator.vue?86b0","webpack:///src/components/pages/ForcesSimulator.vue","webpack:///./src/components/pages/ForcesSimulator.vue?d774","webpack:///./src/components/pages/ForcesSimulator.vue","webpack:///./src/components/pages/InfinitePolygons.vue?7792","webpack:///src/components/pages/InfinitePolygons.vue","webpack:///./src/components/pages/InfinitePolygons.vue?1828","webpack:///./src/components/pages/InfinitePolygons.vue","webpack:///./src/components/pages/NPendulum.vue?651e","webpack:///src/components/pages/NPendulum.vue","webpack:///./src/components/pages/NPendulum.vue?14a8","webpack:///./src/components/pages/NPendulum.vue","webpack:///./src/router.js","webpack:///./src/main.js","webpack:///./src/components/pages/ForcesSimulator.vue?f77d","webpack:///./src/components/Index.vue?f753","webpack:///./src/components/pages/RotatingSolids.vue?f4ed","webpack:///./src/components/pages/Snake.vue?e7a2","webpack:///./src/assets/cramers_rule2.svg","webpack:///./src/assets/forces1.png","webpack:///./src/assets/forces2.png"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","staticStyle","staticRenderFns","mounted","component","_m","points","edges","faces","animRotate","drawSolidEdges","context","canvas","width","height","filter","drawSolid","drawT","controls","drawEdges","console","shapeName","cancelAnimationFrame","last","accel","x","do_js","newGame","onResize","drawGrid","Satellite","imgEarth","requestAnimationFrame","P5","script","sign","isNaN","string","p5","color","rand_int","Math","floor","OPEN_PAREN","indexOf","open","CLOSE_PAREN","close","tokens","n1","op","n2","parse_simple","expr","compute_operation","operator","op_funcs","contains","OPERATORS","token_string","MATH_FUNC","replace","start","copy","symbol_table","f_x","f_y","y","v_x","v_y","a_x","time_step","a_y","update_initial_conditions","time_start","time_end","update_symbol_table","parse_expression","token_list","clear","ppx","x_distance","ppy","y_distance","draw_grid_lines","step_size","step_start","step_end","horizontal","step_size_x","x_start","x_end","step_size_y","y_start","y_end","draw_graphs","fill","strokeWeight","stroke","drawable","draw_curve","compute_points","x_range","show_dots","show_lines","graphs","Graph","f","draw","scatter_plots","scatter_plot","amount","delta_x","delta_y","y_range","Grid","points_to_draw","sort","unshift","end","canvasContainer","grid","zoom","event","wheelDeltaY","buttons","mouse_inside_canvas","document","on_input_update","unique_input","input","addEventListener","clear_scatter_plots","log","message","error_box","style","display","innerHTML","add_ib_button","new_ib","className","last_ib","firstElementChild","ib_container","insertBefore","scrollTop","scrollHeight","clientHeight","on_create_input","inputs","pop","draw_projectile","ngon","radius","offset_angle","rotate_button","circle_button","reset_button","reverse_button","animation_frame","sum","sqrt","dot","multiply_scalar","Vec","components","v2","vec","new_vec","Matrix","rows","cols","array","row","col","item","m2","multiply_mat","from_vec","det","transpose","a","size","equations","element","choose_row","row_index","solution","nerd_button","nerd_shit","draw_radius","canvas_width","N","L_n","omega_n","theta_n","mass_n","setup_initial_conditions","delta_N","trace_path_btn","trace_path","reset_btn","current_step","random_start_btn","random_start","restart_animation","increase_btn","change_N","decrease_btn","zero_pad","number","max_length","progress_container","progress_bar","max","percentage","progress_text","toPrecision","heavyLoad","Date","now","stop_animation","start_animation","animation_playing","setTimeout","animation","setInterval","Vue","use","VueRouter","router","routes","path","Index","About","RotatingSolids","Snake","OrbitalMechanics","ForcesSimulator","InfinitePolygons","NPendulum","config","productionTip","render","h","App","$mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,IAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,6ECvJT,yBAAwb,EAAG,G,uBCA3bW,EAAOD,QAAU,IAA0B,6B,8CCA3CC,EAAOD,QAAU,IAA0B,kC,uBCA3CC,EAAOD,QAAU,IAA0B,sC,4HCAvC,EAAS,WAAa,IAAI+B,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,QAAQ,CAACF,EAAG,MAAM,CAACA,EAAG,cAAc,CAACE,MAAM,CAAC,GAAK,MAAM,CAACF,EAAG,OAAO,CAACG,YAAY,WAAWH,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,SAAS,CAACN,EAAIQ,GAAG,uBAAuBJ,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,UAAU,CAACN,EAAIQ,GAAG,+CAA+CJ,EAAG,cAAc,CAACG,YAAY,OAAOE,YAAY,CAAC,aAAa,OAAOH,MAAM,CAAC,GAAK,aAAa,GAAK,WAAW,CAACN,EAAIQ,GAAG,sBAAsB,GAAGJ,EAAG,OAAO,CAACG,YAAY,YAAYH,EAAG,gBAAgB,IACviBM,EAAkB,GCiBtB,GACEnC,KAAM,MACNoC,QAAS,cCpBmT,I,wBCQ1TC,EAAY,eACd,EACA,EACAF,GACA,EACA,KACA,KACA,MAIa,EAAAE,E,oBCnBX,EAAS,WAAa,IAAIZ,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAIK,MAAMD,GAAO,OAAOJ,EAAIa,GAAG,IACnG,EAAkB,CAAC,WAAa,IAAIb,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACG,YAAY,SAAS,CAACP,EAAIQ,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,WAAW,CAACP,EAAIQ,GAAG,qBAAqBJ,EAAG,MAAMA,EAAG,MAAMJ,EAAIQ,GAAG,8RAA8RJ,EAAG,MAAMA,EAAG,MAAMJ,EAAIQ,GAAG,qVCsBtjB,GACEjC,KAAM,SCxBuU,ICO3U,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,I,QClBX,EAAS,WAAa,IAAIyB,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACG,YAAY,SAAS,CAACP,EAAIQ,GAAG,gBAAgBJ,EAAG,MAAM,CAACG,YAAY,WAAW,CAACH,EAAG,cAAc,CAACE,MAAM,CAAC,GAAK,gBAAgB,CAACF,EAAG,MAAM,CAACG,YAAY,aAAa,CAACH,EAAG,OAAO,CAACG,YAAY,cAAc,CAACP,EAAIQ,GAAG,gBAAgBJ,EAAG,MAAM,CAACG,YAAY,aAAa,CAACP,EAAIQ,GAAG,uBAAuBJ,EAAG,MAAM,CAACG,YAAY,aAAa,CAACP,EAAIQ,GAAG,kDAAkDJ,EAAG,cAAc,CAACE,MAAM,CAAC,GAAK,uBAAuB,CAACF,EAAG,MAAM,CAACG,YAAY,aAAa,CAACH,EAAG,OAAO,CAACG,YAAY,cAAc,CAACP,EAAIQ,GAAG,uBAAuBJ,EAAG,MAAM,CAACG,YAAY,aAAa,CAACP,EAAIQ,GAAG,oBAAoBJ,EAAG,MAAM,CAACG,YAAY,aAAa,CAACP,EAAIQ,GAAG,oFAAoFJ,EAAG,cAAc,CAACE,MAAM,CAAC,GAAK,sBAAsB,CAACF,EAAG,MAAM,CAACG,YAAY,aAAa,CAACH,EAAG,OAAO,CAACG,YAAY,cAAc,CAACP,EAAIQ,GAAG,sBAAsBJ,EAAG,MAAM,CAACG,YAAY,aAAa,CAACP,EAAIQ,GAAG,mBAAmBJ,EAAG,MAAM,CAACG,YAAY,aAAa,CAACP,EAAIQ,GAAG,sFAAsFJ,EAAG,cAAc,CAACE,MAAM,CAAC,GAAK,uBAAuB,CAACF,EAAG,MAAM,CAACG,YAAY,aAAa,CAACH,EAAG,OAAO,CAACG,YAAY,cAAc,CAACP,EAAIQ,GAAG,uBAAuBJ,EAAG,MAAM,CAACG,YAAY,aAAa,CAACP,EAAIQ,GAAG,yBAAyBJ,EAAG,MAAM,CAACG,YAAY,aAAa,CAACP,EAAIQ,GAAG,wDAAwDJ,EAAG,cAAc,CAACE,MAAM,CAAC,GAAK,WAAW,CAACF,EAAG,MAAM,CAACG,YAAY,aAAa,CAACH,EAAG,OAAO,CAACG,YAAY,cAAc,CAACP,EAAIQ,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,aAAa,CAACP,EAAIQ,GAAG,qBAAqBJ,EAAG,MAAM,CAACG,YAAY,aAAa,CAACP,EAAIQ,GAAG,0CAA0CJ,EAAG,cAAc,CAACE,MAAM,CAAC,GAAK,qBAAqB,CAACF,EAAG,MAAM,CAACG,YAAY,aAAa,CAACH,EAAG,OAAO,CAACG,YAAY,cAAc,CAACP,EAAIQ,GAAG,wBAAwBJ,EAAG,MAAM,CAACG,YAAY,aAAa,CAACP,EAAIQ,GAAG,oBAAoBJ,EAAG,MAAM,CAACG,YAAY,aAAa,CAACP,EAAIQ,GAAG,oFAAoF,MAChmE,EAAkB,GCmDtB,GACEjC,KAAM,SCrDuU,ICQ3U,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCnBX,EAAS,WAAa,IAAIyB,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAIK,MAAMD,GAAO,OAAOJ,EAAIa,GAAG,IACnG,EAAkB,CAAC,WAAa,IAAIb,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACG,YAAY,SAAS,CAACP,EAAIQ,GAAG,0BAA0BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACP,EAAIQ,GAAG,sBAAsBJ,EAAG,MAAM,CAACG,YAAY,WAAW,CAACH,EAAG,MAAM,CAACK,YAAY,CAAC,MAAQ,QAAQ,gBAAgB,QAAQ,CAACL,EAAG,SAAS,CAACK,YAAY,CAAC,OAAS,WAAWH,MAAM,CAAC,MAAQ,QAAQ,OAAS,QAAQ,GAAK,WAAWF,EAAG,MAAM,CAACK,YAAY,CAAC,aAAa,SAAS,OAAS,WAAWH,MAAM,CAAC,GAAK,mBAAmB,CAACN,EAAIQ,GAAG,iBAAiBJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,kBAAkB,UAAUH,MAAM,CAAC,GAAK,kBAAkB,CAACF,EAAG,MAAM,CAACG,YAAY,kBAAkBH,EAAG,MAAM,CAACG,YAAY,SAASE,YAAY,CAAC,OAAS,mBAAmBL,EAAG,MAAM,CAACG,YAAY,uBAAuBP,EAAIQ,GAAG,kSAAkSJ,EAAG,MAAMJ,EAAIQ,GAAG,kCAAkCJ,EAAG,IAAI,CAACG,YAAY,cAAcD,MAAM,CAAC,KAAO,uEAAuE,CAACN,EAAIQ,GAAG,iBAAiBR,EAAIQ,GAAG,mpBAAmpBJ,EAAG,MAAMJ,EAAIQ,GAAG,uMAAuMJ,EAAG,IAAI,CAACG,YAAY,cAAcD,MAAM,CAAC,KAAO,+CAA+C,CAACN,EAAIQ,GAAG,OAAOR,EAAIQ,GAAG,+RAA+RJ,EAAG,IAAI,CAACG,YAAY,cAAcD,MAAM,CAAC,KAAO,gDAAgD,CAACN,EAAIQ,GAAG,oBAAoBJ,EAAG,MAAM,CAACJ,EAAIQ,GAAG,QAAQR,EAAIQ,GAAG,KAAKJ,EAAG,MAAM,CAACJ,EAAIQ,GAAG,UAAUR,EAAIQ,GAAG,a,sKC2CruF,GACEjC,KAAM,iBACNoC,QAAS,WAGX,sBACA,UACA,yBACA,oBACA,4CAIA,kBACA,oBAZA,IAgBA,EAhBA,WAkBA,oDACQV,KAAKa,OAASA,EACdb,KAAKc,MAAQ,GACbd,KAAKe,MAAQA,EACb,IAAR,+FACA,gBACU,GAAV,cACA,SAFA,2BAGY,IAAK,IAAjB,oEACc,GAAd,uBACA,UALA,kFAOU,OAAV,GAZA,uBAcA,IAdA,IAcA,EAdA,aAiBY,IAjBZ,IAcA,EAdA,QAeA,wCAfA,WAiBA,GACc,IAAd,0BAAgB,OAAhB,qBACA,8BACA,6CACA,gBACc,EAAd,sBAAgB,OAAhB,UALA,kBAHA,uDAdA,mFAlBA,yDA6CA,SACA,iBACA,mBACA,sEAHA,uBAIA,4EACA,cACA,qBACA,oCACA,YARA,kFAUA,qBAvDA,qCA0DA,iFACA,iBACA,sEAFA,uBAGA,4EACA,cACA,8BACA,8BACA,YAPA,kFASA,qBAnEA,gCAsEA,oBACA,gBACA,0DACA,sDACA,iBAEA,iBACA,sEAPA,uBAQA,6FACA,8CACA,+DACA,cACA,8BACA,2BACA,8BACA,cACA,UAhBA,kFAkBA,uBAxFA,KA4FA,gBAGA,GAFA,SACA,mBACA,KACQC,EAAa,SADrB,CAIA,oBAPA,uBAQA,mFACA,qBACA,sBACA,8CAXA,kFAaA,IACA,2DAGA,aACA,kCACA,IACQhC,EAAEiC,eAAeC,EAASC,EAAOC,MAAQ,EAAGD,EAAOE,OAAS,EAAGF,EAAOC,MAAQ,EAAGpC,EAAE8B,MAAMQ,QAAO,SAAxG,mDACQtC,EAAEuC,UAAUL,EAASC,EAAOC,MAAQ,EAAGD,EAAOE,OAAS,EAAGF,EAAOC,MAAQ,IAEjF,+CACA,GACA,8EAAQ,OAAR,wCAGI,IAAJ,mCACA,qBACA,qBAEA,KACA,yFACA,+JACA,wIACA,iTACA,iaACA,ggBACA,IACA,gBACA,kFACA,KACAF,EAAA,kBACA,iBAxIA,uBAyIA,mFACA,mBACA,oBACA,8CA5IA,kFA8IAM,IAEA,sBACA,IACA,YACA,sDAEA,4CACA,oDACAC,EAAA,wCACAC,KACAF,IACAG,QAAA,cACA,GACA,KACA,uCACA,oCAGA,KACA,gDACA,+CAGAF,EAAA,wCACA,qBACAzC,EAAA,oBACA4C,EAAA,eACAJ,OAEAC,EAAA,wCACAzC,EAAA,aAAAA,GAAA,aACA4C,EAAA,0BACAJ,OAGAL,EAAA,0CACAU,qBAAA,GACAb,EAAA,KACAc,EAAA,YACAA,EAAA,eAEAX,EAAA,0CACA,iBAEA,wCACAW,EAAA,YAAAA,EAAA,YACAC,EAAA,EACAC,EAAA,EAAAA,EAAA,MACA,UACA,6DC9OuW,ICQnW,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCnBX,EAAS,WAAa,IAAIjC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAIK,MAAMD,GAAO,OAAOJ,EAAIa,GAAG,IACnG,EAAkB,CAAC,WAAa,IAAIb,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACG,YAAY,SAAS,CAACP,EAAIQ,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACP,EAAIQ,GAAG,uBAAuBJ,EAAG,MAAM,CAACG,YAAY,WAAW,CAACH,EAAG,IAAI,CAACJ,EAAIQ,GAAG,+OAAiPJ,EAAG,MAAM,CAACK,YAAY,CAAC,SAAW,aAAa,CAACL,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,QAAQ,SAAW,WAAW,OAAS,WAAW,KAAO,iBAAiB,MAAQ,SAASH,MAAM,CAAC,GAAK,UAAU,CAACN,EAAIQ,GAAG,cAAcJ,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,UAAU,CAACN,EAAIQ,GAAG,0BAA0BJ,EAAG,SAAS,CAACK,YAAY,CAAC,QAAU,QAAQ,OAAS,WAAW,OAAS,QAAQ,MAAQ,SAASH,MAAM,CAAC,GAAK,kBCoB/4B,GACE/B,KAAM,QACNoC,QAAS,WACP,MAIJ,SAASuB,IACT,sCACA,qBAEA,YACA,YACA,YACA,YAEA,KACA,KACA,KACA,aACA,IACA,SACA,SACA,IACA,mCACA,mCACA,IAEA,KAEA,aACA,WACA,IACA,oBACA,oBACA,gBACA,WAGA,4DACA,qBACA,4EAIA,GAHA,qBACA,cACA,MACA,WAQA,oCAPA,IACA,qBACA,wBACA,eACA,aAIA,UAcA,aACA,uBACA,wBACA,aACA,IAKA,aACA,wBACA,kCACA,oBACA,oBACA,8BACA,8BACA,+BACA,cACA,oCAMA,aACA,0BACA,kBACA,oBAmBA,GAlBA,WACA,sBACA,MACA,gBACA,mBAEA,MACA,kBACA,iBAEA,MACA,gBACA,mBAEA,OACA,kBACA,iBAEA,yDAIA,OAHA,wBACA,sBACA,yBAGA,0BACA,UACA,UACA,gBACA,4DACA,oBACA,4DACA,qBACA,IACA,wBAEA,qBACA,IA3EAC,IAEAtC,OAAA,wCACA,sCACA,6CACA,gDACA,+CACA,gDACA,sBASAuC,IACAvC,OAAA,6BAeAwC,IA6CA,UACA,OACAxC,OAAA,sCACA,eAEA,GADA,wBACA,EAEA,YADA,oBAGA,oBACA,IACA,uBCvK8V,QCQ1V,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCnBX,EAAS,WAAa,IAAIG,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAIK,MAAMD,GAAO,OAAOJ,EAAIa,GAAG,IACnG,EAAkB,CAAC,WAAa,IAAIb,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACG,YAAY,SAAS,CAACP,EAAIQ,GAAG,yBAAyBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACP,EAAIQ,GAAG,2BAA2BJ,EAAG,MAAM,CAACG,YAAY,WAAW,CAACH,EAAG,SAAS,CAACK,YAAY,CAAC,MAAQ,OAAO,OAAS,QAAQ,OAAS,uBAAuBH,MAAM,CAAC,GAAK,YAAYF,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,QAAQ,OAAS,aAAa,CAACL,EAAG,MAAM,CAACG,YAAY,QAAQE,YAAY,CAAC,QAAU,eAAe,OAAS,aAAa,CAACT,EAAIQ,GAAG,gFAAgFR,EAAIQ,GAAG,SAASJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,8rBAA8rBJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,6DAA6DJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,0JAA0JJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,khBAAkhBJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,sFC0B7nE,G,oBAAA,CACEjC,KAAM,mBACNoC,QAAS,WACP,IACA,OAAJ,4BAIA,SAAS,IACT,wCACA,qBAEA,EAJA,WAKA,6CACA,SACA,SACA,UACA,UACA,aAVA,oDAaA,GACA,wDAEA,IACA,mDACA,oBACA,oBACA,kBACA,sBArBA,KAyBA2B,EAAA,mCACAA,EAAA,mCACA,cACA,QACA,OAGA,aACA,8BACA,oEACA,sEACA,kCAEAF,IAIA,IAFA,6BACA,2BACA,aACA,8DACA,MAEA,oCAMA,aACA,iBACA,iDAEA,OADA,uBACA,GAEA,sBAGA,kBACA,cACA,iBACA,SAGA,aACA,kCACA,mBACA,gDAGA,IAFA,UAEA,oBACA,WACA,oBACA,mCA7BAG,EAAA,uBACAA,EAAA,oCACA,OA+BA,SACA,aAEA,gBACA,UACA,KAFA,2BAGA,4EACA,oCAJA,kFAKA,IACA,oDAPA,KASAC,sBAAA,GAGA3C,OAAA,wCACA,aACA,8DACA,MACA,QAEA,sBCvIyW,QCOrW,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,I,QClBX,EAAS,WAAa,IAAIG,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAIK,MAAMD,GAAO,OAAOJ,EAAIa,GAAG,IACnG,EAAkB,CAAC,WAAa,IAAIb,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACG,YAAY,SAAS,CAACP,EAAIQ,GAAG,wBAAwBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACP,EAAIQ,GAAG,qBAAqBJ,EAAG,MAAM,CAACG,YAAY,WAAW,CAACH,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,kBAAkB,CAACF,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,cAAcF,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,SAAS,CAACL,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,mBAAmB,CAACF,EAAG,MAAM,CAACG,YAAY,YAAY,CAACH,EAAG,QAAQ,CAACG,YAAY,YAAYD,MAAM,CAAC,KAAO,OAAO,MAAQ,eAAeF,EAAG,MAAM,CAACG,YAAY,YAAY,CAACH,EAAG,QAAQ,CAACG,YAAY,YAAYD,MAAM,CAAC,KAAO,OAAO,MAAQ,kBAAkBF,EAAG,MAAM,CAACG,YAAY,YAAY,CAACH,EAAG,QAAQ,CAACG,YAAY,YAAYD,MAAM,CAAC,KAAO,OAAO,MAAQ,aAAaF,EAAG,MAAM,CAACG,YAAY,YAAY,CAACH,EAAG,QAAQ,CAACG,YAAY,YAAYD,MAAM,CAAC,KAAO,OAAO,MAAQ,gBAAgBF,EAAG,MAAM,CAACG,YAAY,YAAY,CAACH,EAAG,QAAQ,CAACG,YAAY,YAAYD,MAAM,CAAC,KAAO,OAAO,MAAQ,gBAAgBF,EAAG,MAAM,CAACG,YAAY,YAAY,CAACH,EAAG,QAAQ,CAACG,YAAY,YAAYD,MAAM,CAAC,KAAO,OAAO,MAAQ,eAAeF,EAAG,MAAM,CAACG,YAAY,WAAWD,MAAM,CAAC,GAAK,iBAAiB,CAACF,EAAG,QAAQ,CAACG,YAAY,YAAYD,MAAM,CAAC,KAAO,OAAO,MAAQ,eAAeF,EAAG,MAAM,CAACK,YAAY,CAAC,SAAW,aAAa,CAACL,EAAG,OAAO,CAACG,YAAY,WAAWD,MAAM,CAAC,GAAK,oBAAoB,CAACN,EAAIQ,GAAG,aAAaJ,EAAG,MAAM,CAACK,YAAY,CAAC,OAAS,uBAAuBH,MAAM,CAAC,GAAK,yBAAyBF,EAAG,MAAM,CAACA,EAAG,IAAI,CAACJ,EAAIQ,GAAG,+cAA+cJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,qRAAqRJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,qCAAqCJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,0QCqExyE,G,4DAAA,CACEjC,KAAM,kBACNoC,QAAS,WACP,IAAJ,cACM,EAAN,iBACQ,IAAR,MACA,MACA,sBACQ,EAAR,0BACQ,EAAR,GAEQ,OAAR,2BAIA,YACI,IAAI8B,EAAGC,MAIX,SAAS,EAAT,GACA,eACA,QACA,QACA,sDACIC,KAAM,SAAV,GACM,OAAN,KACA,EACA,cAEI,IAAJ,SAAI,KAAJ,WAIA,cACI,OAAQC,MAAMC,GAIlB,aACI,OAAOC,EAAGC,MAAMC,EAAS,EAAG,KAAMA,EAAS,EAAG,KAAMA,EAAS,EAAG,MAIpE,gBACI,OAAOC,KAAKC,MAAM,KAAtB,oBAIA,2CACA,4EACA,QACA,UAHA,kFAII,OAAO,EAIX,gBACI,OAAOC,EAAWC,QAAQC,IAASC,EAAYF,QAAQG,GAU3D,cACI,IAAJ,cAGI,GAAqB,GAAjBC,EAAO7G,OAAa,CACtB,IAAN,QACA,qEACM,OAAN,iBAII,IAAK,IAAT,mBACM,GAAN,UAGQ,IADA,IAAR,SACA,sBACU,IAAV,OAEU,GAAV,OACY,EAAZ,aAEA,WACY,IAAZ,UACY,IAAZ,OACA,0FAGY,GAAZ,aACc,EAAd,kCACc,QAQV,IAWI8G,EACAC,EACAC,EAbR,KAgBI,SAASC,EAAaC,GACpB,GAAN,4DACM,GAAN,kEAMM,GAJA,EAAN,KACM,EAAN,KACM,EAAN,MAEA,kEACM,IAAN,8DACM,IAAN,8DAEM,OAAN,kCAII,SAASC,EAAkBC,GACzB,IAAN,wBACQ,IAAR,OACA,OACU,EAAV,kCACU,GAAV,IApCIC,EAAS,KAAO,SAApB,iBACIA,EAAS,KAAO,SAApB,iBACIA,EAAS,KAAO,SAApB,iBACIA,EAAS,KAAO,SAApB,KACM,GAAN,+BACM,OAAN,KAEIA,EAAS,KAAO,SAApB,2BAmCI,IAAK,IAAT,oBACM,IAAN,OACM,GAAN,QAKQ,IAAR,SACQ,IAAR,KACA,8FAEQ,IAAR,sBACQ,IAAR,KACA,sFAEQ,EAAR,eA/FA,2BAoGA,4EACQF,EAAkBC,IArG1B,kFAuGI,GAAqB,GAAjBP,EAAO7G,OACf,uDAEI,OAAO6G,EAAO,GAGlB,cACI,OAAIS,EAASC,EAAWC,MACpBF,EAASd,EAAYgB,MACrBF,EAASX,EAAaa,MACtBA,KAAgBC,KAWxB,cAEIvB,EAASA,EAAOwB,QAAQ,KAAM,IAM9B,IAJA,IAAJ,KAGA,IACA,mBACA,UACA,MACA,qBAEQ,EAAR,WACQ,EAAR,KAGQC,EAAQzB,EAAOlG,QACvB,mBAKI,IAAK,IAAT,oBACM,IAAN,OAEA,OACA,uBACA,6BAEA,YACA,WACA,kBAEA,sBACA,WACA,oBAII,OAAO6G,EAgBX,SAQA,cAEI,IADA,IAAJ,YACA,oBACM,IAAN,OACM,GAAN,aACQ,KAAR,QAGA,yBAFA,WAMI,OAAOe,EAnBXC,EAAA,UACAA,EAAA,cACAA,EAAA,YAvOA,IA2PA,EA3PA,WA4PI,SAAJ,2BAEM,KAAN,SACM,KAAN,WACM,KAAN,WACM,KAAN,cACM,KAAN,cACM,KAAN,IAIM,KAAN,gBAvQA,+DA4QQvE,KAAKwE,IAAMD,EAAa,OACxBvE,KAAKyE,IAAMF,EAAa,SA7QhC,kDAiRQvE,KAAK7B,EAAIoG,EAAa,KACtBvE,KAAKgC,EAAIuC,EAAa,OACtBvE,KAAK0E,EAAIH,EAAa,OACtBvE,KAAK2E,IAAMJ,EAAa,QACxBvE,KAAK4E,IAAML,EAAa,UArRhC,4CAyRQA,EAAa,KAAOvE,KAAK7B,EACzBoG,EAAa,KAAOvE,KAAKgC,EACzBuC,EAAa,KAAOvE,KAAK0E,EACzBH,EAAa,OAASvE,KAAK2E,IAC3BJ,EAAa,OAASvE,KAAK4E,IAC3BL,EAAa,KAAOvE,KAAKhB,IA9RjC,2BA6SA,GACQ,IAAR,sBACA,sBAEQgB,KAAK2E,KAAOE,EAAMC,EAClB9E,KAAK4E,KAAOG,EAAMD,EAElB9E,KAAKgC,GAAKhC,KAAK2E,IAAMG,EACrB9E,KAAK0E,GAAK1E,KAAK4E,IAAME,EAErB9E,KAAKhB,GAAK8F,IAvTlB,iCA0TA,OACQ9E,KAAKgF,4BACLhF,KAAKhB,EAAIiG,EACT,IAAR,UACA,yBAEQ,MAAOjF,KAAKhB,GAAKkG,EACf,KAAV,QACU,EAAV,2BAGQ,OAAOrE,IArUf,8BAkSQb,KAAKmF,sBACL,IAAR,cACQ,OAAOC,EAAiBC,KApShC,8BAwSQrF,KAAKmF,sBACL,IAAR,cACQ,OAAOC,EAAiBC,OA1ShC,KAiVA,EAjVA,WAkVI,SAAJ,kCACM,KAAN,UACM,KAAN,UACM,KAAN,QACM,KAAN,SAGM,KAAN,MACM,KAAN,MAEM,KAAN,UACM,KAAN,iBA7VA,sDAiWQxC,EAAGyC,QAEH,IAAR,cACU,IAAV,gBAAY,OAAZ,yBACA,KACA,mCACA,IACA,4CACA,QAEU,OAAV,KAKA,kBACA,kBACA,kBACA,kBACA,MACA,MACA,OACA,OACQtF,KAAKuF,IAAMvF,KAAKoB,MAAQoE,EACxBxF,KAAKyF,IAAMzF,KAAKqB,OAASqE,EAGzB,IAAR,gBACA,aAEQ,SAASC,EAAgBC,EAAWC,EAAYC,EAAUC,EAAYvG,GAEpE,IADA,IAAV,IACA,cACY,IAAZ,MAUY,GARZ,uBACA,kBAGY,EAAZ,aACY,EAAZ,cAEY,EAAZ,YACA,GACc,IAAd,eACc,EAAd,oBAGc,EAAd,gBACc,EAAd,kCAGc,EAAd,iBACc,EAAd,YACc,IAAd,gBACgB,GAAhB,IACgB,IAAhB,WACgB,EAAhB,wBAGA,CACc,IAAd,cACc,EAAd,qBAGc,EAAd,gBACc,EAAd,kCAGc,EAAd,iBACc,EAAd,YACc,IAAd,gBACgB,GAAhB,IACgB,GAAhB,WACgB,EAAhB,uBAMQ,IAAR,kBACA,kBACA,kBACA,kBACQmG,EAAgBK,EAAaC,EAASC,GAAO,EAAOlG,MACpD2F,EAAgBQ,EAAaC,EAASC,GAAO,EAAMrG,MAEnDA,KAAKsG,gBAxbb,wCA4bA,KACQ,MAAO,CAAf,kEA7bA,oCAicQzD,EAAG0D,KAAK,IAAK,EAAG,GAChB1D,EAAG2D,aAAa,GAFxB,2BAIA,iHACY3D,EAAG4D,OAAOC,EAAS5D,OACnBD,EAAG0D,KAAKG,EAAS5D,OACjB9C,KAAK2G,WAAWD,EAASE,eAAe5G,KAAK6G,SAAUH,EAASI,UAAWJ,EAASK,aAPhG,qFAhcA,iCA4cA,OACQ,IAAK,IAAb,sBACU,IAAV,wCAMU,GALV,IACY,EAAZ,iBACY,EAAZ,gBACY,EAAZ,+BAEA,GACY,EAAZ,gBACY,IAAZ,4CACY,EAAZ,0BAvdA,gCA6dA,GACQ/G,KAAKgH,OAAOhK,KAAK,IAAIiK,EAAMC,IAC3BlH,KAAKmH,SA/db,uCAmeA,GACQnH,KAAKoH,cAAcpK,KAAKqK,GACxBrH,KAAKmH,SAreb,4CAyeQnH,KAAKoH,cAAgB,GACrBpH,KAAKmH,SA1eb,2BA8eA,GAIQ,IAAR,cACU,OAAV,wBAEA,iBAEYG,EAAS,GACX,KAAV,cACU,KAAV,cACU,KAAV,cACU,KAAV,eAEA,MACU,KAAV,cACU,KAAV,cACU,KAAV,cACU,KAAV,eAGQtH,KAAKmH,SApgBb,kCAwgBA,KAEQI,GAAWvH,KAAK6G,QAAQ,GAAK7G,KAAK6G,QAAQ,GAC1CW,GAAWxH,KAAKyH,QAAQ,GAAKzH,KAAKyH,QAAQ,GAE1CzH,KAAK6G,QAAQ,IAAMU,EACnBvH,KAAK6G,QAAQ,IAAMU,EACnBvH,KAAKyH,QAAQ,IAAMD,EACnBxH,KAAKyH,QAAQ,IAAMD,EAEnBxH,KAAKmH,WAlhBb,KAqhBAO,EAAA,eArhBA,IAuhBA,EACA,gBAAI,uBACA,KAAJ,IACI,KAAJ,IACI,KAAJ,WACI,KAAJ,WAIA,EAhiBA,WAiiBI,SAAJ,4BACM,KAAN,IACM,KAAN,UACM,KAAN,UACM,KAAN,aACM,KAAN,cAtiBA,8DAyiBA,GAQQ,IAPA,IAAR,KAEA,OACA,OACA,UAGA,8BACU,IAAV,mBAGA,cACY,KAAZ,mBACY,GAAZ,IAEA,aACY,EAAZ,qBAKQ,IAAR,MACA,qBACA,qBAEQC,EAAeC,MAAK,SAA5B,KACU,OAAV,SACA,EACA,QACA,EACA,KAEQD,EAAeE,QAAQxD,GACvBsD,EAAe3K,KAAK8K,GACpB9H,KAAKa,OAAO7D,KAAKqH,EAAOyD,GAGxB,IADA,IAAR,UACA,qBAKU,IAJA,IAAV,OACA,SAEA,0BACA,gBACY,IAAZ,oBAEA,qBACY,KAAZ,eACY,EAAZ,gBACY,GAAZ,EAIQ,OAAOH,MA9lBf,KAkmBA,EAlmBA,WAomBI,SAAJ,4BACM,KAAN,UACM,KAAN,SACM,KAAN,aACM,KAAN,cAxmBA,gEA4mBQ,OAAO3H,KAAKa,WA5mBpB,KAwnBA,MACA,MAEA,2BACA,KAEA,6CACAkH,EAAA,sCACIC,EAAKC,KAAKC,EAAMC,gBAGpBJ,EAAA,0CAEyB,GAAjBG,EAAME,SACR,EAAN,mDAIAL,EAAA,0CACIM,GAAsB,KAG1BN,EAAA,0CACIM,GAAsB,KAI1BC,SAAA,sEACQD,IACF,EAAN,iBACM,EAAN,+BAMA,SACA,4CACA,0CACA,6CAEA,sCACA,uBAEA,IACA,KACA,MAwBA,cACI,SAASE,EAAgBC,GACvB,GAAN,YAAM,CAEA,IAAN,aACA,4BAGM,GAAN,yBACQ,EAAR,QACQ,EAAR,oBAEA,CACQ,IAAR,UACQ,EAAR,QACQ,QAAR,gBAHQ,IAAR,mBAAQ,IAME,IAAV,0DAAY,IAAZ,UACA,qCACA,MACc,EAAd,mCATA,kFAaQ,EAAR,8BAIIC,EAAMC,iBAAiB,SAAS,WAC9B,IACE,EAAR,GACQ,IACR,SACQ,EAAR,OAIIH,EAAgBE,GAGpB,aAEIT,EAAKW,sBACL,IACE,IAAN,sBACM,EAAN,2BACM,IACN,SAEM,EAAN,IAIA,cACIhH,QAAQiH,IAAI,UAAYC,GACxBC,EAAUC,MAAMC,QAAU,QAC1BF,EAAUG,UAAY,UAAYJ,EAGtC,aACIC,EAAUC,MAAMC,QAAU,OAnF9BE,EAAA,qCACI,IAAJ,gCACIC,EAAOC,UAAY,WAGnBD,EAAOF,UAAYI,EAAQJ,UAC3BE,EAAOG,kBAAkBvK,MAAQsK,EAAQC,kBAAkBvK,MAC3DsK,EAAQJ,UAAY,iDAEpBM,EAAaC,aAAaL,EAAQE,GAClCE,EAAaE,UAAYF,EAAaG,aAAeH,EAAaI,aAElEC,EAAgBP,EAAQC,mBACxBM,EAAgBT,EAAOG,mBAEvBO,EAAOC,MACPD,EAAO7M,KAAKmM,EAAOG,mBACnBO,EAAO7M,KAAKqM,EAAQC,sBAzrBxB,2BA8vBA,kHACA,KACA,WAhwBA,kFAmwBAS,IC71BwW,QCQpW,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCnBX,EAAS,WAAa,IAAIhK,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAIK,MAAMD,GAAO,OAAOJ,EAAIa,GAAG,IACnG,GAAkB,CAAC,WAAa,IAAIb,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACG,YAAY,SAAS,CAACP,EAAIQ,GAAG,yBAAyBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACP,EAAIQ,GAAG,sBAAsBJ,EAAG,MAAM,CAACG,YAAY,WAAW,CAACH,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,kBAAkB,WAAW,CAACL,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,uBAAuBF,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,kBAAkB,SAAS,QAAU,QAAQ,CAACL,EAAG,SAAS,CAACG,YAAY,eAAeE,YAAY,CAAC,OAAS,OAAOH,MAAM,CAAC,GAAK,iBAAiB,CAACN,EAAIQ,GAAG,eAAeJ,EAAG,SAAS,CAACG,YAAY,eAAeE,YAAY,CAAC,OAAS,OAAOH,MAAM,CAAC,GAAK,iBAAiB,CAACN,EAAIQ,GAAG,gBAAgBJ,EAAG,SAAS,CAACG,YAAY,eAAeE,YAAY,CAAC,OAAS,OAAOH,MAAM,CAAC,GAAK,gBAAgB,CAACN,EAAIQ,GAAG,WAAWJ,EAAG,SAAS,CAACG,YAAY,eAAeE,YAAY,CAAC,OAAS,OAAOH,MAAM,CAAC,GAAK,kBAAkB,CAACN,EAAIQ,GAAG,uBAAuBJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,+BAA+BJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,kcAAkcJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,0EAA0EJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,0JAA0JJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,0RAA0RJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,0EC0C7/D,IACEjC,KAAM,mBACNoC,QAAS,WACP,IAAJ,cACM,EAAN,iBACQ,OAAR,kBAEQ,IAAR,MACA,IACA,sBACQ,EAAR,0BAEQ,GAAR,SAIA,YACI,IAAI8B,EAAGC,KAIX,SAAS,GAAT,OAEA,QACA,MACA,KACA,KACA,OACA,KAEA,aACA,UACA,WACA,IACA,OAEA,UACA,MAEA,WACA,WACA,mBAEA,IACA,eAEA,sBACA,GACA,kBAEA,IACA,qBAEA,4BACA,IACMuH,EAAKhI,EAAG0C,EAAGuF,EAAQ1K,EAAG2K,GAE5B,IACA,sBAIA,2FACA,eAEA,qBACA,SACA,2BACA,4BAGA,oBAGA,8CACAC,EAAA,qCACA,GACA,yBACA,mBAGA,wBACA,qBAGA,QAGA,8CACAC,EAAA,qCAEA,YADA,EACA,cAEA,aAEA,KACA,OAGA,6CACAC,EAAA,qCACA,IACA,OAGA,+CACAC,EAAA,qCACA,KACA,OAGAC,IC1JyW,UCOrW,GAAY,eACd,GACA,EACA,IACA,EACA,KACA,WACA,MAIa,M,QClBX,GAAS,WAAa,IAAIxK,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAIK,MAAMD,GAAO,OAAOJ,EAAIa,GAAG,IACnG,GAAkB,CAAC,WAAa,IAAIb,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACG,YAAY,SAAS,CAACP,EAAIQ,GAAG,kBAAkBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACP,EAAIQ,GAAG,yBAAyBJ,EAAG,MAAM,CAACG,YAAY,WAAW,CAACH,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,kBAAkB,CAACF,EAAG,MAAM,CAACK,YAAY,CAAC,OAAS,sBAAsB,SAAW,YAAYH,MAAM,CAAC,GAAK,oBAAoB,CAACF,EAAG,MAAM,CAACK,YAAY,CAAC,aAAa,SAAS,SAAW,WAAW,IAAM,MAAM,KAAO,MAAM,UAAY,yBAAyBH,MAAM,CAAC,GAAK,sBAAsB,CAACF,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,iBAAiB,CAACN,EAAIQ,GAAG,SAASJ,EAAG,WAAW,CAACE,MAAM,CAAC,GAAK,cAAc,MAAQ,KAAK,IAAM,SAASF,EAAG,MAAM,CAACJ,EAAIQ,GAAG,kCAAkCJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,kBAAkB,SAAS,QAAU,QAAQ,CAACL,EAAG,SAAS,CAACG,YAAY,eAAeE,YAAY,CAAC,OAAS,OAAOH,MAAM,CAAC,GAAK,oBAAoB,CAACN,EAAIQ,GAAG,gBAAgBJ,EAAG,SAAS,CAACG,YAAY,eAAeE,YAAY,CAAC,OAAS,OAAOH,MAAM,CAAC,GAAK,gBAAgB,CAACN,EAAIQ,GAAG,WAAWJ,EAAG,SAAS,CAACG,YAAY,eAAeE,YAAY,CAAC,OAAS,OAAOH,MAAM,CAAC,GAAK,mBAAmB,CAACN,EAAIQ,GAAG,mBAAmBJ,EAAG,SAAS,CAACG,YAAY,eAAeE,YAAY,CAAC,OAAS,OAAOH,MAAM,CAAC,GAAK,mBAAmB,CAACN,EAAIQ,GAAG,mBAAmBJ,EAAG,SAAS,CAACG,YAAY,eAAeE,YAAY,CAAC,OAAS,OAAOH,MAAM,CAAC,GAAK,iBAAiB,CAACN,EAAIQ,GAAG,8BAA8BJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,kQAAkQJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,+KAA+KJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,+VAA+VJ,EAAG,SAAS,CAACG,YAAY,eAAeD,MAAM,CAAC,GAAK,gBAAgB,CAACN,EAAIQ,GAAG,uBAAuBJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,QAAQH,MAAM,CAAC,GAAK,gBAAgB,CAACF,EAAG,IAAI,CAACK,YAAY,CAAC,cAAc,SAAS,CAACT,EAAIQ,GAAG,oFAAoFJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,sSAAsSJ,EAAG,MAAM,CAACK,YAAY,CAAC,MAAQ,MAAM,QAAU,QAAQ,OAAS,UAAUH,MAAM,CAAC,IAAM,EAAQ,QAA6B,IAAM,sBAAsBF,EAAG,IAAI,CAACJ,EAAIQ,GAAG,sNAAsNJ,EAAG,IAAI,CAACK,YAAY,CAAC,aAAa,WAAW,CAACT,EAAIQ,GAAG,gFAAgFJ,EAAG,MAAMJ,EAAIQ,GAAG,6FAA6FJ,EAAG,MAAMJ,EAAIQ,GAAG,sGAAsGJ,EAAG,QAAQA,EAAG,IAAI,CAACJ,EAAIQ,GAAG,wLAAwLJ,EAAG,IAAI,CAACK,YAAY,CAAC,aAAa,WAAW,CAACT,EAAIQ,GAAG,8IAA8IJ,EAAG,MAAMJ,EAAIQ,GAAG,iJAAiJJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,wMAAwMJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,mKAAmKJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,kBAAkB,SAAS,cAAc,SAAS,QAAU,SAAS,CAACL,EAAG,MAAM,CAACK,YAAY,CAAC,MAAQ,MAAM,OAAS,QAAQH,MAAM,CAAC,IAAM,EAAQ,QAA4B,IAAM,sBAAsBF,EAAG,MAAM,CAACA,EAAG,MAAM,CAACK,YAAY,CAAC,MAAQ,MAAM,OAAS,QAAQH,MAAM,CAAC,IAAM,EAAQ,QAA4B,IAAM,0BAA0BF,EAAG,IAAI,CAACK,YAAY,CAAC,aAAa,WAAW,CAACT,EAAIQ,GAAG,kIAAkIJ,EAAG,MAAMA,EAAG,MAAMJ,EAAIQ,GAAG,2IAA2IJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,2EAA2ER,EAAIQ,GAAG,qaAAqaJ,EAAG,IAAI,CAACG,YAAY,cAAcD,MAAM,CAAC,KAAO,kDAAkD,CAACN,EAAIQ,GAAG,qEAAqER,EAAIQ,GAAG,MAAMJ,EAAG,MAAMA,EAAG,MAAMA,EAAG,MAAM,CAACK,YAAY,CAAC,MAAQ,MAAM,QAAU,QAAQ,OAAS,UAAUH,MAAM,CAAC,IAAM,EAAQ,QAAkC,IAAM,qBAAqBF,EAAG,MAAMA,EAAG,MAAM,CAACK,YAAY,CAAC,MAAQ,MAAM,QAAU,QAAQ,OAAS,UAAUH,MAAM,CAAC,IAAM,EAAQ,QAAkC,IAAM,qBAAqBF,EAAG,MAAMJ,EAAIQ,GAAG,mdAAmdJ,EAAG,MAAMA,EAAG,MAAMA,EAAG,MAAM,CAACK,YAAY,CAAC,MAAQ,MAAM,QAAU,QAAQ,OAAS,UAAUH,MAAM,CAAC,IAAM,EAAQ,QAAsC,IAAM,sBAAsBF,EAAG,MAAMA,EAAG,IAAI,CAACJ,EAAIQ,GAAG,4dAA4dJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,wBAAwBJ,EAAG,IAAI,CAACG,YAAY,cAAcD,MAAM,CAAC,KAAO,gDAAgD,CAACN,EAAIQ,GAAG,0BAA0BR,EAAIQ,GAAG,oKAAoKJ,EAAG,MAAMA,EAAG,MAAMA,EAAG,MAAMA,EAAG,MAAMA,EAAG,MAAMA,EAAG,c,aCoJ7wP,IACE7B,KAAM,YACNoC,QAAS,WACP,IAAJ,cACM,EAAN,iBACQ,OAAR,kBAEQ,IAAR,OACA,MACA,sBACQ,EAAR,0BACQ,EAAR,cACQ,GAAR,SAIA,YACI,IAAI8B,EAAGC,KAIX,SAAS,GAAT,SACA,EADA,WAEI,SAAJ,KACM,GADN,wBACA,iBACA,mFACM,KAAN,aALA,mDAsDA,GAEQ,IADA,IAAR,IACA,yCACU,GAAV,mCACQ,OAAO+H,IA1Df,kCA8DQ,OAAOxH,KAAKyH,KAAKzK,KAAK0K,IAAI1K,SA9DlC,kCAkEQ,IAAR,mBACQ,GAAS,GAAL7B,EACZ,sDACQ,OAAO6B,KAAK2K,gBAAgB,EAAIxM,KArExC,sCAwEA,GAEQ,IADA,IAAR,cACA,8BACU,EAAV,iBACQ,OAAOmG,IA5Ef,0BA+EA,GAEQ,IADA,IAAR,KACA,+DACU,EAAV,sCACQ,OAAO,IAAIsG,EAAIC,KAnFvB,+BAsFA,GAEQ,IADA,IAAR,KACA,+DACU,EAAV,sCACQ,OAAO,IAAID,EAAIC,KA1FvB,6BA8FQ,OAAO,IAAID,EAAI5K,KAAK6K,WAAW/K,MAAM,MA9F7C,iCAkGQ,OAAOE,KAAK6K,WAAW/K,MAAM,KAlGrC,6BAqGA,GACQ,GAAIE,KAAKtD,QAAUoO,EAAGpO,OAC9B,SAEQ,IAAK,IAAb,sBACU,GAAV,oCACA,SACQ,OAAO,IA5Gf,wBASQ,OAAOsD,KAAK6K,WAAW,KAT/B,wBAaQ,OAAO7K,KAAK6K,WAAW,KAb/B,wBAiBQ,OAAO7K,KAAK6K,WAAW,KAjB/B,6BAqBQ,OAAO7K,KAAK6K,WAAWnO,UArB/B,+BAwBA,wEAMQ,GAAIqO,EAAIrO,OAAS,GAAKqO,EAAI,GAAGrO,OACrC,0GAIQ,IAFA,IAAR,KAEA,sBACU,EAAV,QAGQ,IAAK,IAAb,mCACU,EAAV,4CAKQ,IAHA,IAAR,mCAEA,KACA,sBACU,EAAV,MACA,4CAIQ,OAAO,IAAIkO,EAAII,OAnDvB,KAgHA,EAhHA,WAkHI,SAAJ,SAKM,GALN,uBACM,KAAN,QACM,KAAN,OACM,KAAN,YAEA,eACQ,KAAR,SACQ,IAAR,kBACU,KAAV,eA1HA,sDA+HQ,OAAO,IAAIC,EAAOjL,KAAKkL,KAAMlL,KAAKmL,KAAMnL,KAAKoL,MAAMtL,WA/H3D,2BAkIA,KACQ,OAAOE,KAAKoL,MAAMpL,KAAKmL,KAAOE,EAAMC,KAnI5C,0BAsIA,OACQtL,KAAKoL,MAAMpL,KAAKmL,KAAOE,EAAMC,GAAOC,IAvI5C,sCA0IA,GAEQ,IADA,IAAR,cACA,yBACU,EAAV,YACQ,OAAOjH,IA9If,mCAiJA,GACQ,GAAItE,KAAKmL,MAAQK,EAAGN,KAC5B,kEAIQ,IADA,IAAR,KACA,2BACU,EAAV,QAEQ,IAAK,IAAb,oBACU,IAAV,qBACY,IAAZ,wBACc,EAAd,wCAEQ,OAAO,IAAID,EAAOjL,KAAKkL,KAAMM,EAAGL,KAAMC,KA/J9C,mCAkKA,GACQ,OAAOpL,KAAKyL,aAAaR,EAAOS,SAASX,MAnKjD,6BA2LA,GACQ,GAAI/K,KAAKkL,MAAQM,EAAGN,MAAQlL,KAAKmL,MAAQK,EAAGL,KACpD,SAEQ,IAAK,IAAb,4BAGU,GAAV,yCACA,SACQ,OAAO,IApMf,kCAyMQ,IADA,IAAR,KACA,qBACU,IAAV,wBACY,IAAZ,oCACA,iBACA,SACU,GAAV,KAEQ,MAAO,IAAMrN,IAhNrB,uCAmNA,KAEQ,IADA,IAAR,KACA,oBACU,IAAV,wBACA,YACA,uBACQ,OAAO,IAAImN,EAAOjL,KAAKkL,KAAO,EAAGlL,KAAKmL,KAAO,EAAGC,KAzNxD,4BA8NQ,GAAIpL,KAAKkL,MAAQlL,KAAKmL,KAC9B,mGACQ,GAAiB,GAAbnL,KAAKkL,KACjB,qBAGQ,IADA,IAAR,IACA,oBACU,IAAV,6DAEQ,OAAOS,IAvOf,kCA2OQ,GAAI3L,KAAKkL,MAAQlL,KAAKmL,KAC9B,2FAGQ,IADA,IAAR,cACA,oBACU,IAAV,2BAEY,IAAZ,cACY,EAAZ,qBACY,EAAZ,WAGQ,OAAO7G,IAvPf,gCA6PQ,GAAItE,KAAKkL,MAAQlL,KAAKmL,KAC9B,+FAEQ,IAAR,aACQ,GAAW,GAAPQ,EACZ,sDAIQ,IAFA,IAAR,KAEA,oBACU,IAAV,wBACY,EAAZ,uCAIQ,IADA,IAAR,KACA,mBACA,iBACA,OAEU,EAAV,gBAIQ,IAAR,+BAGQ,OAFAxN,EAAIA,EAAEyN,YAECzN,EAAEwM,gBAAgB,EAAIgB,KAvRrC,+BA2RQ,OAAO,IAAIf,EAAI5K,KAAKoL,UA3R5B,kCAsKA,IACQ,IAAR,KADA,gEAEQ,IAAK,IAAb,kDACY,IAAK,IAAjB,oEACc,EAAd,uBAFA,mFAKQ,OAAO,IAAIH,EAAOF,EAAI,GAAGrO,OAAQqO,EAAIrO,OAAQmP,KA7KrD,+BAiLA,GAEQ,IADA,IAAR,KACA,YACU,IAAV,gBACY,EAAZ,eAEQ,OAAO,IAAIZ,EAAOa,EAAMA,EAAMV,OAvLtC,KAgSA,cAMI,GAAIW,EAAUrP,QAAU,EAA5B,YACA,wDAUI,IADA,IAAJ,KACA,oBAKM,IAJA,IAAN,KAIA,mBACA,yBACU,EAAV,QAEM,GAAN,YACA,wEACM,EAAN,QAGI,IAAJ,KACI,SAASsH,EAASoH,EAAOY,GAA7B,2BACQ,IAAK,IAAb,oEACU,GAAV,KACA,UAHA,kFAIM,OAAN,EAGI,SAASC,EAAWC,GAClB,GAAN,YACA,SAEM,IAAN,OACA,IACM,EAAN,CACQ,IAAR,OACQ,IAAR,QACU,EAAV,QAEU,IAAV,SACU,GAAV,EACA,SAEY,EAAZ,MAGQ,GAAR,QACA,YAEM,OAAN,EAEID,EAAW,GAKX,IAAK,IAAT,mBACM,GAAN,cACA,iCAKI,IAAK,IAAT,oBAKM,IAHA,IAAN,UACA,OAEA,mBACQ,EAAR,MAIM,IAAN,yBAIQ,IAHA,IAAR,UACA,OAEA,mBACU,EAAV,WAQI,IADA,IAAJ,KACA,mBACM,EAAN,QAEI,IAAK,IAAT,uBAGM,IAFA,IAAN,UAEA,qBACQ,EAAR,uBAEM,EAAN,sBAGI,OAAO,IAAIrB,EAAIuB,GAOnB,6CACA,yCACAC,EAAA,qCACmC,QAA3BC,EAAUtD,MAAMC,SAClB,EAAN,sBACM,EAAN,oCACM,YAAN,WACQ,EAAR,qBACA,MAGM,EAAN,qBACM,EAAN,kCAOA,SACA,KAEA,MACA,MAEA,OACA,IACA,UACA,KACA,KACA,KACA,KAEA,OACA,MACA,MACA,IAEA,aACIsD,EAAcC,EAAe,IAAMC,EACnCC,EAAM,GACNC,EAAU,GACVC,EAAU,GACVC,EAAS,GAET,IAAK,IAAT,YACM,EAAN,QACM,EAAN,QACM,EAAN,QAEA,EACA,gCAEA,kBAGAC,IAEA,iDACA,yCACA,4CACA,4CACA,0CA0BA,cACI,QAAIL,EAAIM,EAAU,KAElBN,GAAKM,GACE,GA5BXC,EAAA,qCACIC,GAAcA,EACdnK,EAAGyC,WAEP2H,EAAA,qCACIC,EAAe,EACfrK,EAAGyC,WAEP6H,EAAA,qCACIC,GAAgBA,EAEpB,YADQA,EACR,yBAEA,yBACIC,OAEJC,EAAA,qCACIC,EAAS,GACTF,OAEJG,EAAA,qCACQD,GAAU,IAClB,OASA,mDACA,yCACA,0CAEA,cACI,SAASE,EAASC,EAAQC,GACxB,EAAN,aACM,MAAN,WACQ,GAAR,IACM,OAAN,EAEIC,EAAmB7E,MAAMC,QAAU,QAEnC6E,EAAa9O,MAAQ8O,EAAaC,IAAMC,EACxCC,EAAc/E,UAAYwE,GAAU,IAAMM,GAAYE,YAAY,GAAI,GAAK,KAG/E,aACI,IAAJ,aACQpN,EAAS,GACjB,IACA,MACA,MACA,MACA,MAEI,SAASqN,IAGP,IAFA,IAAN,KAEA,aAEQ,IADA,IAAR,KACA,aAEU,IADA,IAAV,KACA,gBACY,EAAZ,QACU,EAAV,QAGQ,EAAR,UACA,sBACQ,EAAR,6BACQ,EAAR,4CAEQ,EAAR,UACA,sBACQ,EAAR,4BACQ,EAAR,8CAEQ,EAAR,aACQ,EAAR,uBACA,yCAEQ,EAAR,aACQ,EAAR,uBACA,yCACQ,EAAR,aAEQ,EAAR,gBAQM,IAHA,IAAN,OAEA,KACA,cACQ,EAAR,sBAMM,IAFA,IAAN,IACA,IACA,YACQ,EAAR,WACQ,EAAR,WACQ,GAAR,oBACQ,GAAR,oBAEQ,EAAR,UAKI,IAlEJ,eAkEA,GACM,YAAN,WACQ,MACR,GAEM,YAAN,WACQ,EAAR,OACA,IAPA,iBAYI,OAFAvM,QAAQiH,IAAIuF,KAAKC,MAAQ/J,EAAQ,4BAE1BxD,EAGX,WACA,KAEA,aACIwN,IACAxB,IACAyB,IAGJ,aACQC,IACF,cAAN,GACM,GAAN,EAEM,EAAN,EACM,EAAN,SAIA,aACIF,IAEA,IAAJ,MACIG,YAAW,WACT,EAAN,uBACA,GAEIC,EAAYC,aAAY,WAC5B,MACA,IAEM,GAAN,EAEA,GACA,UAGM,IADA,IAAN,QACA,aACQ,IAAR,IACA,IACA,MACU,EAAV,WACU,EAAV,YAEQ,IAAR,WACA,aASQ,GAPA,EAAR,UACQ,EAAR,iBACA,aAEQ,EAAR,gBACQ,EAAR,sBAEA,QACU,IAAV,YACA,IACA,IACA,MACY,EAAZ,WACY,EAAZ,YAEU,IAAV,WACA,aAEU,EAAV,YACU,EAAV,iBACA,cAMM,GAAN,SACA,GAGA/M,QAAA,0BACA2M,IC70BkW,UCO9V,GAAY,eACd,GACA,GACA,IACA,EACA,KACA,WACA,MAIa,M,QCLfK,OAAIC,IAAIC,QACR,IAAMC,GAAS,IAAID,OAAU,CACzBE,OAAQ,CACJ,CAAEC,KAAM,IAAKrO,UAAWsO,GACxB,CAAED,KAAM,SAAUrO,UAAWuO,GAC7B,CAAEF,KAAM,mBAAoBrO,UAAWwO,GACvC,CAAEH,KAAM,SAAUrO,UAAWyO,GAC7B,CAAEJ,KAAM,qBAAsBrO,UAAW0O,GACzC,CAAEL,KAAM,oBAAqBrO,UAAW2O,GACxC,CAAEN,KAAM,qBAAsBrO,UAAW4O,IACzC,CAAEP,KAAM,cAAerO,UAAW6O,OAI3BV,MCvBfH,OAAIc,OAAOC,eAAgB,EAE3B,IAAIf,OAAI,CACNG,UACAa,OAAQ,SAAAC,GAAC,OAAIA,EAAEC,MACdC,OAAO,S,kCCTV,yBAAggB,EAAG,G,oCCAngB,yBAAoe,EAAG,G,oCCAve,yBAA+f,EAAG,G,kFCAlgB,yBAAsf,EAAG,G,qBCAzf7R,EAAOD,QAAU,IAA0B,kC,qBCA3CC,EAAOD,QAAU,IAA0B,4B,qBCA3CC,EAAOD,QAAU,IAA0B,4B","file":"js/app.1e8fffce.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","module.exports = __webpack_public_path__ + \"img/pendulum.63d118d3.png\";","module.exports = __webpack_public_path__ + \"img/cramers_rule1.66d73901.svg\";","module.exports = __webpack_public_path__ + \"img/monster_equations.d4446825.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',[_c('router-link',{attrs:{\"to\":\"/\"}},[_c('span',{staticClass:\"circle\"}),_c('div',{attrs:{\"id\":\"name\"}},[_vm._v(\"Sam Maksimovich\")])]),_c('div',{attrs:{\"id\":\"about\"}},[_vm._v(\"CS student and recreational mathematician\")]),_c('router-link',{staticClass:\"link\",staticStyle:{\"margin-top\":\"5px\"},attrs:{\"id\":\"more_about\",\"to\":\"/about\"}},[_vm._v(\" More about me \")])],1),_c('span',{staticClass:\"divider\"}),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n      <div>\n        <router-link to=\"/\">\n            <span class=\"circle\"></span>\n            <div id=\"name\">Sam Maksimovich</div>\n        </router-link>\n        <div id=\"about\">CS student and recreational mathematician</div>\n\n        <router-link style=\"margin-top: 5px;\" id=\"more_about\" class=\"link\" to=\"/about\"> More about me </router-link>\n      </div>\n      <span class=\"divider\"></span>\n      <router-view></router-view>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n  mounted: () => {\n    \n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Tajawal', Helvetica, Arial, sans-serif;\n  font-size: 14pt;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  margin-top: 60px;\n\n  display: flex;\n  justify-content: center;\n}\n\n.circle {\n    height: 150px;\n    width: 150px;\n    background-color: #ffcc99;\n    border-radius: 50%;\n    display: inline-block;\n}\n\n.divider {\n    width: 1px;\n    background-color: gainsboro;\n    border-radius: 20px;\n    margin-left: 15px;\n    margin-right: 15px;\n}\n\n#name {\n    margin-top: 15px;\n    font-family: Monospace;\n    font-weight: lighter;\n    font-size: 19pt;\n}\n\n#about, #more_about {\n    font-size: 12pt;\n    font-family: Monospace;\n    width: 250px;\n    margin-top: 5px;\n}\n\na {\n    text-decoration: none;\n}\n\na:visited {\n    color: initial;\n}\n\n.link {\n    color:goldenrod;\n}\n\n.link:visited {\n    color:goldenrod;\n}\n\n.link:hover {\n    color: #ffcc99;\n}\n\n.link:active {\n    color: blue;\n}\n\n.title {\n    font-weight: lighter;\n    font-size: 20pt;\n    text-align: left;\n}\n\n.date {\n    margin-top: 5px;\n    font-weight: lighter;\n    font-size: 12pt;\n    text-align: left;\n    color: grey;\n}\n\n.content {\n    margin-top: 15px;\n    min-width: 800px;\n    max-width: 1000px;\n    text-align: left;\n    line-height: 150%;\n}\n\n.quote {\n\tfont-family: 'Nunito', san-serif;\n\tfont-style: italic; \n\tbackground: #EEEEEE;  \n\tdisplay: table; \n\tpadding: 2px\n}\n\n.customButton {\n  background-color: #0079F2;\n  font-family: \"Tajawal\", serif; \n  font-size: 1em;\n  border: 2px solid transparent;\n  border-radius: 4px;\n  padding: 5px;\n  color: whitesmoke;\n}\n\n.customButton:hover {\n  background-color: #1785F3;\n}\n\n.customButton:active {\n  background-color: #2E91F4;\n}\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=54b19a13&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"title\"},[_vm._v(\" About \")]),_c('div',{staticClass:\"content\"},[_vm._v(\" Hi and welcome. \"),_c('br'),_c('br'),_vm._v(\" This is a personal blog of sorts; a collection of various personal obessions and things I find interesting. Sometimes I when have a question or idea or thought that I want to explore and fulfill, I will sit down and do the math, then write a small program to visualize my results. \"),_c('br'),_c('br'),_vm._v(\" This blog also serves to document my journey as a programmer. For example, this site was created very innocently, using a simple system of html files and native javascript with no outside libraries. It is now a single page app using Vue, and also makes use of some helpful JS frameworks in my projects, such as p5.js and MathJax. \")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div>\n      <div class=\"title\"> About </div>\n      <div class=\"content\">\n            Hi and welcome.\n\n            <br>\n            <br>\n          \n            This is a personal blog of sorts; a collection of various personal obessions and things I find interesting. \n            Sometimes I when have a question or idea or thought that I want to explore and fulfill, I will sit down and do the math, then\n            write a small program to visualize my results. \n            \n            <br>\n            <br>\n            This blog also serves to document my journey as a programmer. For example, this site was created very innocently, using \n            a simple system of html files and native javascript with no outside libraries. It is now a single page app using Vue, and\n            also makes use of some helpful JS frameworks in my projects, such as p5.js and MathJax.\n      </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'About'\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=a9200b2a&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"title\"},[_vm._v(\" Projects \")]),_c('div',{staticClass:\"content\"},[_c('router-link',{attrs:{\"to\":\"/n_pendulum\"}},[_c('div',{staticClass:\"page-link\"},[_c('span',{staticClass:\"page-title\"},[_vm._v(\"N Pendulum\")]),_c('div',{staticClass:\"page-date\"},[_vm._v(\"August 17th, 2019\")]),_c('div',{staticClass:\"page-desc\"},[_vm._v(\" I simulate a chaotic N pendulum system \")])])]),_c('router-link',{attrs:{\"to\":\"/infinite_polygons\"}},[_c('div',{staticClass:\"page-link\"},[_c('span',{staticClass:\"page-title\"},[_vm._v(\"Infinite Polygons\")]),_c('div',{staticClass:\"page-date\"},[_vm._v(\"July 6th, 2019\")]),_c('div',{staticClass:\"page-desc\"},[_vm._v(\" I explore an interesting geometric pattern and unsolved infinite product \")])])]),_c('router-link',{attrs:{\"to\":\"/forces_simulator\"}},[_c('div',{staticClass:\"page-link\"},[_c('span',{staticClass:\"page-title\"},[_vm._v(\"Forces Simulator\")]),_c('div',{staticClass:\"page-date\"},[_vm._v(\"May 2nd, 2019\")]),_c('div',{staticClass:\"page-desc\"},[_vm._v(\" I created a way to simulate the path any projectile takes given its forces \")])])]),_c('router-link',{attrs:{\"to\":\"/orbital_mechanics\"}},[_c('div',{staticClass:\"page-link\"},[_c('span',{staticClass:\"page-title\"},[_vm._v(\"Orbital Mechanics\")]),_c('div',{staticClass:\"page-date\"},[_vm._v(\"December 15th, 2018\")]),_c('div',{staticClass:\"page-desc\"},[_vm._v(\" I explore trajectories of the 2 body problem \")])])]),_c('router-link',{attrs:{\"to\":\"/snake\"}},[_c('div',{staticClass:\"page-link\"},[_c('span',{staticClass:\"page-title\"},[_vm._v(\"Snake\")]),_c('div',{staticClass:\"page-date\"},[_vm._v(\"June 29rd, 2018\")]),_c('div',{staticClass:\"page-desc\"},[_vm._v(\" I did a speed run coding snake \")])])]),_c('router-link',{attrs:{\"to\":\"/rotating_solids\"}},[_c('div',{staticClass:\"page-link\"},[_c('span',{staticClass:\"page-title\"},[_vm._v(\"Rotating 3D Solids\")]),_c('div',{staticClass:\"page-date\"},[_vm._v(\"June 3rd, 2018\")]),_c('div',{staticClass:\"page-desc\"},[_vm._v(\" Here I create an animation of a rotating platonic solid using Javascript\")])])])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n      <div class=\"title\"> Projects </div>\r\n      <div class=\"content\">\r\n\r\n        <router-link to=\"/n_pendulum\">\r\n          <div class=\"page-link\">\r\n              <span class=\"page-title\">N Pendulum</span>\r\n              <div class=\"page-date\">August 17th, 2019</div>\r\n              <div class=\"page-desc\"> I simulate a chaotic N pendulum system </div>\r\n          </div>\r\n        </router-link>\r\n        <router-link to=\"/infinite_polygons\">\r\n          <div class=\"page-link\">\r\n              <span class=\"page-title\">Infinite Polygons</span>\r\n              <div class=\"page-date\">July 6th, 2019</div>\r\n              <div class=\"page-desc\"> I explore an interesting geometric pattern and unsolved infinite product </div>\r\n          </div>\r\n        </router-link>\r\n        <router-link to=\"/forces_simulator\">\r\n          <div class=\"page-link\">\r\n              <span class=\"page-title\">Forces Simulator</span>\r\n              <div class=\"page-date\">May 2nd, 2019</div>\r\n              <div class=\"page-desc\"> I created a way to simulate the path any projectile takes given its forces </div>\r\n          </div>\r\n        </router-link>\r\n        <router-link to=\"/orbital_mechanics\">\r\n          <div class=\"page-link\">\r\n              <span class=\"page-title\">Orbital Mechanics</span>\r\n              <div class=\"page-date\">December 15th, 2018</div>\r\n              <div class=\"page-desc\"> I explore trajectories of the 2 body problem </div>\r\n          </div>\r\n        </router-link>\r\n        <router-link to=\"/snake\">\r\n          <div class=\"page-link\">\r\n              <span class=\"page-title\">Snake</span>\r\n              <div class=\"page-date\">June 29rd, 2018</div>\r\n              <div class=\"page-desc\"> I did a speed run coding snake </div>\r\n          </div>\r\n        </router-link>\r\n        <router-link to=\"/rotating_solids\">\r\n          <div class=\"page-link\">\r\n              <span class=\"page-title\">Rotating 3D Solids</span>\r\n              <div class=\"page-date\">June 3rd, 2018</div>\r\n              <div class=\"page-desc\"> Here I create an animation of a rotating platonic solid using Javascript</div>\r\n          </div>\r\n        </router-link>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Index'\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.page-link {\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    border-top: 1px solid gainsboro;\r\n    color: black;\r\n}\r\n\r\n.page-link:hover {\r\n    background-color: #ebebeb;\r\n    cursor: pointer;\r\n}\r\n\r\n.page-title {\r\n    font-size: 17pt;\r\n    font-weight: 100;\r\n}\r\n\r\n.page-date {\r\n    font-size: 12pt;\r\n    color: grey;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=0e806aa4&scoped=true&\"\nimport script from \"./Index.vue?vue&type=script&lang=js&\"\nexport * from \"./Index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=0e806aa4&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0e806aa4\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"title\"},[_vm._v(\" Rotating 3D Solids \")]),_c('div',{staticClass:\"date\"},[_vm._v(\" June 3rd, 2018 \")]),_c('div',{staticClass:\"content\"},[_c('div',{staticStyle:{\"float\":\"right\",\"margin-bottom\":\"1em\"}},[_c('canvas',{staticStyle:{\"cursor\":\"pointer\"},attrs:{\"width\":\"500px\",\"height\":\"400px\",\"id\":\"blog1\"}}),_c('div',{staticStyle:{\"text-align\":\"center\",\"margin\":\"0 0 0 0\"},attrs:{\"id\":\"blog1shapeName\"}},[_vm._v(\"Isosahedron\")]),_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"},attrs:{\"id\":\"blog1controls\"}},[_c('div',{staticClass:\"triangle-left\"}),_c('div',{staticClass:\"circle\",staticStyle:{\"margin\":\"2px 1em 0 1em\"}}),_c('div',{staticClass:\"triangle-right\"})])]),_vm._v(\" This took me way too long to make. I came across a cool gif of a isosahedron and wanted to see if I could recreate it. I added more features: there are more shapes to look at using the controls at the bottom and the user is also able to drag around the shape and rotate it themselves. \"),_c('br'),_vm._v(\" To create this, I needed the \"),_c('a',{staticClass:\"visibleLink\",attrs:{\"href\":\"https://en.wikipedia.org/wiki/Platonic_solid#Cartesian_coordinates\"}},[_vm._v(\"coordinates\")]),_vm._v(\" of the 5 platonic solids first. In creating this rotatable interface, the hard part was not rotating the coordinates, as I thought it would be. Instead, the hardest part was creating a method which fills each face of the shape in the correct order. Looking back, it is really simple; the faces which are furthest from the viewer (have the highest z-coordinates) are drawn first. This way the nearest faces are drawn on top of the faces behind it. In this 3D coordinate system, positive z corresponds to the direction facing into the screen. The source code can be found by inspecting the canvas element, it is by no means perfect or best implementation. \"),_c('br'),_vm._v(\" I feel so accomplished creating this interface, but I know nobody will probably be reading this. It was quite interesting to read about and finally implement. I never expected the golden ratio, \"),_c('a',{staticClass:\"visibleLink\",attrs:{\"href\":\"https://en.wikipedia.org/wiki/Golden_ratio\"}},[_vm._v(\"φ\")]),_vm._v(\", to appear in these shapes. I guess it may be one of the reasons an isosahedron looks so aesthetically pleasing to my eyes. Moreover, it is also weirdly interesting how these shapes appear naturally in chemistry simply because it is an efficient mathematical way to arrange points (\"),_c('a',{staticClass:\"visibleLink\",attrs:{\"href\":\"https://en.wikipedia.org/wiki/Dodecahedrane\"}},[_vm._v(\"Dodecahedrane, C\"),_c('sub',[_vm._v(\"20\")]),_vm._v(\"H\"),_c('sub',[_vm._v(\"20\")])]),_vm._v(\"). \")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n      <div class=\"title\"> Rotating 3D Solids </div>\r\n      <div class=\"date\"> June 3rd, 2018 </div>\r\n\r\n      <div class=\"content\">\r\n        \r\n        <div style=\"float: right; margin-bottom: 1em;\">\r\n            <canvas style=\"cursor: pointer;\" width=\"500px\" height=\"400px\" id=\"blog1\"></canvas>\r\n            <div style=\"text-align: center; margin: 0 0 0 0\" id=\"blog1shapeName\">Isosahedron</div>\r\n            <div style=\"display: flex; justify-content: center\" id=\"blog1controls\">\r\n                <div class=\"triangle-left\"></div>\r\n                <div class=\"circle\" style=\"margin: 2px 1em 0 1em\"></div>\r\n                <div class=\"triangle-right\"></div>\r\n            </div>\r\n        </div>\r\n        &emsp;&emsp;This took me way too long to make. I came across a cool gif of a isosahedron and wanted to\r\n         see if I could recreate it. I added more features: there are more shapes to look at using the controls at \r\n         the bottom and the user is also able to drag around the shape and rotate it themselves.\r\n         \r\n         <br>\r\n         &emsp;&emsp;To create this, I needed the \r\n         <a class=\"visibleLink\" href=\"https://en.wikipedia.org/wiki/Platonic_solid#Cartesian_coordinates\">coordinates</a> \r\n         of the 5 platonic solids first. In creating this rotatable interface, the hard part was not rotating the coordinates, \r\n         as I thought it would be. Instead, the hardest part was creating a method which fills each face of the shape in the correct \r\n         order. Looking back, it is really simple; the faces which are furthest from the viewer (have the highest z-coordinates) \r\n         are drawn first. This way the nearest faces are drawn on top of the faces behind it. In this 3D coordinate system, \r\n         positive z corresponds to the direction facing into the screen. The source code can be found by inspecting the canvas\r\n          element, it is by no means perfect or best implementation.\r\n          \r\n        <br\r\n        >&emsp;&emsp;I feel so accomplished creating this interface, but I know nobody will probably be reading this.\r\n        It was quite interesting to read about and finally implement. I never expected the golden ratio, \r\n        <a class=\"visibleLink\" href=\"https://en.wikipedia.org/wiki/Golden_ratio\">φ</a>, to appear in these shapes. I guess it may\r\n        be one of the reasons an isosahedron looks so aesthetically pleasing to my eyes. Moreover, it is also weirdly interesting\r\n        how these shapes appear naturally in chemistry simply because it is an efficient mathematical way to arrange points\r\n        (<a class=\"visibleLink\" href=\"https://en.wikipedia.org/wiki/Dodecahedrane\">Dodecahedrane, C<sub>20</sub>H<sub>20</sub></a>).\r\n\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'RotatingSolids',\r\n  mounted: () => {\r\n\r\n// Rotates point(x, y) given angle\r\nfunction rotateCoord(ax, ay, x, y, angle) {\r\n    x -= ax; y -= ay;\r\n    let r = Math.sqrt((x * x) + (y * y));\r\n    let fin = angle + Math.atan2(y, x);\r\n    return {x: ax + r * Math.cos(fin), y: ay + r * Math.sin(fin)}\r\n}\r\n\r\n// Create 3D vector\r\nfunction v(x, y, z) {\r\n    return {x: x, y: y, z: z};\r\n}\r\n\r\n// Encapsulates Platonic Solid\r\nclass Solid {\r\n    // nOfLinks = q of its Schläfli symbol\r\n    constructor(points, nOfLinks, faces) {\r\n        this.points = points;\r\n        this.edges = [];\r\n        this.faces = faces;\r\n        let distance = (p1, p2) => Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2) + Math.pow(p1.z - p2.z, 2));\r\n        let hasEdge = (array, e) => {\r\n            if (array.includes(e))\r\n                return true;\r\n            for (let a of array) {\r\n                if (a[0] == e[0] && a[1] == e[1])\r\n                    return true;\r\n            } \r\n            return false;\r\n        };\r\n        for (let point of points) {\r\n            let otherPoints = points.filter(p => p !== point);\r\n\r\n            for (let x = 0; x < nOfLinks; x++) {\r\n                let closestPoint = otherPoints.reduce((a, b) => (distance(a, point) < distance(b, point)) ? a : b);\r\n                let edge = [points.indexOf(point), points.indexOf(closestPoint)];\r\n                if (!this.edges.includes(edge) && !hasEdge(this.edges, [edge[1], edge[0]])) \r\n                    this.edges.push(edge);\r\n                otherPoints = otherPoints.filter(p => p !== closestPoint);\r\n            }\r\n        }\r\n    }\r\n\r\n    drawSolid(cx, x, y, scale) {\r\n        cx.translate(x, y);\r\n        cx.fillStyle = \"blue\";\r\n        let points = this.points.map(n => {return {x:scale*n.x,y:scale*n.y, z:scale*n.z}});\r\n        for (let p of points) {\r\n            cx.beginPath();\r\n            cx.arc(p.x, p.y, 1, 0, 7);\r\n            cx.fillText(points.indexOf(p), p.x, p.y - 13);\r\n            cx.stroke();\r\n        }\r\n        cx.resetTransform();\r\n    }\r\n\r\n    drawSolidEdges(cx, x, y, scale, edges = this.edges) {\r\n        cx.translate(x, y);\r\n        let points = this.points.map(n => {return {x:scale*n.x,y:scale*n.y, z:scale*n.z}});\r\n        for (let e of edges) {\r\n        cx.beginPath();\r\n        cx.moveTo(points[e[0]].x, points[e[0]].y);\r\n        cx.lineTo(points[e[1]].x, points[e[1]].y);\r\n        cx.stroke();\r\n        }\r\n        cx.resetTransform();\r\n    }\r\n\r\n    drawFaces(cx, x, y, scale) {\r\n        let compareZ = (a, b) => {\r\n        let minA = a.reduce((c, n) => c + this.points[n].z, 0);\r\n        let minB = b.reduce((c, n) => c + this.points[n].z, 0);\r\n        return (minA < minB) ? 1 : -1;\r\n        };\r\n        cx.translate(x, y);\r\n        let points = this.points.map(n => {return {x:scale*n.x,y:scale*n.y, z:scale*n.z}});\r\n        for (let face of this.faces.sort(compareZ)) {\r\n        let light = 255 * ((this.faces.indexOf(face)) / this.faces.length);\r\n        cx.fillStyle = `rgb(${light}, ${light}, ${light})`;\r\n        cx.beginPath();\r\n        cx.moveTo(points[face[0]].x, points[face[0]].y)\r\n        for (let n = 1; n < face.length; n++)\r\n            cx.lineTo(points[face[n]].x, points[face[n]].y);\r\n        cx.closePath();\r\n        cx.fill();\r\n        }\r\n        cx.resetTransform();\r\n    }\r\n}\r\n\r\nfunction rotateAnimation(time, lastTime) {\r\n    if (!lastTime) lastTime = time;\r\n    if (decelerate) accel -= 0.008 * (time - lastTime);\r\n    if (accel <= 0) {\r\n        animRotate = null;\r\n        return;\r\n    }\r\n    let angle = (Math.PI / 500) * accel;\r\n    for (let n of t.points) {\r\n        let newXZ = rotateCoord(0, 0, n.x, n.z, x * angle);\r\n        let newYZ = rotateCoord(0, 0, newXZ.y, n.y, -y * angle);\r\n        t.points[t.points.indexOf(n)] = v(newXZ.x, newYZ.y, newYZ.x);\r\n    }\r\n    drawT();\r\n    animRotate = requestAnimationFrame(newTime => rotateAnimation(newTime, time, x, y));\r\n}\r\n\r\nfunction drawT() {\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    if (drawEdges) {\r\n        t.drawSolidEdges(context, canvas.width / 2, canvas.height / 2, canvas.width / 5, t.edges.filter(edge => (t.points[edge[0]].z + t.points[edge[1]].z) >= 0));\r\n        t.drawSolid(context, canvas.width / 2, canvas.height / 2, canvas.width / 5);\r\n    }\r\n    t.drawFaces(context, canvas.width / 2, canvas.height / 2, canvas.width / 10);\r\n    if (drawEdges)\r\n        t.drawSolidEdges(context, canvas.width / 2, canvas.height / 2, canvas.width / 5, t.edges.filter(edge => (t.points[edge[0]].z + t.points[edge[1]].z) < 0));\r\n}\r\n\r\n      let canvas = document.querySelector(\"canvas\");\r\nlet context = canvas.getContext(\"2d\");\r\nlet p = (1 + Math.sqrt(5)) / 2; // Golden ratio\r\n\r\nlet decelerate = false;\r\nlet tetrahedron = new Solid([v(1, 1, 1), v(1, -1, -1), v(-1, 1, -1), v(-1, -1, 1)], 3, [[2, 1, 3], [2, 0, 1], [2, 0, 3], [1, 0, 3]]);\r\nlet cube = new Solid([v(-1, -1, -1), v(1, 1, 1), v(-1, 1, -1), v(-1, 1, 1), v(1, 1, -1), v(1, -1, 1), v(1, -1, -1), v(-1, -1, 1)], 3, [[0, 6, 5, 7], [0, 2, 4, 6], [0, 7, 3, 2], [1, 3, 2, 4], [1, 4, 6, 5], [1, 5, 7, 3]]);\r\nlet octahedron = new Solid([v(1, 0, 0), v(-1, 0, 0), v(0, 1, 0), v(0, -1, 0), v(0, 0, 1), v(0, 0, -1)], 4, [[3, 4, 0], [3, 0, 5], [3, 5, 1], [3, 1, 4], [2, 0, 4], [2, 4, 1], [2, 1, 5], [2, 5, 0]])\r\nlet isosahedron = new Solid([v(0, 1, p), v(0, -1, -p), v(0, 1, -p), v(0, -1, p), v(1, p, 0), v(-1, -p, 0), v(1, -p, 0), v(-1, p, 0), v(p, 0, 1), v(-p, 0, -1), v(-p, 0, 1), v(p, 0, -1)], 5, [[7, 9, 2], [7, 10, 9], [7, 0, 10], [7, 4, 0], [7, 2, 4], [2, 9, 1], [2, 1, 11], [2, 11, 4], [9, 5, 10], [8, 4, 11], [8, 11, 6], [8, 6, 3], [8, 3, 0], [8, 0, 4], [6, 11, 1], [6, 1, 5], [6, 5, 3], [3, 0, 10], [3, 10, 5], [1, 9, 5]]);\r\nlet dodecahedron = new Solid([v(1, 1, 1), v(-1, 1, 1), v(-1, -1, 1), v(-1, -1, -1), v(1, -1, 1),v(1, -1, -1), v(-1, 1, -1), v(1, 1, -1), v(0, 1/p, p), v(0, -1/p, -p), v(0, -1/p, p), v(0, 1/p, -p), v(1/p, p, 0), v(-1/p, -p, 0), v(1/p, -p, 0), v(-1/p, p, 0), v(p, 0, 1/p), v(-p, 0, -1/p), v(-p, 0, 1/p), v(p, 0, -1/p)], 3, [[1, 18, 2, 10, 8], [19, 5, 9, 11, 7], [19, 16, 4, 14, 5], [16, 4, 10, 8, 0], [4, 10, 2, 13, 14], [14, 5, 9, 3, 13], [2, 13, 3, 17, 18], [3, 9, 11, 6, 17], [1, 18, 17, 6, 15], [12, 7, 11, 6, 15], [15, 1, 8, 0, 12], [12, 7, 19, 16, 0]]);\r\nlet custom = new Solid([v(1, 0, 0), v(-1, 0, 0), v(0, 1, 0),v(0, -1, 0),v(0.707, 0.707, 0), v(-0.707, 0.707, 0), v(-0.707, -0.707, 0), v(0.707, -0.707, 0),v(0, 0, -1), v(0, 0, 1), v(0, 0.707, 0.707), v(0, -0.707, 0.707), v(0, -0.707, -0.707), v(0, 0.707, -0.707),v(0.707, 0, 0.707), v(-0.707, 0, 0.707),v(-0.707, 0, -0.707),v(0.707, 0, -0.707)], 4, [[9, 14, 10],[9, 11, 14],[9, 11, 15],[9, 10, 15],[8, 12, 17],[8, 13, 17],[8, 13, 16],[8, 16, 12],[1, 5, 15],[1, 16, 6],[1, 5, 16],[1, 6, 15],[2, 4, 17, 13],[2, 10, 14, 4],[2, 5, 15, 10],[2, 13, 16, 5],[3, 12, 17, 7],[3, 7, 14, 11],[3, 11, 15, 6],[3, 6, 16, 12],[0, 14, 4],[0, 14, 7],[0, 7, 17],[0, 4, 17]]);\r\nlet t = isosahedron;\r\nlet solids = [custom, tetrahedron, cube, octahedron, isosahedron, dodecahedron];\r\nlet names = [\"Custom Shape\", \"Tetrahedron\", \"Cube\", \"Octahedron\", \"Isosahedron\", \"Dodecahedron\"]\r\nlet drawEdges = true;\r\ncontext.strokeStyle = \"red\";\r\nlet angle = (Math.PI / 50);\r\nfor (let n of t.points) {\r\n    let newXZ = rotateCoord(0, 0, n.x, n.z, angle);\r\n    let newYZ = rotateCoord(0, 0, newXZ.y, n.y, -angle);\r\n    t.points[t.points.indexOf(n)] = v(newXZ.x, newYZ.y, newYZ.x);\r\n}\r\ndrawT();\r\n\r\nlet last = {x: null, y: null};\r\nlet accel = 2;\r\nlet x = 0.707, y = 0.5;\r\nlet animRotate = requestAnimationFrame((time) => rotateAnimation(time, 0));\r\n\r\nlet shapeName = document.querySelector(\"#blog1shapeName\");\r\nlet controls = document.querySelector(\"#blog1controls\").children;\r\ncontrols[1].addEventListener(\"click\", () => {\r\ndrawEdges = !drawEdges;\r\ndrawT();\r\nconsole.log(t.points);\r\nif (drawEdges) {\r\n    decelerate = false;\r\n    controls[1].style[\"border-color\"] = \"steelblue\";\r\n    controls[1].style.background = \"steelblue\";\r\n}\r\nelse {\r\n    decelerate = true;\r\n    controls[1].style[\"border-color\"] = \"rgb(173, 173, 173)\";\r\n    controls[1].style.background = \"rgb(173, 173, 173)\";\r\n}\r\n});\r\ncontrols[0].addEventListener(\"click\", () => {\r\nlet index = (solids.indexOf(t) - 1);\r\nt = solids[(index < 0) ? solids.length - 1 : index];\r\nshapeName.innerHTML = names[index];\r\ndrawT();\r\n});\r\ncontrols[2].addEventListener(\"click\", () => {\r\nt = solids[(solids.indexOf(t) + 1) % solids.length];\r\nshapeName.innerHTML = names[solids.indexOf(t)];\r\ndrawT();\r\n});\r\n\r\ncanvas.addEventListener(\"mousedown\", event => {\r\ncancelAnimationFrame(animRotate);\r\nanimRotate = null;\r\nlast.x = event.clientX;\r\nlast.y = event.clientY;\r\n});\r\ncanvas.addEventListener(\"mousemove\", event => {\r\nif (event.buttons != 1)\r\n    return;\r\nlet distance = {x: event.clientX - last.x, y: event.clientY - last.y};\r\nlast.x = event.clientX; last.y = event.clientY;\r\naccel = 5;\r\nx = distance.x; y = distance.y;\r\nif (animRotate == null)\r\n    animRotate = requestAnimationFrame((time) => rotateAnimation(time, 0));\r\n});\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.triangle-left, .triangle-right{\r\n\tborder-top: 10px solid transparent;\r\n\tborder-bottom: 10px solid transparent;\r\n\tcursor: pointer;\r\n}\r\n\r\n.triangle-left:hover {\r\n\tborder-right: 20px solid black;\r\n}\r\n\r\n.triangle-right:hover {\r\n\tborder-left: 20px solid black;\r\n}\r\n\r\n.triangle-left {\r\n\tborder-right: 20px solid gray;\r\n}\r\n\r\n.triangle-right {\r\n\tborder-left: 20px solid gray;\r\n}\r\n\r\n.circle {\r\n\twidth: 10px;\r\n    height: 10px;\r\n    border-radius: 50%;\r\n    border-style: solid;\r\n    border-color: steelblue;\r\n    background: steelblue;\r\n    cursor: pointer;\r\n}\r\n\r\n.visibleLink {\r\n\tcolor: royalblue;\r\n}\r\n\r\n.visibleLink:hover {\r\n\tcolor: purple;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RotatingSolids.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RotatingSolids.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RotatingSolids.vue?vue&type=template&id=194290c6&scoped=true&\"\nimport script from \"./RotatingSolids.vue?vue&type=script&lang=js&\"\nexport * from \"./RotatingSolids.vue?vue&type=script&lang=js&\"\nimport style0 from \"./RotatingSolids.vue?vue&type=style&index=0&id=194290c6&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"194290c6\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"title\"},[_vm._v(\" Snake \")]),_c('div',{staticClass:\"date\"},[_vm._v(\" June 29th, 2018 \")]),_c('div',{staticClass:\"content\"},[_c('p',[_vm._v(\"There was this video (which I did not actually watch lol), titled \\\"Coding Snake in less than 5 minutes\\\", leading me to wonder how fast I could do it. It took me something under an hour and I am pretty satisfied with how it turned out\")]),_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{staticStyle:{\"display\":\"table\",\"position\":\"relative\",\"margin\":\"5px auto\",\"font\":\"15px monospace\",\"color\":\"black\"},attrs:{\"id\":\"score\"}},[_vm._v(\"Score: 0\")]),_c('div',{attrs:{\"id\":\"start\"}},[_vm._v(\"Press space to start\")]),_c('canvas',{staticStyle:{\"display\":\"block\",\"margin\":\"0px auto\",\"height\":\"500px\",\"width\":\"500px\"},attrs:{\"id\":\"game\"}})])])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n      <div class=\"title\"> Snake </div>\r\n      <div class=\"date\"> June 29th, 2018 </div>\r\n\r\n      <div class=\"content\">\r\n        \r\n\t\t<p>There was this video (which I did not actually watch lol), titled \"Coding Snake in less than 5 minutes\", leading me to wonder how fast I could do it. It took me something under an hour and I am pretty satisfied with how it turned out</p>\r\n\t\t\r\n\t\t<div style=\"position: relative;\">\r\n\t\t\t<div style=\"display: table; position: relative; margin: 5px auto; font: 15px monospace; color: black;\" id=\"score\">Score: 0</div>\r\n\t\t\t<div id=\"start\">Press space to start</div>\r\n\t\t\t<canvas style=\"display: block; margin: 0px auto; height: 500px; width: 500px;\" id=\"game\"></canvas>\r\n\t\t</div>\r\n\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'Snake',\r\n  mounted: () => {\r\n      do_js();\r\n  }\r\n}\r\n\r\nfunction do_js() {\r\nvar canvas = document.getElementById(\"game\");\r\nvar cx = canvas.getContext(\"2d\");\r\n\r\nconst colorDead = \"#3d1c33\";\r\nconst colorSnake = \"#daddd8\";\r\nconst colorFood = \"#ffaae5\";\r\nconst colorHead = \"#9fa09d\";\r\n\r\nvar grid = [];\r\nvar gridSize = 25;\r\nvar blockBorder = 0.5;\r\nvar blockLength = canvas.height / gridSize;\r\nvar snakeLength = 2;\r\nvar food = undefined;\r\nvar snake = undefined;\r\nvar direction = 0;\r\nvar startScreen = document.getElementById(\"start\");\r\nvar score = document.getElementById(\"score\");\r\nvar foodEaten = 0;\r\n\r\nvar keyEvents = []; // key event queue\r\n\r\nfunction newGame() {\r\n\tkeyEvents.length = 0; // reset any recorded keys from last game\r\n\tfoodEaten = 0;\r\n\tfor (let y = 0; y < gridSize; y++) {\r\n\t\tfor (let x = 0; x < gridSize; x++) {\r\n\t\t\tif (!grid[y]) grid[y] = [];\r\n\t\t\tgrid[y][x] = false;\r\n\t\t}\r\n\t}\r\n\tfood = [Math.floor(Math.random() * gridSize), Math.floor(Math.random() * gridSize)]; // y, x\r\n\tgrid[food[0]][food[1]] = \"food\";\t\t\t\r\n\tlet rand = [Math.floor(Math.random() * (gridSize - 6)) + snakeLength, Math.floor(Math.random() * (gridSize - 4)) + 2]; // y, x\r\n\tgrid[rand[0]][rand[1]] = \"head\";\r\n\tsnake = [rand[0], rand[1]]; // [y1, x1, y2, x2...]\r\n\tdirection = 0; // of tail; 1 = N, 2 = E...\r\n\tif (rand[0] - snakeLength >= 0) {\r\n\t\tdirection = 1;\r\n\t\tfor (let n = 1; n <= snakeLength; n++) { \r\n\t\t\tgrid[rand[0] - n][rand[1]] = \"snake\";\r\n\t\t\tsnake.push(rand[0] - n);\r\n\t\t\tsnake.push(rand[1]);\r\n\t\t}\r\n\t}\r\n\telse throw new Error(\"impossible start\");\r\n\tdirection = (direction + 2) % 4; // 180 rotate direction; now the true direction of the head\r\n}\r\n\r\nnewGame();\r\n\t\t\r\nwindow.addEventListener(\"keydown\", event => {\r\n\tlet lastEvent = (keyEvents.length > 0) ? keyEvents[keyEvents.length - 1] : undefined;\r\n\tif (event.key == \"ArrowUp\" && direction != 1 && direction != 3 && lastEvent != 3) keyEvents.push(1);\r\n\telse if (event.key == \"ArrowRight\" && direction != 2 && direction != 4 && lastEvent != 4) keyEvents.push(2);\r\n\telse if (event.key == \"ArrowDown\" && direction != 3 && direction != 1 && lastEvent != 1) keyEvents.push(3);\r\n\telse if (event.key == \"ArrowLeft\" && direction != 4 && direction != 2 && lastEvent != 2) keyEvents.push(4);\r\n\tevent.preventDefault();\r\n});\r\n\r\nfunction onResize() {\r\n\tcanvas.width = canvas.offsetHeight;\r\n\tcanvas.height = canvas.offsetHeight;\r\n\tblockLength = canvas.height / gridSize;\r\n\tdrawGrid();\r\n}\r\nonResize();\r\nwindow.addEventListener(\"resize\", onResize);\r\n\r\nfunction drawGrid() {\r\n\tscore.innerHTML = \"Score: \" + foodEaten;\r\n\tcx.clearRect(0, 0, canvas.width, canvas.height);\r\n\tfor (let y = 0; y < gridSize; y++) {\r\n\t\tfor (let x = 0; x < gridSize; x++) {\r\n\t\t\tif (grid[y][x] == \"head\") cx.fillStyle = colorHead;\r\n\t\t\telse if (grid[y][x] == \"food\") cx.fillStyle = colorFood;\r\n\t\t\telse if (grid[y][x] == \"snake\") cx.fillStyle = colorSnake;\r\n\t\t\telse cx.fillStyle = colorDead;\r\n\t\t\tcx.fillRect((x * blockLength) + blockBorder, (y * blockLength) + blockBorder, blockLength - (2 * blockBorder), blockLength - (2 * blockBorder));\r\n\t\t}\r\n\t}\r\n}\r\ndrawGrid();\r\n\r\nfunction game() {\r\n\tif (keyEvents.length > 0) direction = keyEvents.shift();\r\n\tlet snakeHead = [snake[0], snake[1]];\r\n\tlet lastX = snake.pop(), lastY = snake.pop();\r\n\tgrid[lastY][lastX] = false;\r\n\tgrid[snake[0]][snake[1]] = \"snake\";\r\n\tif (direction == 1) {\r\n\t\tsnake.unshift(snakeHead[1]);\r\n\t\tsnake.unshift(snakeHead[0] - 1);\r\n\t}\r\n\telse if (direction == 2) {\r\n\t\tsnake.unshift(snakeHead[1] + 1);\r\n\t\tsnake.unshift(snakeHead[0]);\r\n\t}\r\n\telse if (direction == 3) {\r\n\t\tsnake.unshift(snakeHead[1]);\r\n\t\tsnake.unshift(snakeHead[0] + 1);\r\n\t}\r\n\telse if (direction == 4) {\r\n\t\tsnake.unshift(snakeHead[1] - 1);\r\n\t\tsnake.unshift(snakeHead[0]);\r\n\t}\r\n\tif (snake[0] < 0 || snake[0] >= gridSize || snake[1] < 0 || snake[1] >= gridSize || grid[snake[0]][snake[1]] == \"snake\") {\r\n\t\tconsole.log(\"gameover\");\r\n\t\tclearInterval(gameClock);\r\n\t\tstartScreen.style.display = \"table\";\r\n\t\treturn;\r\n\t}\r\n\tif (grid[snake[0]][snake[1]] == \"food\") {\r\n\t\tsnake.push(lastY);\r\n\t\tsnake.push(lastX);\r\n\t\tgrid[lastY][lastX] = \"snake\";\r\n\t\tfood = [Math.floor(Math.random() * gridSize), Math.floor(Math.random() * gridSize)];\r\n\t\twhile (grid[food[0]][food[1]])\r\n\t\t\tfood = [Math.floor(Math.random() * gridSize), Math.floor(Math.random() * gridSize)];\r\n\t\tgrid[food[0]][food[1]] = \"food\";\r\n\t\tfoodEaten++;\r\n\t\tscore.innerHTML = \"Score: \" + foodEaten;\r\n\t}\r\n\tgrid[snake[0]][snake[1]] = \"head\";\r\n\tdrawGrid();\r\n}\r\n\r\nvar clockSpeed = 100;\r\nvar gameClock = null;\r\nwindow.addEventListener(\"keyup\", event => {\r\n\tif (event.key == \" \") {\r\n\t\tstartScreen.style.display = \"none\";\r\n\t\tif (!gameClock) {\r\n\t\t\tgameClock = setInterval(game, clockSpeed);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (gameClock) clearInterval(gameClock);\r\n\t\tnewGame();\r\n\t\tgameClock = setInterval(game, clockSpeed);\r\n\t}\r\n});\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n#start {\r\n    font: 40px monospace; \r\n    color: black; \r\n    background: white; \r\n    border: 5px solid black; \r\n    border-radius: 5px; \r\n    padding: 10px; \r\n    \r\n    display: inline-block; \r\n    position: absolute; \r\n    left: 50%; top: 50%; transform: translate(-50%, -50%);\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Snake.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Snake.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Snake.vue?vue&type=template&id=026f9647&scoped=true&\"\nimport script from \"./Snake.vue?vue&type=script&lang=js&\"\nexport * from \"./Snake.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Snake.vue?vue&type=style&index=0&id=026f9647&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"026f9647\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"title\"},[_vm._v(\" Orbital Mechanics \")]),_c('div',{staticClass:\"date\"},[_vm._v(\" December 15th, 2018 \")]),_c('div',{staticClass:\"content\"},[_c('canvas',{staticStyle:{\"width\":\"100%\",\"height\":\"500px\",\"border\":\"1px solid gainsboro\"},attrs:{\"id\":\"canvas\"}}),_c('div',{staticStyle:{\"display\":\"table\",\"margin\":\"0px auto\"}},[_c('div',{staticClass:\"quote\",staticStyle:{\"display\":\"inline-block\",\"margin\":\"0px auto\"}},[_vm._v(\"Press space to start animation. Hold space to spawn new random satellites.\")]),_vm._v(\"😉 \")]),_c('p',[_vm._v(\" So finals are over and I have nothing to do. In one of my classes, we learned about orbital mechanics and some of the physics behind it. I decided to simulate this programmatically because I have nothing better to do. The larger red dot following a circular orbit is actually the ISS. This animation is to scale (apart from the size of the satellites), but sped up 1000 times. Of course, in reality the satellites would interact with each other, but that is not the point here. I was surprised how relatively simple it was implement this, the most confusing part was making sure all of the units were correct, as the dimensions and velocities are based upon the actual measurements of the Earth.\")]),_c('p',[_vm._v(\" There are two equations which govern these mechanics. \")]),_c('p',[_vm._v(\"$$\\\\frac{d^2y}{dt^2} = \\\\frac{MG}{r^3}y \\\\quad \\\\text{and} \\\\quad \\\\frac{d^2x}{dt^2} = \\\\frac{MG}{r^3}x, \\\\; \\\\text{where} \\\\; r = \\\\sqrt{x^2+y^2}$$\")]),_c('p',[_vm._v(\" This is a nonlinear system of differential equations, with no simple analytical solution as far as I know. In class, we simulated these equations using finite difference methods in excel. Programmatically, I used Euler's method: first calculate the `a_x` and `a_y` accelerations by plugging in values into the above equations, then adding `a_x\\\\Delta t` and `a_y\\\\Delta t` to `v_x` and `v_y` respectively. Lastly, calculate the new `x` and `y` positions by adding `v_x\\\\Delta t` and `v_y\\\\Delta t` to the current positions.\")]),_c('p',[_vm._v(\" I am one step closer to being able to launch a rocket into space. 🧙‍🤓😏\")])])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n      <div class=\"title\"> Orbital Mechanics </div>\r\n      <div class=\"date\"> December 15th, 2018 </div>\r\n\r\n      <div class=\"content\">\r\n        \r\n\t\t<canvas style=\"width: 100%; height: 500px; border: 1px solid gainsboro\" id=\"canvas\"></canvas>\r\n\t\t<div style=\"display: table; margin: 0px auto;\">\r\n\t\t\t<div class=\"quote\" style=\"display: inline-block; margin: 0px auto;\">Press space to start animation. Hold space to spawn new random satellites.</div>😉\t\r\n\t\t</div>\r\n\t\t<p>&emsp;So finals are over and I have nothing to do. In one of my classes, we learned about orbital mechanics and some of the physics behind it. I decided to simulate this programmatically because I have nothing better to do. The larger red dot following a circular orbit is actually the ISS. This animation is to scale (apart from the size of the satellites), but sped up 1000 times. Of course, in reality the satellites would interact with each other, but that is not the point here. I was surprised how relatively simple it was implement this, the most confusing part was making sure all of the units were correct, as the dimensions and velocities are based upon the actual measurements of the Earth.</p>\r\n\t\t<p>\r\n\t\t\t&emsp;There are two equations which govern these mechanics.\r\n\t\t</p>\r\n\t\t<p>$$\\frac{d^2y}{dt^2} = \\frac{MG}{r^3}y \\quad \\text{and} \\quad\r\n             \\frac{d^2x}{dt^2} = \\frac{MG}{r^3}x, \\; \\text{where} \\; r = \\sqrt{x^2+y^2}$$</p>\r\n\t\t<p>&emsp;This is a nonlinear system of differential equations, with no simple analytical solution as far as I know. In class, we simulated these equations using finite difference methods in excel. Programmatically, I used Euler's method: first calculate the `a_x` and `a_y` accelerations by plugging in values into the above equations, then adding `a_x\\Delta t` and `a_y\\Delta t` to `v_x` and `v_y` respectively. Lastly, calculate the new `x` and `y` positions by adding `v_x\\Delta t` and `v_y\\Delta t` to the current positions.</p>\r\n\t\t<p>&emsp;I am one step closer to being able to launch a rocket into space. 🧙‍🤓😏</p>\r\n\t\r\n    </div>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'OrbitalMechanics',\r\n  mounted: () => {\r\n      do_js();\r\n      window.MathJax.typesetPromise();\r\n  }\r\n}\r\n\r\nfunction do_js() {\r\nvar canvas = document.querySelector(\"#canvas\");\r\nvar cx = canvas.getContext(\"2d\");\r\n\r\nclass Satellite {\r\n\tconstructor(x, y, vx, vy, color) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.vx = vx;\r\n\t\tthis.vy = vy;\r\n\t\tthis.color = color;\r\n\t}\r\n\r\n\tmove(time) {\r\n\t\tlet r = (x, y) => Math.pow(x, 2) + Math.pow(y, 2);\r\n\t\t// Acceleration = G * m * (x^2 + y^2) ^ (-1.5)\r\n\t\tlet sec = time;\r\n\t\tlet omega = -1 * this.G * this.M * Math.pow(r(this.x, this.y), -1.5);\r\n\t\tthis.vx += sec * omega * this.x;\r\n\t\tthis.vy += sec * omega * this.y;\r\n\t\tthis.x += sec * this.vx;\r\n\t\tthis.y += sec * this.vy;\r\n\t\t// console.log(this.x + \" \" + this.y);\r\n\t}\r\n}\r\nSatellite.prototype.M = 5.9742 * Math.pow(10, 24); // kg\r\nSatellite.prototype.G = 6.673 * Math.pow(10, -11); // m^3 / kg / s^2\r\nconst radiusOfEarth = 6378100; // meters\r\nconst altitudeISS = 408000; // meters\r\nconst speedISS =  7610; // meters per sec\r\n\r\n// window.addEventListener(\"resize\", onResize);\r\nfunction onResize() {\r\n\tlet dpi = window.devicePixelRatio;\r\n\tcanvas.width = getComputedStyle(canvas).getPropertyValue(\"width\").slice(0, -2) * dpi;\r\n\tcanvas.height = getComputedStyle(canvas).getPropertyValue(\"height\").slice(0, -2) * dpi;\r\n\tconsole.log(canvas.width + \" \" + canvas.height);\r\n}\r\nonResize();\r\n\t\t\t\r\nvar center = [canvas.width / 2, canvas.height / 2];\r\nvar satellites = [new Satellite(radiusOfEarth + altitudeISS, 0, 0, speedISS, \"red\")];\r\nfor (let i = 0; i < 25; i++) {\r\n\tsatellites.push(new Satellite(radiusOfEarth + altitudeISS * (Math.random() + 1), 0, 0, speedISS * (Math.random() * 0.3 + 1),\r\n\t\trandomColor()));\r\n}\r\nvar imgEarth = document.createElement(\"img\");\r\nimgEarth.src = \"static/earth.png\";\r\nimgEarth.addEventListener(\"load\", () => {\r\n\tdrawObjects();\r\n});\r\n\r\nfunction randomColor() {\r\n\tlet r = () => {\r\n\t\tlet rand = Math.floor(Math.random() * 256).toString(16);\r\n\t\tif (rand.length == 1) rand = \"0\" + rand;\r\n\t\treturn rand;\r\n\t}\r\n\treturn \"#\" + r() + r() + r();\r\n}\r\n\r\nfunction drawCircle(x, y, radius) {\r\n\tcx.beginPath();\r\n\tcx.arc(x, y, radius, 0, 7);\r\n\tcx.fill();\r\n}\r\n\t\t\t\r\nfunction drawObjects() {\r\n\tcx.clearRect(0, 0, canvas.width, canvas.height);\r\n\tlet len = canvas.height * .15; // pixel diameter of earth image\r\n\tcx.drawImage(imgEarth, (canvas.width - len) / 2, (canvas.height - len) / 2, len, len);\r\n\tlet ppm = len / radiusOfEarth; // pixels per meter, convert units\r\n\r\n\tfor (let i = 0; i < satellites.length; i++) {\r\n\t\tlet s = satellites[i];\r\n\t\tcx.fillStyle = s.color;\r\n\t\tdrawCircle(ppm * s.x + center[0], ppm * s.y + center[1], (i == 0) ? 5 : 3);\r\n\t}\r\n}\r\n\r\nvar inOrbit = false;\r\nfunction orbit() {\r\n\tinOrbit = true;\r\n\tfunction nextFrame(time, lastTime) {\r\n\tif (lastTime == null)\r\n\t\tlastTime = time;\r\n\t\tfor (let satellite of satellites)\r\n\t\t\tsatellite.move(time - lastTime, [canvas.width / 2, canvas.height / 2]);\r\n\t\tdrawObjects();\r\n\t\trequestAnimationFrame(newTime => nextFrame(newTime, time));\r\n\t}\r\nrequestAnimationFrame(nextFrame);\r\n}\r\n\r\nwindow.addEventListener(\"keydown\", e => {\r\n\tif (e.key == \" \") {\r\n\t\tsatellites.push(new Satellite(radiusOfEarth + altitudeISS * (Math.random() + 1), 0, 0, speedISS * (Math.random() * 0.3 + 1),\r\n\t\t\trandomColor()));\r\n\t\tif (!inOrbit) orbit();\r\n\t}\r\n\te.preventDefault();\r\n});\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OrbitalMechanics.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OrbitalMechanics.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OrbitalMechanics.vue?vue&type=template&id=703cce2b&scoped=true&\"\nimport script from \"./OrbitalMechanics.vue?vue&type=script&lang=js&\"\nexport * from \"./OrbitalMechanics.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"703cce2b\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"title\"},[_vm._v(\" Forces Simulator \")]),_c('div',{staticClass:\"date\"},[_vm._v(\" May 2nd, 2019 \")]),_c('div',{staticClass:\"content\"},[_c('div',{attrs:{\"id\":\"pageContainer\"}},[_c('div',{attrs:{\"id\":\"errorBox\"}}),_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('div',{attrs:{\"id\":\"inputBoxColumn\"}},[_c('div',{staticClass:\"inputBox\"},[_c('input',{staticClass:\"mathInput\",attrs:{\"type\":\"text\",\"value\":\"F_x = 0\"}})]),_c('div',{staticClass:\"inputBox\"},[_c('input',{staticClass:\"mathInput\",attrs:{\"type\":\"text\",\"value\":\"F_y = -m*g\"}})]),_c('div',{staticClass:\"inputBox\"},[_c('input',{staticClass:\"mathInput\",attrs:{\"type\":\"text\",\"value\":\"m = 1\"}})]),_c('div',{staticClass:\"inputBox\"},[_c('input',{staticClass:\"mathInput\",attrs:{\"type\":\"text\",\"value\":\"v_x0 = 5\"}})]),_c('div',{staticClass:\"inputBox\"},[_c('input',{staticClass:\"mathInput\",attrs:{\"type\":\"text\",\"value\":\"v_y0 = 5\"}})]),_c('div',{staticClass:\"inputBox\"},[_c('input',{staticClass:\"mathInput\",attrs:{\"type\":\"text\",\"value\":\"x_0 = 0\"}})]),_c('div',{staticClass:\"inputBox\",attrs:{\"id\":\"lastInputBox\"}},[_c('input',{staticClass:\"mathInput\",attrs:{\"type\":\"text\",\"value\":\"y_0 = 0\"}})]),_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('span',{staticClass:\"noselect\",attrs:{\"id\":\"addColumnButton\"}},[_vm._v(\" + \")])])]),_c('div',{staticStyle:{\"border\":\"1px solid gainsboro\"},attrs:{\"id\":\"canvasContainer\"}})])]),_c('div',[_c('p',[_vm._v(\" This thing graphs the plot of an second order differential equation with one input, time. Picture a projectile, with forces acting on it in the x any y directions. How will it's position change over time? This answers that question. 'F_x' and 'F_y' are the forces in the x and y directions respectively, with v_x0, v_y0 being initial velocities, and x_0, y_0 being initial positions. It graphs the projectile from `t=0` to `t=20`, with `\\\\Delta t = 0.04`. \")]),_c('p',[_vm._v(\" For example, by default `F_y` is `-mg`, the force of gravity, a simple projectile motion problem. If you set `F_x = 0` and `F_y = -y`, it describes simple harmonic motion. For a weird curve, set `F_x = e^{-x}` and `F_y = -0.5`. These curves remind me of fourier series. \")]),_c('p',[_vm._v(\" The possibilites are endless. \")]),_c('p',[_vm._v(\" I made this to help me visualize things in my physics class, but I never finished it by the time the class ended... Just finished implementing it this summer because I hate having unfinished projects. It is still full of bugs, but serves its purpose. \")])])])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n      <div class=\"title\"> Forces Simulator </div>\r\n      <div class=\"date\"> May 2nd, 2019 </div>\r\n\r\n      <div class=\"content\">\r\n        \r\n        <div id=\"pageContainer\">\r\n            <div id=\"errorBox\"></div>\r\n            <div style=\"display: flex;\">\r\n                <div id=\"inputBoxColumn\">\r\n                    <div class=\"inputBox\">\r\n                        <input type=\"text\" class=\"mathInput\" value=\"F_x = 0\">\r\n                    </div>\r\n                    <div class=\"inputBox\">\r\n                        <input type=\"text\" class=\"mathInput\" value=\"F_y = -m*g\">\r\n                    </div>\r\n                    <div class=\"inputBox\">\r\n                        <input type=\"text\" class=\"mathInput\" value=\"m = 1\">\r\n                    </div>\r\n                    <div class=\"inputBox\">\r\n                        <input type=\"text\" class=\"mathInput\" value=\"v_x0 = 5\">\r\n                    </div>\r\n                    <div class=\"inputBox\">\r\n                        <input type=\"text\" class=\"mathInput\" value=\"v_y0 = 5\">\r\n                    </div>\r\n                    <div class=\"inputBox\">\r\n                        <input type=\"text\" class=\"mathInput\" value=\"x_0 = 0\">\r\n                    </div>\r\n                    <div class=\"inputBox\" id=\"lastInputBox\">\r\n                        <input type=\"text\" class=\"mathInput\" value=\"y_0 = 0\">\r\n                    </div>\r\n                    <div style=\"position: relative\">\r\n                        <span class=\"noselect\" id=\"addColumnButton\">\r\n                            +\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div id=\"canvasContainer\" style=\"border: 1px solid gainsboro\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div>\r\n            <p> &emsp;\r\n                This thing graphs the plot of an second order differential equation with one input, time.\r\n                Picture a projectile, with forces acting on it in the x any y directions. How will it's position\r\n                change over time? This answers that question. 'F_x' and 'F_y' are the forces in the x and y directions respectively,\r\n                with v_x0, v_y0 being initial velocities, and x_0, y_0 being initial positions. It graphs the projectile \r\n                from `t=0` to `t=20`, with `\\Delta t = 0.04`.\r\n            </p>\r\n            <p> &emsp;\r\n                For example, by default `F_y` is `-mg`, the force of gravity, a simple projectile motion problem.\r\n                If you set `F_x = 0` and `F_y = -y`, it describes simple harmonic motion.\r\n                For a weird curve, set `F_x = e^{-x}` and `F_y = -0.5`. These curves remind me of fourier series.\r\n            </p>\r\n            <p> &emsp;\r\n                The possibilites are endless. \r\n            </p>\r\n            <p> &emsp;\r\n                I made this to help me visualize things in my physics class, but I never finished it by the time the class ended... \r\n                Just finished implementing it this summer because I hate having unfinished projects. It is still full of bugs, but serves its purpose.\r\n            </p>\r\n        </div>\r\n\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'ForcesSimulator',\r\n  mounted: () => {\r\n    const script = function (p5) {\r\n        p5.setup = () => {\r\n            var canvas_width = 750;\r\n            var canvas_height = 600;\r\n            let canvas = p5.createCanvas(canvas_width, canvas_height);\r\n            canvas.parent(\"canvasContainer\");\r\n            do_js(p5);\r\n\r\n            window.MathJax.typesetPromise();\r\n        }\r\n    }\r\n\r\n    const P5 = require('p5');\r\n    new P5(script);\r\n  }\r\n}\r\n\r\nfunction do_js(p5) {\r\nvar OPERATORS = \"^*/+-=\";\r\nvar OPEN_PAREN = \"([{\";\r\nvar CLOSE_PAREN = \")]}\";\r\nvar MATH_FUNC = {sin: Math.sin, cos: Math.cos, tan: Math.tan, ln: Math.log, \r\n    sign: (x) => {\r\n        if (x == 0)\r\n            return 0;\r\n        return Math.sign(x)\r\n    }\r\n    , abs: Math.abs, sqrt: Math.sqrt};\r\n\r\n/* ----------------------------------- Begin Utility functions ------------------------------- */\r\n// Returns if string is valid number\r\nfunction is_number(string) {\r\n    return !isNaN(string);\r\n}\r\n\r\n// Returns random color\r\nfunction random_color() {\r\n    return p5.color(rand_int(0, 255), rand_int(0, 255), rand_int(0, 255));\r\n}\r\n\r\n// Returns random in range (inclusive)\r\nfunction rand_int(start, end) {\r\n    return Math.floor((Math.random() * (end - start + 1)) + start)\r\n}\r\n\r\n// Returns if item in iterable\r\nfunction contains(iter, item) {\r\n    for (let i of iter)\r\n    if (item == i)\r\n    return true;\r\n    return false;\r\n}\r\n\r\n// Returns if open and close parenthesis match, e.g. [} -> false, [] -> true\r\nfunction paren_match(open, close) {\r\n    return OPEN_PAREN.indexOf(open) == CLOSE_PAREN.indexOf(close);\r\n}\r\n/* ----------------------------------- End Utility functions --------------------------------- */\r\n\r\n\r\n/* ------------------------------------------------------------------------------------------- */\r\n/* ----------------------------------- Start of Parser --------------------------------------- */\r\n/* ------------------------------------------------------------------------------------------- */\r\n\r\n// Given some tokens from an infix expression, i.e. ['1', '+', '2'] -> 3\r\nfunction parse_expression(tokens) {\r\n    let expression = tokens.join(\" \");\r\n\r\n    // Simple case if just a single token\r\n    if (tokens.length == 1) {\r\n        if (!is_number(tokens[0]))\r\n            throw `Unknown number ${tokens[0]} in expression '${expression}'`\r\n        return parseFloat(tokens[0]);\r\n    }\r\n    \r\n    // Run through tokens and solve all parenthesis first\r\n    for (let a = 0; a < tokens.length; a++) {\r\n        if (contains(OPEN_PAREN, tokens[a])) {\r\n            // Find the correct matching closing parenthesis\r\n            let stack = [tokens[a]];\r\n            for (let b = a + 1; b < tokens.length; b++) {\r\n                let token = tokens[b]\r\n                \r\n                if (contains(OPEN_PAREN, token)) {\r\n                    stack.push(token)\r\n                }\r\n                else if (contains(CLOSE_PAREN, token)) {\r\n                    let open = stack.pop();\r\n                    if (!paren_match(open, token))\r\n                    throw `Invalid parenthesis ${a}:${b} in expression ${tokens.join(\" \")}`\r\n                    \r\n                    // We found the correct closing parenthesis at index b\r\n                    if (stack.length == 0) {\r\n                        tokens.splice(a, b - a + 1, parse_expression(tokens.slice(a + 1, b)));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Guarenteed to have no parenthesis at this point, just do PEMDAS now\r\n    let op_funcs = {};\r\n    op_funcs[\"+\"] = (a, b) => a + b;\r\n    op_funcs[\"-\"] = (a, b) => a - b;\r\n    op_funcs[\"*\"] = (a, b) => a * b;\r\n    op_funcs[\"/\"] = (a, b) => {\r\n        if (b == 0) throw \"Cannot divide by 0\";\r\n        return a / b;\r\n    };\r\n    op_funcs[\"^\"] = (a, b) => Math.pow(a, b);\r\n    \r\n\r\n    var n1;\r\n    var op;\r\n    var n2;\r\n\r\n    // Helper function that parses expression that only has 3 tokens and an operator between\r\n    function parse_simple(expr) {\r\n        if (expr.length < 3) throw `Expression '${expression}' missing tokens`;\r\n        if (expr.length > 3) throw `Expression '${expression}' is broken somehow :0`;\r\n        \r\n        n1 = expr[0];\r\n        op = expr[1];\r\n        n2 = expr[2];\r\n        \r\n        if (!(contains(OPERATORS, op))) throw `Unknown operator '${op}' in '${expr}'`;\r\n        if (!is_number(n1)) throw `Unknown number '${n1}' in '${expr}'`;\r\n        if (!is_number(n2)) throw `Unknown number '${n2}' in '${expr}'`;\r\n        \r\n        return op_funcs[op](parseFloat(n1), parseFloat(n2));\r\n    }\r\n    \r\n    // Does the given operation looking from left to right\r\n    function compute_operation(operator) {\r\n        for (let i = 1; i < tokens.length; i++) {\r\n            let token = tokens[i];\r\n            if (token == operator) {\r\n                tokens.splice(i - 1, 3, parse_simple(tokens.slice(i - 1, i + 2)))\r\n                i -= 1;\r\n            }\r\n        }\r\n    }\r\n    \r\n    // First thing we do is compute all of the math functions as defined by math func\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        let token = tokens[i];\r\n        if (token in MATH_FUNC) {\r\n            // If we find a math function, we expect it to be syntaxed in the form f(x)\r\n            // ************* e.g: [... \"sin\", \"(\", \"2\" , \"*\", \"pi\", \")\", ...]\r\n            // Because we are guarenteed to not have parentheses at this point, it should rather be\r\n            // ************* e.g: [... \"sin\", \"6.28\", ...]\r\n            let argument = tokens[i + 1];\r\n            if (!is_number(argument)) \r\n                throw `Unknown number '${n1}' in function ${token} in expression '${expression}'`;\r\n            \r\n            let function_output = MATH_FUNC[token](parseFloat(argument));\r\n            if (!is_number(function_output)) \r\n                throw `Error in evaluating ${token}(${argument}) in expression '${expression}'`\r\n\r\n            tokens.splice(i, 2, function_output);\r\n        }\r\n    }\r\n\r\n    // OPERATORS is defined by order of PEMDAS\r\n    for (let operator of OPERATORS)\r\n        compute_operation(operator);\r\n    \r\n    if (tokens.length != 1)\r\n    throw `Missing operators in expression '${expression}'`;\r\n    \r\n    return tokens[0];\r\n}\r\n\r\nfunction is_token(token_string) {\r\n    if (contains(OPERATORS, token_string)) return false;\r\n    if (contains(OPEN_PAREN, token_string)) return false;\r\n    if (contains(CLOSE_PAREN, token_string)) return false;\r\n    if (token_string in MATH_FUNC) return false;\r\n    \r\n    return true;\r\n}\r\n\r\n// Creates a list of tokens from a string, e.g. \"1 + 3+v_x\" -> [\"1\", \"+\", \"3\", \"+\", \"v_x\"]\r\n// e.g: \"1 + ln(3)\" = [\"1\", \"+\", \"ln\", \"(\", \"3\", \")\"]\r\n// ***********>    Anything that is not an operator or parenthesis or math function is considered a token\r\n// ***********>    A token is supposed to be a numerical value or substitable variable\r\n// ***********>    Insert '0' to negate, e.g. \"-1\" -> \"0 - 1\"\r\n// ***********>    Insert '*' implied if no operator before/after parenthesis, e.g. 1(2) = 1 * (2)\r\nfunction create_token_list(string) {\r\n    // Remove all whitespace\r\n    string = string.replace(/ /g, '');\r\n    \r\n    let tokens = [];\r\n    \r\n    // Run down the boi and split when we see operator (I mean a token)\r\n    let start = 0;\r\n    for (let i = 0; i < string.length; i++) {\r\n        if (!is_token(string[i])) {\r\n            if (i != start)\r\n            tokens.push(string.slice(start, i));\r\n            \r\n            tokens.push(string[i]);\r\n            start = i + 1;\r\n        }\r\n    }\r\n    if (start < string.length)\r\n    tokens.push(string.slice(start));\r\n    \r\n    // We have now created a token list, touch ups for specific operators\r\n    // Insert 0 before - if a token is not there '1' -> '0 - 1'\r\n    // Insert * if token comes before '(' or after ')'\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        let token = tokens[i];\r\n        \r\n        if (token == '-') {\r\n            if (i == 0) tokens.splice(0, 0, '0');\r\n            else if (!is_token(tokens[i - 1])) tokens.splice(i, 0, '0');\r\n        }\r\n        else if (token == '(' && i > 0) {\r\n            if (is_token(tokens[i - 1]))\r\n            tokens.splice(i, 0, \"*\");\r\n        }\r\n        else if (token == ')' && i + 1 < tokens.length) {\r\n            if (is_token(tokens[i + 1]))\r\n            tokens.splice(i + 1, 0, \"*\")\r\n        }\r\n    }\r\n    \r\n    return tokens;\r\n}\r\n\r\n// We never actually use this but it computes a given expression\r\n// function compute(expression) {\r\n//     return parse_expression(create_token_list(expression));\r\n// }\r\n\r\n/* ------------------------------------------------------------------------------------------- */\r\n/* ----------------------------------- End of Parser ----------------------------------------- */\r\n/* ------------------------------------------------------------------------------------------- */\r\n\r\n/* ------------------------------------------------------------------------------------------- */\r\n/* ----------------------------------- Start of Projectile ----------------------------------- */\r\n/* ------------------------------------------------------------------------------------------- */\r\n\r\nvar symbol_table = {};\r\nsymbol_table[\"g\"] = 9.81;\r\nsymbol_table[\"pi\"] = Math.PI;\r\nsymbol_table[\"e\"] = Math.E;\r\n\r\n// Substitutes all tokens that are keys in the symbol table for their value in that table\r\n// Say token_list = [\"m\", \"+\", \"3\"], and m = 3 in the symbol_table\r\n// This function returns the a new token list with \"3\" substituted for m, e.g. [\"3\", \"+\", \"3\"]\r\nfunction substitute_known_symbols(token_list) {\r\n    let copy = token_list.slice();\r\n    for (let i = 0; i < copy.length; i++) {\r\n        let token = copy[i];\r\n        if (is_token(token) && !is_number(token)) {\r\n            if (token in symbol_table)\r\n                copy[i] = symbol_table[token]\r\n            else\r\n                throw \"Unknown symbol \" + token;\r\n        }\r\n    }\r\n\r\n    return copy;\r\n}\r\n\r\nclass Projectile {\r\n    constructor() {\r\n        // The following are floating point initial constants\r\n        this.m = symbol_table[\"m\"];\r\n        this.x = symbol_table[\"x_0\"];\r\n        this.y = symbol_table[\"y_0\"];\r\n        this.v_x = symbol_table[\"v_x0\"];\r\n        this.v_y = symbol_table[\"v_y0\"];\r\n        this.t = 0;\r\n\r\n        // expect symbol_table to contain all numerical values except for 'f_x', 'f_y'\r\n        // which will be token lists for the equation, sliced to everyleft right of the '='\r\n        this.update_forces();\r\n    }\r\n    \r\n    update_forces() {\r\n        // this.f_[xy] are token tables for those equations\r\n        this.f_x = symbol_table[\"F_x\"];\r\n        this.f_y = symbol_table[\"F_y\"];\r\n    }\r\n\r\n    update_initial_conditions() {\r\n        this.m = symbol_table[\"m\"];\r\n        this.x = symbol_table[\"x_0\"];\r\n        this.y = symbol_table[\"y_0\"];\r\n        this.v_x = symbol_table[\"v_x0\"];\r\n        this.v_y = symbol_table[\"v_y0\"];\r\n    }\r\n\r\n    update_symbol_table() {\r\n        symbol_table[\"m\"] = this.m;\r\n        symbol_table[\"x\"] = this.x;\r\n        symbol_table[\"y\"] = this.y;\r\n        symbol_table[\"v_x\"] = this.v_x;\r\n        symbol_table[\"v_y\"] = this.v_y;\r\n        symbol_table[\"t\"] = this.t;\r\n    }\r\n\r\n    get force_x() {\r\n        this.update_symbol_table();\r\n        let token_list = substitute_known_symbols(this.f_x);\r\n        return parse_expression(token_list);\r\n    }\r\n    \r\n    get force_y() {\r\n        this.update_symbol_table();\r\n        let token_list = substitute_known_symbols(this.f_y);\r\n        return parse_expression(token_list);\r\n    }\r\n\r\n    move(time_step) {\r\n        let a_x = this.force_x * this.m;\r\n        let a_y = this.force_y * this.m;\r\n\r\n        this.v_x += a_x * time_step;\r\n        this.v_y += a_y * time_step;\r\n\r\n        this.x += this.v_x * time_step;\r\n        this.y += this.v_y * time_step;\r\n\r\n        this.t += time_step;\r\n    }\r\n\r\n    get_points(time_start, time_end, num_steps) {\r\n        this.update_initial_conditions();\r\n        this.t = time_start;\r\n        let time_step = (time_end - time_start) / num_steps;\r\n        let points = [new Point(this.x, this.y)];\r\n\r\n        while (this.t <= time_end) {\r\n            this.move(time_step);\r\n            points.push(new Point(this.x, this.y));\r\n        }\r\n\r\n        return points;\r\n    }\r\n}\r\n\r\n/* ------------------------------------------------------------------------------------------- */\r\n/* ----------------------------------- End of Projectile ------------------------------------- */\r\n/* ------------------------------------------------------------------------------------------- */\r\n\r\n/* ------------------------------------------------------------------------------------------- */\r\n/* ----------------------------------- Start of Grid ----------------------------------------- */\r\n/* ------------------------------------------------------------------------------------------- */\r\n\r\nclass Grid {\r\n    constructor(x_range, y_range, width, height) {\r\n        this.x_range = x_range;\r\n        this.y_range = y_range;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        // ppx = \"pixels per x\"\r\n        this.ppx = 1;\r\n        this.ppy = 1;\r\n\r\n        this.graphs = [];\r\n        this.scatter_plots = [];\r\n    }\r\n\r\n    draw() {\r\n        p5.clear();\r\n        // Plot this function on desmos to get a sense of it\r\n        let step_func = (x) => {\r\n            let log = (x, b) => Math.log(x) / Math.log(b);\r\n            let base = 10;\r\n            let power_of_ten = Math.pow(base, Math.floor(log(x, base) - 1));\r\n            let max_index = 6;\r\n            let index = Math.floor((log(x, base) - Math.floor(log(x, base))) * max_index);\r\n            let multiplier = index * index + 1; // multipler = f(x) = x^2 + 1 = 1, 2, 5\r\n            \r\n            return power_of_ten * multiplier;\r\n        }\r\n\r\n        // x_distance is the length of the x_range\r\n        // num steps is the number of major grid lines\r\n        let x_s = this.x_range[0];\r\n        let x_e = this.x_range[1];\r\n        let y_s = this.y_range[0];\r\n        let y_e = this.y_range[1];\r\n        let x_distance = x_e - x_s;\r\n        let y_distance = y_e - y_s;\r\n        let step_size_x = step_func(x_distance);\r\n        let step_size_y = step_func(y_distance);\r\n        this.ppx = this.width / x_distance;\r\n        this.ppy = this.height / y_distance;\r\n\r\n        // Relative to top left coordinates of the origin in terms of px\r\n        let origin_x_px = (-1 * x_s) * this.ppx;\r\n        let origin_y_px = y_e * this.ppy;\r\n\r\n        function draw_grid_lines(step_size, step_start, step_end, horizontal, object) {\r\n            let minor_grid = 3;\r\n            for (let i = step_start; i <= step_end; i++) {\r\n                let coord = i * step_size;\r\n                \r\n                if (coord == 0) p5.strokeWeight(2);\r\n                else p5.strokeWeight(1);\r\n                \r\n                // Style for axis numbers\r\n                p5.textSize(11);\r\n                p5.fill(255, 0, 0);\r\n                \r\n                p5.stroke(150);\r\n                if (horizontal) {\r\n                    let y = (-coord + y_e) * object.ppy;\r\n                    p5.line(0, y, object.width, y);\r\n                    \r\n                    // Draw numbers on axis\r\n                    p5.stroke(0, 0, 0, 0);\r\n                    p5.text(coord.toString().slice(0, 5), origin_x_px, y);\r\n                    \r\n                    // Draw minor grid lines\r\n                    p5.strokeWeight(0.5);\r\n                    p5.stroke(150);\r\n                    for (let n = 1; n < minor_grid; n++) {\r\n                        coord += (step_size / minor_grid);\r\n                        y = (-coord + y_e) * object.ppy;\r\n                        p5.line(0, y, object.width, y);\r\n                    }\r\n                }\r\n                else {\r\n                    let x = (coord - x_s) * object.ppx;\r\n                    p5.line(x, 0, x, object.height);\r\n                    \r\n                    // Draw numbers on axis\r\n                    p5.stroke(0, 0, 0, 0);\r\n                    p5.text(coord.toString().slice(0, 5), x, origin_y_px);\r\n                    \r\n                    // Draw minor grid lines\r\n                    p5.strokeWeight(0.5);\r\n                    p5.stroke(150);\r\n                    for (let n = 1; n < minor_grid; n++) {\r\n                        coord += (step_size / minor_grid);\r\n                        x = (coord - x_s) * object.ppx;\r\n                        p5.line(x, 0, x, object.height);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        let x_start = Math.floor(x_s / step_size_x);\r\n        let x_end = Math.floor(x_e / step_size_x);\r\n        let y_start = Math.floor(y_s / step_size_y);\r\n        let y_end = Math.floor(y_e / step_size_y);\r\n        draw_grid_lines(step_size_x, x_start, x_end, false, this);\r\n        draw_grid_lines(step_size_y, y_start, y_end, true, this);\r\n\r\n        this.draw_graphs();\r\n    }\r\n\r\n    // Converts (x, y) from grid to location on the canvas in pixels\r\n    __transform_coord(x, y) {\r\n        return {x: (x - this.x_range[0]) * this.ppx, y: (-y + this.y_range[1]) * this.ppy}\r\n    }\r\n\r\n    draw_graphs() {\r\n        p5.fill(255, 0, 0);\r\n        p5.strokeWeight(2);\r\n        \r\n        for (let drawable of this.graphs.concat(this.scatter_plots)) {\r\n            p5.stroke(drawable.color);\r\n            p5.fill(drawable.color);\r\n            this.draw_curve(drawable.compute_points(this.x_range), drawable.show_dots, drawable.show_lines);\r\n        }\r\n\r\n    }\r\n\r\n    draw_curve(points, show_dots, show_lines) {\r\n        for (let i = 0; i < points.length - 1; i++) {\r\n            let coord = this.__transform_coord(points[i].x, points[i].y);\r\n            if (show_dots) {\r\n                p5.fill(points[i].color);\r\n                p5.strokeWeight(0);\r\n                p5.circle(coord.x, coord.y, points[i].diameter);\r\n            }\r\n            if (show_lines) {\r\n                p5.strokeWeight(2);\r\n                let coord_next = this.__transform_coord(points[i+1].x, points[i+1].y);\r\n                p5.line(coord.x, coord.y, coord_next.x, coord_next.y);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Adds the plot of some function f which outputs REAL -> REAL\r\n    add_graph(f) {\r\n        this.graphs.push(new Graph(f));\r\n        this.draw();\r\n    }\r\n\r\n    // scatter_plot = ScatterPlot Object\r\n    add_scatter_plot(scatter_plot) {\r\n        this.scatter_plots.push(scatter_plot);\r\n        this.draw();\r\n    }\r\n\r\n    clear_scatter_plots() {\r\n        this.scatter_plots = [];\r\n        this.draw();\r\n    }\r\n\r\n    // If amount is positive, it zooms in, otherwise zoom out\r\n    zoom(amount) {\r\n        // We want to multiple or divide by a number between 1 and 2 i.e. normalize\r\n        // One wheel tick on mouse, then amount = +- 150\r\n        // Graph this function on desmos to get a feel for its behaviour\r\n        let normalize = (a) => {\r\n            return -1 * Math.pow(a + 1, -0.05) + 2 \r\n        };\r\n        let normal = normalize(Math.abs(amount));\r\n\r\n        if (amount > 0) {\r\n            this.x_range[0] /= normal;\r\n            this.x_range[1] /= normal;\r\n            this.y_range[0] /= normal;\r\n            this.y_range[1] /= normal;\r\n        }\r\n        else if (amount < 0) {\r\n            this.x_range[0] *= normal;\r\n            this.x_range[1] *= normal;\r\n            this.y_range[0] *= normal;\r\n            this.y_range[1] *= normal;\r\n        }\r\n\r\n        this.draw();\r\n    }\r\n\r\n    // Delta_x and Delta_y are percents\r\n    move_origin(delta_x, delta_y) {\r\n        // Make the actual change relative to domains\r\n        delta_x *= this.x_range[1] - this.x_range[0];\r\n        delta_y *= this.y_range[1] - this.y_range[0];\r\n\r\n        this.x_range[0] += delta_x;\r\n        this.x_range[1] += delta_x;\r\n        this.y_range[0] += delta_y;\r\n        this.y_range[1] += delta_y;\r\n\r\n        this.draw();\r\n    }\r\n}\r\nGrid.prototype.p5 = p5;\r\n\r\nclass Point {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.diameter = 5;\r\n        this.color = random_color();\r\n    }\r\n}\r\n\r\nclass Graph {\r\n    constructor(f) {\r\n        this.f = f;\r\n        this.points = [];\r\n        this.color = random_color();\r\n        this.show_dots = false;\r\n        this.show_lines = true;\r\n    }\r\n\r\n    compute_points(x_range) {\r\n        let points_to_draw = [];\r\n\r\n        let x_s = x_range[0];\r\n        let x_e = x_range[1];\r\n        let cache_distance = (x_e - x_s) / 2;\r\n\r\n        // Find existing points which are already in the range\r\n        for (let i = 0; i < this.points.length; i++) {\r\n            let x = this.points[i].x;\r\n            \r\n            // If outside of the cache range, remove the point\r\n            if (x < x_s - cache_distance || x > x_e + cache_distance) {\r\n                this.points.splice(i, 1);\r\n                i -= 1;\r\n            }\r\n            else if (x >= x_s || x <= x_e) {\r\n                points_to_draw.push(this.points[i]);\r\n            }\r\n        }\r\n        \r\n        // We want 200 points to be drawn total, lets just fill in gaps\r\n        let points_total = 200;\r\n        let end = new Point(x_e, this.f(x_e));\r\n        let start = new Point(x_s, this.f(x_s));\r\n   \r\n        points_to_draw.sort((a, b) => {\r\n            if (a.x < b.x)\r\n                return -1;\r\n            else if (a.x > b.x)\r\n                return 1;\r\n            return 0;\r\n        });\r\n        points_to_draw.unshift(start);\r\n        points_to_draw.push(end);\r\n        this.points.push(start, end);\r\n\r\n        let points_per_x = points_total / (x_e - x_s);\r\n        for (let i = 0; i < points_to_draw.length - 1; i++) {\r\n            let p0 = points_to_draw[i];\r\n            let p1 = points_to_draw[i + 1];\r\n            \r\n            let points_to_fill_gap = Math.floor(points_per_x * (p1.x - p0.x));\r\n            for (let j = points_to_fill_gap - 1; j >= 1; j--) {\r\n                let x = (j / points_to_fill_gap * (p1.x - p0.x)) + p0.x;\r\n                \r\n                let point = new Point(x, this.f(x));\r\n                this.points.push(point);\r\n                points_to_draw.splice(i + 1, 0, point);\r\n                i += 1;\r\n            }\r\n        }\r\n\r\n        return points_to_draw;\r\n    }\r\n}\r\n\r\nclass ScatterPlot {\r\n    // points = array of Point objects\r\n    constructor(points) {\r\n        this.color = random_color();\r\n        this.points = points;\r\n        this.show_dots = false;\r\n        this.show_lines = true;\r\n    }\r\n\r\n    compute_points() {\r\n        return this.points;\r\n    }\r\n}\r\n\r\n/* ------------------------------------------------------------------------------------------- */\r\n/* ----------------------------------- End of Grid ------------------------------------------- */\r\n/* ------------------------------------------------------------------------------------------- */\r\n\r\n/* ------------------------------------------------------------------------------------------- */\r\n/* ----------------------------------- Main Implementation ----------------------------------- */\r\n/* ------------------------------------------------------------------------------------------- */\r\n\r\nvar canvas_width = 750;\r\nvar canvas_height = 600;\r\n// var aspect_ratio = canvas_height / canvas_width;\r\nvar grid = new Grid([-5, 5], [-5, 5], canvas_width, canvas_height);\r\nvar mouse_inside_canvas = false;\r\n\r\nvar canvasContainer = document.getElementById(\"canvasContainer\");\r\ncanvasContainer.addEventListener(\"wheel\", (event) => {\r\n    grid.zoom(event.wheelDeltaY);\r\n});\r\n\r\ncanvasContainer.addEventListener(\"mousemove\", (event) => {\r\n    // Primary button = 1\r\n    if (event.buttons == 1) {\r\n        grid.move_origin(event.movementX * -0.004, event.movementY * 0.004);\r\n    }\r\n});\r\n\r\ncanvasContainer.addEventListener(\"mouseenter\", () => {\r\n    mouse_inside_canvas = true;\r\n});\r\n\r\ncanvasContainer.addEventListener(\"mouseleave\", () => {\r\n    mouse_inside_canvas = false;\r\n});\r\n\r\n// Stop scrolling if mouse is inside canvas\r\ndocument.getElementById(\"pageContainer\").addEventListener(\"wheel\", (event) => {\r\n    if (mouse_inside_canvas) {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n    }\r\n});\r\n\r\n\r\n// ib == 'Input Box' which is the container that holds an input\r\nvar inputs = [];\r\nvar ib_container = document.getElementById(\"inputBoxColumn\");\r\nvar last_ib = document.querySelector(\"#lastInputBox\");\r\nvar add_ib_button = document.getElementById(\"addColumnButton\");\r\n\r\nvar error_box = document.getElementById(\"errorBox\");\r\nvar projectile = new Projectile(0, 0, 0, 0, 0, 0, 0);\r\n\r\nvar time_start = 0;\r\nvar time_end = 20;\r\nvar num_steps = 500;\r\n\r\nadd_ib_button.addEventListener(\"click\", () => {\r\n    let new_ib = document.createElement(\"div\");\r\n    new_ib.className = \"inputBox\";\r\n    \r\n    // Swap contents of last input box and new input box\r\n    new_ib.innerHTML = last_ib.innerHTML;\r\n    new_ib.firstElementChild.value = last_ib.firstElementChild.value;\r\n    last_ib.innerHTML = `<input type=\"text\" class=\"mathInput\" value=\"\">`;\r\n\r\n    ib_container.insertBefore(new_ib, last_ib);\r\n    ib_container.scrollTop = ib_container.scrollHeight - ib_container.clientHeight;\r\n\r\n    on_create_input(last_ib.firstElementChild);\r\n    on_create_input(new_ib.firstElementChild);\r\n\r\n    inputs.pop();\r\n    inputs.push(new_ib.firstElementChild);\r\n    inputs.push(last_ib.firstElementChild);\r\n});\r\n\r\n\r\n// Event handler for when a new input is created\r\nfunction on_create_input(input) {\r\n    function on_input_update(unique_input) {\r\n        if (unique_input.value == \"\")\r\n            return;\r\n        let token_list = create_token_list(unique_input.value);\r\n        let expression_list = token_list.slice(token_list.indexOf(\"=\") + 1);\r\n        \r\n        // Update global symbol table to hold correct values\r\n        if (token_list[0] == \"F_x\" || token_list[0] == \"F_y\") {\r\n            symbol_table[token_list[0]] = expression_list;\r\n            projectile.update_forces();\r\n        }\r\n        else {\r\n            let token_value = parse_expression(substitute_known_symbols(expression_list));\r\n            symbol_table[token_list[0]] = token_value;\r\n            console.log(token_list[0], \"=\", token_value);\r\n\r\n            // Update other inputs which make use of this token\r\n            for (let other_input of inputs) {\r\n                let search = other_input.value.search(\".+=.*\" + token_list[0] + \".*\");\r\n                if (search != -1) {\r\n                    other_input.dispatchEvent(new Event(\"input\"));\r\n                }\r\n            }\r\n\r\n            projectile.update_initial_conditions();\r\n        }\r\n    }\r\n\r\n    input.addEventListener(\"input\", () => {\r\n        try {\r\n            on_input_update(input);\r\n            draw_projectile();\r\n        } catch (error) { \r\n            set_error_message(error);\r\n        }\r\n    });\r\n\r\n    on_input_update(input);\r\n}\r\n\r\nfunction draw_projectile() {\r\n    // Update the plot of the projectile\r\n    grid.clear_scatter_plots();\r\n    try {\r\n        let points = projectile.get_points(time_start, time_end, num_steps);\r\n        grid.add_scatter_plot(new ScatterPlot(points));\r\n        hide_error_message();\r\n    } catch (error) {\r\n\r\n        set_error_message(error);\r\n    }\r\n}\r\n\r\nfunction set_error_message(message) {\r\n    console.log(\"Error: \" + message);\r\n    error_box.style.display = \"block\";\r\n    error_box.innerHTML = \"Error: \" + message;\r\n}\r\n\r\nfunction hide_error_message() {\r\n    error_box.style.display = \"none\";\r\n}\r\n\r\nfor (let input of document.querySelectorAll(\".mathInput\")) {\r\n    on_create_input(input);\r\n    inputs.push(input);\r\n}\r\n\r\ndraw_projectile();\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.inputBox {\r\n    display: flex;\r\n    padding: 25px;\r\n    background: #fcfcfc;\r\n    border: 0.1px solid gainsboro;\r\n    border-bottom: none;\r\n    border-right: none;\r\n}\r\n\r\n#lastInputBox {\r\n    border-bottom: 0.1px solid gainsboro;\r\n}\r\n\r\n#inputBoxColumn {\r\n    min-width: 400px;\r\n    height: 600px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: auto;\r\n    scroll-behavior: smooth;\r\n}\r\n\r\n#addColumnButton {\r\n    position: absolute;\r\n    right: 5px;\r\n    top: -20px;\r\n    font-size: 50px;\r\n    -webkit-text-stroke: 1px gray;\r\n    color: transparent;\r\n    cursor: pointer;\r\n    margin: 0px;\r\n    padding: 0px;\r\n}\r\n\r\n#addColumnButton:hover {\r\n    color: gray;\r\n    -webkit-text-stroke: 0px gray;\r\n}\r\n\r\n.noselect {\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n      -webkit-user-select: none; /* Safari */\r\n       -khtml-user-select: none; /* Konqueror HTML */\r\n         -moz-user-select: none; /* Firefox */\r\n          -ms-user-select: none; /* Internet Explorer/Edge */\r\n              user-select: none; /* Non-prefixed version, currently\r\n                                    supported by Chrome and Opera */\r\n  }\r\n\r\n#inputBoxColumn::-webkit-scrollbar {\r\n    background-color:rgba(255, 255, 255, 0);\r\n    width:10px;\r\n}\r\n\r\n#inputBoxColumn::-webkit-scrollbar-track {\r\n    background-color: rgba(255, 255, 255, 0);\r\n}\r\n\r\n#inputBoxColumn::-webkit-scrollbar-thumb {\r\n    background-color:#babac0;\r\n    border-radius: 10px;\r\n    border:4px solid #fff\r\n}\r\n\r\n#inputBoxColumn::-webkit-scrollbar-button {display:none}\r\n\r\n.mathInput {\r\n    background-color: transparent;\r\n    border: none;\r\n    width: 100%;\r\n    height: 20px;\r\n}\r\n\r\n#errorBox {\r\n    display: none;\r\n    background-color: #ffd1d1;\r\n    padding: 25px;\r\n    border: 0.1px solid gainsboro;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ForcesSimulator.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ForcesSimulator.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ForcesSimulator.vue?vue&type=template&id=11d43f89&scoped=true&\"\nimport script from \"./ForcesSimulator.vue?vue&type=script&lang=js&\"\nexport * from \"./ForcesSimulator.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ForcesSimulator.vue?vue&type=style&index=0&id=11d43f89&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"11d43f89\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"title\"},[_vm._v(\" Infinite Polygons \")]),_c('div',{staticClass:\"date\"},[_vm._v(\" July 7th, 2019 \")]),_c('div',{staticClass:\"content\"},[_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"}},[_c('div',{attrs:{\"id\":\"canvasContainer\"}})]),_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"padding\":\"5px\"}},[_c('button',{staticClass:\"customButton\",staticStyle:{\"margin\":\"5px\"},attrs:{\"id\":\"rotateButton\"}},[_vm._v(\"Rotate On\")]),_c('button',{staticClass:\"customButton\",staticStyle:{\"margin\":\"5px\"},attrs:{\"id\":\"circleButton\"}},[_vm._v(\"Circles On\")]),_c('button',{staticClass:\"customButton\",staticStyle:{\"margin\":\"5px\"},attrs:{\"id\":\"resetButton\"}},[_vm._v(\"Reset\")]),_c('button',{staticClass:\"customButton\",staticStyle:{\"margin\":\"5px\"},attrs:{\"id\":\"reverseButton\"}},[_vm._v(\"Reverse Pattern\")])]),_c('p',[_vm._v(\" Absolutely fascinating. \")]),_c('p',[_vm._v(\" We stop the pattern above at a polygon with 60 sides, pretty indistinguishable from a regular circle. As we increase the number of sides of the polygon, it becomes closer and closer to a circle. If we consider initial radius of the first circle to be `1`, what does the maximum radius reached by the pattern approach? Let `r_n` be the radius of the circumscribed polygon with `n` sides, where `r_3 = 1`. Doing some math, we can find out that: \")]),_c('p',[_vm._v(\"`r_n = \\\\prod_{k=3}^{n-1} \\\\frac{1}{cos(\\\\frac{\\\\pi}{k})}, n \\\\ge 4`\")]),_c('p',[_vm._v(\"The question to ask is what happens as `n \\\\to \\\\infty`? What is `cos(\\\\frac{\\\\pi}{3}) \\\\cdot cos(\\\\frac{\\\\pi}{4}) \\\\cdot cos(\\\\frac{\\\\pi}{5}) ...`?\")]),_c('p',[_vm._v(\"I was not able to discover anything more than `R = \\\\lim_{n \\\\to \\\\infty} r_n \\\\approx 8.700036`, which is quite a weird number. I wish I knew the math to find a closed form expression for it; my gut tells me that the Euler Mascheroni constant would appear in the closed form.\")]),_c('p',[_vm._v(\" I need closure, this is driving me crazy. I hate `8.700036`. \")])])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n      <div class=\"title\"> Infinite Polygons </div>\r\n      <div class=\"date\"> July 7th, 2019 </div>\r\n\r\n      <div class=\"content\">\r\n    \r\n        <div style=\"display: flex; justify-content: center\">\r\n        <div id=\"canvasContainer\"></div>\r\n        </div>\r\n\r\n        <div style=\"display: flex; justify-content: center; padding: 5px\">\r\n        <button id=\"rotateButton\" class=\"customButton\" style=\"margin: 5px\">Rotate On</button>\r\n        <button id=\"circleButton\" class=\"customButton\" style=\"margin: 5px\">Circles On</button>\r\n        <button id=\"resetButton\" class=\"customButton\" style=\"margin: 5px\">Reset</button>\r\n        <button id=\"reverseButton\" class=\"customButton\" style=\"margin: 5px\">Reverse Pattern</button>\r\n        </div>\r\n\r\n        <p>\r\n        Absolutely fascinating. \r\n        </p>\r\n        <p>\r\n        We stop the pattern above at a polygon with 60 sides, pretty indistinguishable from a regular circle. \r\n        As we increase the number of sides of the polygon, it becomes closer and closer to a circle. If we consider \r\n        initial radius of the first circle to be `1`, what does the maximum radius reached by\r\n        the pattern approach? Let `r_n` be the radius of the circumscribed polygon with `n` sides, where `r_3 = 1`. Doing some\r\n        math, we can find out that: \r\n        </p>\r\n        <p>`r_n = \\prod_{k=3}^{n-1} \\frac{1}{cos(\\frac{\\pi}{k})}, n \\ge 4`</p>\r\n        <p>The question to ask is what happens as `n \\to \\infty`? What is `cos(\\frac{\\pi}{3}) \\cdot cos(\\frac{\\pi}{4}) \\cdot cos(\\frac{\\pi}{5}) ...`?</p>\r\n        <p>I was not able to discover anything more than `R = \\lim_{n \\to \\infty} r_n \\approx 8.700036`, which is quite a weird number. \r\n        I wish I knew the math to find a closed form expression for it; my gut tells me that the Euler Mascheroni constant \r\n        would appear in the closed form.</p>\r\n        <p>\r\n            I need closure, this is driving me crazy. I hate `8.700036`.\r\n        </p>\r\n\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'InfinitePolygons',\r\n  mounted: () => {\r\n    const script = function (p5) {\r\n        p5.setup = () => {\r\n            window.MathJax.typeset();\r\n\r\n            var width = 800;\r\n            var height = width;\r\n            let canvas = p5.createCanvas(width, height);\r\n            canvas.parent(\"canvasContainer\");\r\n\r\n            do_js(p5, width, height);\r\n        }\r\n    }\r\n\r\n    const P5 = require('p5');\r\n    new P5(script);\r\n  }\r\n}\r\n\r\nfunction do_js(p5, width, height) {\r\n\r\nvar step = 0;\r\nvar total_steps = 10000;\r\nvar draw_circle = true;\r\nvar is_rotating = false;\r\nvar interval = null;\r\nvar reverse_pattern = false;\r\n\r\nfunction animation_frame() {\r\n  p5.clear();\r\n  let radius = width / 18;\r\n  if (reverse_pattern)\r\n    radius = width / 2;\r\n\r\n  let x = width / 2;\r\n  let y = height / 2;\r\n\r\n  p5.noFill();\r\n  p5.smooth();\r\n  p5.strokeWeight(0.5);\r\n  \r\n  if (is_rotating)\r\n    step = (step + 1) % (total_steps / 3);\r\n  \r\n  for (let n = 3; n < 60; n++) {\r\n    if (draw_circle)\r\n      p5.circle(x, y, 2 * radius);\r\n\r\n    if (!reverse_pattern)\r\n      radius /= Math.cos(p5.PI / n);\r\n      \r\n    let offset_angle = Math.PI / 2 + (2 * Math.PI * n \r\n      * step / total_steps);\r\n      ngon(x, y, radius, n, offset_angle);\r\n        \r\n    if (reverse_pattern)\r\n      radius *= Math.cos(p5.PI / n);\r\n  }\r\n}\r\n\r\nfunction ngon(x, y, radius, n, offset_angle = Math.PI / 2) {\r\n  p5.beginShape();\r\n\r\n  for (let i = 1; i <= n; i++)\r\n    p5.vertex(\r\n      x + radius * Math.cos(2 * p5.PI * i / n + offset_angle),\r\n      y - radius * Math.sin(2 * p5.PI * i / n + offset_angle),\r\n    );\r\n\r\n  p5.endShape(p5.CLOSE);\r\n}\r\n\r\nvar rotate_button = document.getElementById(\"rotateButton\");\r\nrotate_button.addEventListener(\"click\", () => {\r\n  if (is_rotating) {\r\n    rotate_button.innerHTML = \"Rotate Off\";\r\n    clearInterval(interval)\r\n  }\r\n  else {\r\n    rotate_button.innerHTML = \"Rotate On\";\r\n    interval = setInterval(animation_frame, 60);\r\n  }\r\n    \r\n  is_rotating = !is_rotating;\r\n});\r\n\r\nvar circle_button = document.getElementById(\"circleButton\");\r\ncircle_button.addEventListener(\"click\", () => {\r\n  if (draw_circle)\r\n    circle_button.innerHTML = \"Circles Off\";\r\n  else\r\n    circle_button.innerHTML = \"Circles On\";\r\n  \r\n  draw_circle = !draw_circle;\r\n  animation_frame();\r\n});\r\n\r\nvar reset_button = document.getElementById(\"resetButton\");\r\nreset_button.addEventListener(\"click\", () => {\r\n  step = 0;\r\n  animation_frame();\r\n});\r\n\r\nvar reverse_button = document.getElementById(\"reverseButton\");\r\nreverse_button.addEventListener(\"click\", () => {\r\n  reverse_pattern = !reverse_pattern;\r\n  animation_frame();\r\n});\r\n\r\nanimation_frame();\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InfinitePolygons.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InfinitePolygons.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./InfinitePolygons.vue?vue&type=template&id=067e0654&scoped=true&\"\nimport script from \"./InfinitePolygons.vue?vue&type=script&lang=js&\"\nexport * from \"./InfinitePolygons.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"067e0654\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"title\"},[_vm._v(\" N Pendulum \")]),_c('div',{staticClass:\"date\"},[_vm._v(\" August 17th, 2019 \")]),_c('div',{staticClass:\"content\"},[_c('div',{attrs:{\"id\":\"pageContainer\"}},[_c('div',{staticStyle:{\"border\":\"1px solid gainsboro\",\"position\":\"relative\"},attrs:{\"id\":\"canvasContainer\"}},[_c('div',{staticStyle:{\"text-align\":\"center\",\"position\":\"absolute\",\"top\":\"50%\",\"left\":\"50%\",\"transform\":\"translate(-50%, -50%)\"},attrs:{\"id\":\"progressContainer\"}},[_c('div',{attrs:{\"id\":\"progressText\"}},[_vm._v(\"0 %\")]),_c('progress',{attrs:{\"id\":\"progressBar\",\"value\":\"25\",\"max\":\"100\"}}),_c('div',[_vm._v(\"This may take a while...\")])])]),_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"padding\":\"5px\"}},[_c('button',{staticClass:\"customButton\",staticStyle:{\"margin\":\"5px\"},attrs:{\"id\":\"pathTraceButton\"}},[_vm._v(\"Trace Path\")]),_c('button',{staticClass:\"customButton\",staticStyle:{\"margin\":\"5px\"},attrs:{\"id\":\"resetButton\"}},[_vm._v(\"Reset\")]),_c('button',{staticClass:\"customButton\",staticStyle:{\"margin\":\"5px\"},attrs:{\"id\":\"increaseButton\"}},[_vm._v(\"Increase size\")]),_c('button',{staticClass:\"customButton\",staticStyle:{\"margin\":\"5px\"},attrs:{\"id\":\"decreaseButton\"}},[_vm._v(\"Decrease size\")]),_c('button',{staticClass:\"customButton\",staticStyle:{\"margin\":\"5px\"},attrs:{\"id\":\"randomButton\"}},[_vm._v(\"Change to simple start\")])]),_c('p',[_vm._v(\" Simulates the first 10 seconds of a pendulum system of any size `N`, assuming no air resistence, friction, with massless and permantently taut strings. The animation is slowed down to ~40 seconds in length (could be much slower for a slower computer) \")]),_c('p',[_vm._v(\"Glad I am finally able to complete this. Implemented using pure Javascript (yikes). I created this because I wanted to see how the pendulum behaved for a larger system. \")]),_c('p',[_vm._v(\"To implement this, I spent a long time creating my own slow algorithm to solve a system of linear equations, then scrapping that algorithm and opting for the much faster Gaussian Elimination algorithm. This animation is only possible because all of the unknown variables within the equations of motion are linear, allowing us to solve for them. \")]),_c('button',{staticClass:\"customButton\",attrs:{\"id\":\"nerd_button\"}},[_vm._v(\"Show me the math!\")]),_c('div',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"what_a_nerd\"}},[_c('p',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"The physics behind it and solution (for my future self who comes back to this)\")]),_c('p',[_vm._v(\"To make things simple, let us set the origin of the coordinate system to be at the very top from where the pendulum hangs. Let `\\\\hat{i} = (1, 0)` and `\\\\hat{j} = (0, -1)`. So positive `y` is actually downwards, which makes things easier. A picture to understand the following equations. \")]),_c('img',{staticStyle:{\"width\":\"30%\",\"display\":\"block\",\"margin\":\"0 auto\"},attrs:{\"src\":require(\"../../assets/pendulum.png\"),\"alt\":\"Pendulum Diagram\"}}),_c('p',[_vm._v(\" To describe the position of each pendulum bob is pretty simple. It is just the position of the last pendulum plus a distance `L` at some angle `\\\\theta`. Let the subscript indicate which pendulum bob it is. \")]),_c('p',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\" `x_1 = L_1 \\\\sin{\\\\dot \\\\theta_1} \\\\quad y_1 = L_1 \\\\cos{\\\\dot \\\\theta_1}` \"),_c('br'),_vm._v(\" `x_2 = x_1 + L_2 \\\\sin{\\\\dot \\\\theta_2} \\\\quad y_2 = y_1 + L_2 \\\\cos{ \\\\dot \\\\theta_2}` \"),_c('br'),_vm._v(\" `x_n = x_{n-1} + L_n \\\\sin{\\\\dot \\\\theta_n} \\\\quad y_n = y_{n-1} + L_n \\\\cos{ \\\\dot \\\\theta_n }` \"),_c('br')]),_c('p',[_vm._v(\" Taking the derivative of these equations twice will give us the following, accelerations `a`, with angular velocity `\\\\dot{\\\\theta}`, and angular acceleration `\\\\ddot{\\\\theta}` \")]),_c('p',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\" `a_{x_n} = a_{x_{n-1}} + L_n (\\\\ddot{\\\\theta}_n \\\\text{cos(} \\\\theta_n \\\\text{)} - \\\\dot{\\\\theta}_n^2\\\\text{cos(} \\\\theta_n \\\\text{)} )` \"),_c('br'),_vm._v(\" `a_{y_n} = a_{y_{n-1}} - L_n (\\\\ddot{\\\\theta}_n \\\\text{sin(} \\\\theta_n \\\\text{)} + \\\\dot{\\\\theta}_n^2 \\\\text{sin(} \\\\theta_n \\\\text{)} )` \")]),_c('p',[_vm._v(\" In the above acceleration, note that for `a_{x_1}` and `a_{y_1}`, `a_{x_{n-1}}` and `a_{y_{n-1}}` are 0. In other words, the first pendulum bob has no previous acceleration it is dependent on. \")]),_c('p',[_vm._v(\" Now, we know there are 2 forces acting on the pendulum bob: gravity and tension (`m_n*g` and `T_n` respectively). Now we derive the net forces on each bob. \")]),_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"align-items\":\"center\",\"padding\":\"10px\"}},[_c('img',{staticStyle:{\"width\":\"20%\",\"margin\":\"10px\"},attrs:{\"src\":require(\"../../assets/forces1.png\"),\"alt\":\"Forces Diagram 1\"}}),_c('div',[_c('img',{staticStyle:{\"width\":\"40%\",\"margin\":\"10px\"},attrs:{\"src\":require(\"../../assets/forces2.png\"),\"alt\":\"Forces Diagram 2\"}})])]),_c('p',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\" `F_{\\\\text{net}, x_{n}} = T_{n+1} \\\\text{sin(} \\\\theta_{n+1} \\\\text{)} - T_n \\\\text{sin(} \\\\theta_n \\\\text{)} = m_n a_{x_n}` \"),_c('br'),_c('br'),_vm._v(\" `F_{\\\\text{net}, y_{n}} = m_ng + T_{n+1} \\\\text{cos(} \\\\theta_{n+1} \\\\text{)} - T_n \\\\text{cos(} \\\\theta_n \\\\text{)} = m_n a_{y_n}` \")]),_c('p',[_vm._v(\" Note that for the last pendulum (the `N`th pendulum), `T_{n+1} = 0` \")]),_vm._v(\" All in all, there are 4 equations for each pendulum bob, and 4 unknowns: `\\\\ddot{\\\\theta_n}, T_n, a_{x_n}, a_{y_n}`. And because every one of these unknowns is linear within these equations, we can solve for them like we solve for any linear system. For example, let us simulate a naive approach to solve linear systems using Cramer's rule, which is computationally slow. Suppose we have 3 equations and 3 unknowns. \"),_c('a',{staticClass:\"visibleLink\",attrs:{\"href\":\"https://en.wikipedia.org/wiki/Cramer%27s_rule\"}},[_vm._v(\"Cramer's rule gives us an explicit solution, using determinants\")]),_vm._v(\": \"),_c('br'),_c('br'),_c('img',{staticStyle:{\"width\":\"20%\",\"display\":\"block\",\"margin\":\"0 auto\"},attrs:{\"src\":require(\"../../assets/cramers_rule1.svg\"),\"alt\":\"Cramer's rule 1\"}}),_c('br'),_c('img',{staticStyle:{\"width\":\"50%\",\"display\":\"block\",\"margin\":\"0 auto\"},attrs:{\"src\":require(\"../../assets/cramers_rule2.svg\"),\"alt\":\"Cramer's rule 2\"}}),_c('br'),_vm._v(\" We can do the same thing here to solve for the pendulum system, if we keep track of all the `\\\\theta_n`, `\\\\ddot{\\\\theta_n}`, `L_n`, `m_n`. Then we can plug in these known values into our derived equations, and make them a linear system of size `4N` where `N` is the number of pendulums. For example, I first hardcoded this for a double pendulum system, using the same equations (but variables moved around). For a double pendulum system, there are 8 equations. \"),_c('br'),_c('br'),_c('img',{staticStyle:{\"width\":\"40%\",\"display\":\"block\",\"margin\":\"0 auto\"},attrs:{\"src\":require(\"../../assets/monster_equations.png\"),\"alt\":\"Pendulum Diagram\"}}),_c('br'),_c('p',[_vm._v(\" It's overwhelming, but these equations can be generalized for any `N`. The only thing left to do to simulate a pendulum is create initial conditions for every single `\\\\theta_n`, `\\\\dot{\\\\theta}_n`, `m_n`, and `L_n`. We plug everything into the equations and are left with a linear system which we can then use Cramer's rule to solve for all of the `\\\\ddot{\\\\theta_n}`. Using Euler's method, its simple enough to approximate `\\\\theta_n` and thus simulate the pendulum. \")]),_c('p',[_vm._v(\" In reality, I used \"),_c('a',{staticClass:\"visibleLink\",attrs:{\"href\":\"https://www.youtube.com/watch?v=qhF59G5OTng\"}},[_vm._v(\"Gaussian elimination\")]),_vm._v(\" as the algorithm to solve linear systems because it is much faster. I talked about Cramer's rule here because the explicit solution is easier to describe. \")])]),_c('br'),_c('br'),_c('br'),_c('br'),_c('br'),_c('br')])])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n      <div class=\"title\"> N Pendulum </div>\r\n      <div class=\"date\"> August 17th, 2019 </div>\r\n\r\n      <div class=\"content\">\r\n\t<div id=\"pageContainer\">\r\n        <div id=\"canvasContainer\" style=\"border: 1px solid gainsboro; position: relative;\">\r\n            <div id=\"progressContainer\" style=\"text-align:center; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);\">\r\n                <div id=\"progressText\">0 %</div>\r\n                <progress id=\"progressBar\" value=\"25\" max=\"100\"></progress>\r\n                <div>This may take a while...</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div style=\"display: flex; justify-content: center; padding: 5px\">\r\n            <button id=\"pathTraceButton\" class=\"customButton\" style=\"margin: 5px\">Trace Path</button>\r\n            <button id=\"resetButton\" class=\"customButton\" style=\"margin: 5px\">Reset</button>\r\n            <button id=\"increaseButton\" class=\"customButton\" style=\"margin: 5px\">Increase size</button>\r\n            <button id=\"decreaseButton\" class=\"customButton\" style=\"margin: 5px\">Decrease size</button>\r\n            <button id=\"randomButton\" class=\"customButton\" style=\"margin: 5px\">Change to simple start</button>\r\n        </div>\r\n\r\n        <p>\r\n            Simulates the first 10 seconds of a pendulum system of any size `N`, assuming no air resistence, friction,\r\n            with massless and permantently taut strings. The animation is slowed down to ~40 seconds in length (could be much slower\r\n            for a slower computer) \r\n        </p>\r\n        <p>Glad I am finally able to complete this. Implemented using pure Javascript (yikes). I created this because I\r\n            wanted to see how the pendulum behaved for a larger system.\r\n        </p>\r\n        <p>To implement this, I spent a long time creating my own slow algorithm to solve a system of linear equations, then\r\n            scrapping that algorithm and opting for the much faster Gaussian Elimination algorithm. This animation is only possible\r\n            because all of the unknown variables within the equations of motion are linear, allowing us to solve for them.\r\n        </p>\r\n\r\n        <button id=\"nerd_button\" class=\"customButton\">Show me the math!</button>\r\n\r\n        <div id=\"what_a_nerd\" style=\"display: none\">\r\n            <p style=\"font-weight: bold\">The physics behind it and solution (for my future self who comes back to this)</p>\r\n            <p>To make things simple, let us set the origin of the coordinate system to be\r\n                at the very top from where the pendulum hangs. Let `\\hat{i} = (1, 0)` and `\\hat{j} = (0, -1)`. So positive `y` is\r\n                actually downwards, which makes things easier. A picture to understand the following equations.\r\n            </p>\r\n            <img style=\"width: 30%; display: block; margin: 0 auto;\" src=\"../../assets/pendulum.png\" alt=\"Pendulum Diagram\">\r\n            \r\n            <p>\r\n                To describe the position of each pendulum bob is pretty simple. It is just the position of the last pendulum plus\r\n                a distance `L` at some angle `\\theta`. Let the subscript indicate which pendulum bob it is.\r\n            </p>\r\n            <p style=\"text-align: center\">\r\n                `x_1 = L_1 \\sin{\\dot \\theta_1} \\quad y_1 = L_1 \\cos{\\dot \\theta_1}`\r\n                <br/>\r\n                `x_2 = x_1 + L_2 \\sin{\\dot \\theta_2} \\quad y_2 = y_1 + L_2 \\cos{ \\dot \\theta_2}`\r\n                <br/>\r\n                `x_n = x_{n-1} + L_n \\sin{\\dot \\theta_n} \\quad y_n = y_{n-1} + L_n \\cos{ \\dot \\theta_n }`\r\n                <br/>\r\n            </p>\r\n            <p>\r\n                Taking the derivative of these equations twice will give us the following, accelerations `a`, \r\n                with angular velocity `\\dot{\\theta}`, and angular acceleration `\\ddot{\\theta}`\r\n            </p>\r\n            <p style=\"text-align: center\">\r\n                    `a_{x_n} = a_{x_{n-1}} + L_n (\\ddot{\\theta}_n \\text{cos(} \\theta_n \\text{)} - \\dot{\\theta}_n^2\\text{cos(} \\theta_n \\text{)} )`\r\n                    <br/>\r\n                    `a_{y_n} = a_{y_{n-1}} - L_n (\\ddot{\\theta}_n \\text{sin(} \\theta_n \\text{)} + \\dot{\\theta}_n^2 \\text{sin(} \\theta_n \\text{)} )`\r\n            </p>\r\n            <p>\r\n                In the above acceleration, note that for `a_{x_1}` and `a_{y_1}`, `a_{x_{n-1}}` and `a_{y_{n-1}}` are 0.\r\n                In other words, the first pendulum bob has no previous acceleration it is dependent on.\r\n            </p>\r\n            <p>\r\n                Now, we know there are 2 forces acting on the pendulum bob: gravity and tension (`m_n*g` and `T_n` respectively).\r\n                Now we derive the net forces on each bob.\r\n            </p>        \r\n            <div style=\"display: flex; justify-content: center; align-items: center; padding: 10px\">\r\n                    <img style=\"width:20%; margin: 10px\" src=\"../../assets/forces1.png\" alt=\"Forces Diagram 1\">\r\n                    <div>\r\n                        <img style=\"width:40%; margin: 10px\" src=\"../../assets/forces2.png\" alt=\"Forces Diagram 2\">\r\n                    </div>\r\n            </div>\r\n            <p style=\"text-align: center\">\r\n                `F_{\\text{net}, x_{n}} = T_{n+1} \\text{sin(} \\theta_{n+1} \\text{)} - T_n \\text{sin(} \\theta_n \\text{)} = m_n a_{x_n}`\r\n                <br/>  \r\n                <br/>  \r\n                `F_{\\text{net}, y_{n}} = m_ng + T_{n+1} \\text{cos(} \\theta_{n+1} \\text{)} - T_n \\text{cos(} \\theta_n \\text{)} = m_n a_{y_n}` \r\n            </p>\r\n            <p>\r\n                Note that for the last pendulum (the `N`th pendulum), `T_{n+1} = 0`\r\n            </p>\r\n\r\n            All in all, there are 4 equations for each pendulum bob, and 4 unknowns: `\\ddot{\\theta_n}, T_n, a_{x_n}, a_{y_n}`.\r\n            And because every one of these unknowns is linear within these equations, we can solve for them like we solve for any linear system.\r\n            For example, let us simulate a naive approach to solve linear systems using Cramer's rule, which is computationally slow.\r\n            Suppose we have 3 equations and 3 unknowns.\r\n            <a class=\"visibleLink\" href=\"https://en.wikipedia.org/wiki/Cramer%27s_rule\">Cramer's rule gives us an explicit solution, using determinants</a>:\r\n            <br/>  \r\n            <br/>  \r\n            <img style=\"width: 20%; display: block; margin: 0 auto;\" src=\"../../assets/cramers_rule1.svg\" alt=\"Cramer's rule 1\">\r\n            <br/>  \r\n            <img style=\"width: 50%; display: block; margin: 0 auto;\" src=\"../../assets/cramers_rule2.svg\" alt=\"Cramer's rule 2\">\r\n            <br/>  \r\n            \r\n            We can do the same thing here to solve for the pendulum system, if we keep track of all the `\\theta_n`, `\\ddot{\\theta_n}`, `L_n`, `m_n`.\r\n            Then we can plug in these known values into our derived equations, and make them a linear system of size `4N` where `N` is the number of pendulums.\r\n            For example, I first hardcoded this for a double pendulum system, using the same equations (but variables moved around). For a double pendulum system,\r\n            there are 8 equations.\r\n            \r\n            <!-- m_1a_{x_1} + T_1\\text{sin(}\\theta_1\\text{)} - T_2\\text{sin(}\\theta_2\\text{)} &&= 0    \\\\\r\n            m_1a_{y_1} + T_1\\text{cos(}\\theta_1\\text{)} - T_2\\text{sin(}\\theta_2\\text{)} &&= m_2g \\\\\r\n            m_2a_{x_2} + T_2\\text{sin(}\\theta_2\\text{)} &&= 0    \\\\\r\n            m_2a_{y_2} + T_2\\text{cos(}\\theta_2\\text{)} &&= m_2g \\\\\r\n            a_{x_2}-a_{x_1} - \\ddot{\\theta}_2 L_2 \\text{cos(}\\theta_2 \\text{)} &&= - \\dot{\\theta}_2^2 L_2  \\text{sin(}\\theta_2\\text{)} \\\\\r\n            a_{y_2}-a_{y_1} + \\ddot{\\theta}_2 L_2 \\text{sin(}\\theta_2 \\text{)} &&= - \\dot{\\theta}_2^2 L_2  \\text{cos(}\\theta_2\\text{)} \\\\\r\n            a_{x_1} - \\ddot{\\theta}_1 L_1 \\text{cos(}\\theta_1 \\text{)} &&= - \\dot{\\theta}_1^2 L_1 \\text{sin(}\\theta_1\\text{)} \\\\\r\n            a_{y_1} + \\ddot{\\theta}_1 L_1 \\text{sin(}\\theta_1 \\text{)} &&= - \\dot{\\theta}_1^2 L_1 \\text{cos(}\\theta_1\\text{)} \\\\  -->\r\n            \r\n            <br/>  \r\n            <br/>  \r\n            <img style=\"width: 40%; display: block; margin: 0 auto;\" src=\"../../assets/monster_equations.png\" alt=\"Pendulum Diagram\">\r\n            <br/>  \r\n            \r\n            <p>\r\n                It's overwhelming, but these equations can be generalized for any `N`. The only thing left to do to simulate a pendulum is create\r\n                initial conditions for every single `\\theta_n`, `\\dot{\\theta}_n`, `m_n`, and `L_n`. We plug everything into the equations and are left with\r\n                a linear system which we can then use Cramer's rule to solve for all of the `\\ddot{\\theta_n}`. Using Euler's method, its simple enough to\r\n                approximate `\\theta_n` and thus simulate the pendulum.\r\n            </p>\r\n            \r\n            <p>\r\n                In reality, I used <a class=\"visibleLink\" href=\"https://www.youtube.com/watch?v=qhF59G5OTng\">Gaussian elimination</a> as the algorithm to\r\n                solve linear systems because it is much faster. I talked about Cramer's rule here because the explicit solution is easier to describe.\r\n            </p>\r\n        </div>\r\n        \r\n        <br/>  \r\n        <br/>  \r\n        <br/>  \r\n        <br/>  \r\n        <br/>  \r\n        <br/>  \r\n        </div>\r\n\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'NPendulum',\r\n  mounted: () => {\r\n    const script = function (p5) {\r\n        p5.setup = () => {\r\n            window.MathJax.typeset();\r\n\r\n            var canvas_width = 1100;\r\n            var canvas_height = 700;\r\n            let canvas = p5.createCanvas(canvas_width, canvas_height);\r\n            canvas.parent(\"canvasContainer\");\r\n            p5.fill(255, 0, 0);\r\n            do_js(p5, canvas_width, canvas_height);\r\n        }\r\n    }\r\n\r\n    const P5 = require('p5');\r\n    new P5(script);\r\n  }\r\n}\r\n\r\nfunction do_js(p5, canvas_width) {\r\nclass Vec {\r\n    constructor(components) {\r\n        if (!Array.isArray(components))\r\n            throw `Invalid argument to Vec constructor (it should be an array, but it was not)`;\r\n        this.components = components;\r\n    }\r\n\r\n    get x() {\r\n        return this.components[0];\r\n    }\r\n\r\n    get y() {\r\n        return this.components[1];\r\n    }\r\n    \r\n    get z() {\r\n        return this.components[2];\r\n    }\r\n\r\n    get length() {\r\n        return this.components.length;\r\n    }\r\n\r\n    static cross(...vec) {\r\n        // Generalized cross product\r\n        // Given a list of vectors, \r\n        // returns a vector which is perpendicular to all given vectors \r\n        // and also has the length equal to the n-volume formed by the given vectors\r\n\r\n        if (vec.length + 1 != vec[0].length)\r\n            throw `Unable to do cross product given ${vec.length}, ${vec[0].length}-dimensional vectors`\r\n\r\n        let matrix = [];\r\n        // Fill first row with 1's we wont use it anyways\r\n        for (let i = 0; i < vec[0].length; i++)\r\n            matrix.push(1);\r\n        \r\n        // Each next row is the sequence of vectors\r\n        for (let v of vec)\r\n            matrix.push(...(v.components));\r\n\r\n        let mat = new Matrix(vec[0].length, vec[0].length, matrix);\r\n            \r\n        let new_vec = [];\r\n        for (let i = 0; i < vec[0].length; i++) {\r\n            new_vec.push(\r\n                ((i % 2 == 0) ? 1 : -1) * mat.__scratch_matrix(0, i).det()\r\n            );\r\n        }\r\n\r\n        return new Vec(new_vec);\r\n    }\r\n\r\n    dot(vec2) {\r\n        let sum = 0;\r\n        for (let i = 0; i < Math.min(this.length, vec2.length); i++)\r\n            sum += this.components[i] * vec2.components[i];\r\n        return sum;\r\n    }\r\n\r\n    magnitude() {\r\n        return Math.sqrt(this.dot(this));\r\n    }\r\n    \r\n    direction() {\r\n        let m = this.magnitude();\r\n        if (m == 0)\r\n            throw `Attempting to get direction of 0 length vector`;\r\n        return this.multiply_scalar(1 / m);\r\n    }\r\n    \r\n    multiply_scalar(scalar) {\r\n        let copy = this.copy();\r\n        for (let i = 0; i < copy.components.length; i++)\r\n            copy.components[i] *= scalar;\r\n        return copy;\r\n    }\r\n    \r\n    add(vec2) {\r\n        let components = [];\r\n        for (let i = 0; i < Math.min(this.components.length, vec2.components.length); i++)\r\n            components[i] = this.components[i] + vec2.components[i];\r\n        return new Vec(components);\r\n    }\r\n    \r\n    subtract(vec2) {\r\n        let components = [];\r\n        for (let i = 0; i < Math.min(this.components.length, vec2.components.length); i++)\r\n            components[i] = this.components[i] - vec2.components[i];\r\n        return new Vec(components);\r\n    }\r\n    \r\n    copy() {\r\n        return new Vec(this.components.slice(0));\r\n    }\r\n\r\n    to_array() {\r\n        return this.components.slice(0);\r\n    }\r\n\r\n    equals(v2) {\r\n        if (this.length != v2.length)\r\n            return false;\r\n        \r\n        for (let i = 0; i < this.length; i++)\r\n            if (this.components[i] != v2.components[i])\r\n                return false;\r\n        return true;\r\n    }\r\n}\r\n\r\nclass Matrix {\r\n    // We use 1D array row major order to represent a matrix\r\n    constructor(rows, cols, array) {\r\n        this.array = array;\r\n        this.rows = rows;\r\n        this.cols = cols;\r\n\r\n        if (array == undefined || array == null) {\r\n            this.array = [];\r\n            for (let i = 0; i < rows * cols; i++)\r\n                this.array.push(0);\r\n        }\r\n    }\r\n\r\n    copy() {\r\n        return new Matrix(this.rows, this.cols, this.array.slice());\r\n    }\r\n\r\n    item(row, col) {\r\n        return this.array[this.cols * row + col];\r\n    }\r\n\r\n    set(row, col, item) {\r\n        this.array[this.cols * row + col] = item;\r\n    }\r\n\r\n    multiply_scalar(scalar) {\r\n        let copy = this.copy();\r\n        for (let i = 0; i < copy.array.length; i++)\r\n            copy.array[i] *= scalar;\r\n        return copy;\r\n    }\r\n\r\n    multiply_mat(m2) {\r\n        if (this.cols != m2.rows)\r\n            throw \"Cannot multiply matrices without matching rows and columns\";\r\n\r\n        // Initialize empty array with amount of rows as 1st, but columns of 2nd\r\n        let array = [];\r\n        for (let i = 0; i < this.rows * m2.cols; i++)\r\n            array.push(0);\r\n\r\n        for (let j = 0; j < this.rows; j++) \r\n            for (let i = 0; i < m2.cols; i++) \r\n                for (let n = 0; n < this.cols; n++) \r\n                    array[m2.cols * j + i] += this.item(j, n) * m2.item(n, i);\r\n\r\n        return new Matrix(this.rows, m2.cols, array);\r\n    }\r\n\r\n    multiply_vec(vec) {\r\n        return this.multiply_mat(Matrix.from_vec(vec));\r\n    }\r\n\r\n    static from_vec(...vec) {\r\n        let a = [];\r\n        for (let row = 0; row < vec[0].length; row++) {\r\n            for (let v of vec)\r\n                a.push(v.components[row]);\r\n        }\r\n        \r\n        return new Matrix(vec[0].length, vec.length, a);\r\n    }\r\n\r\n    // Returns a diagonal matrix with all 1's\r\n    static identity(size) {\r\n        let array = [];\r\n        for (let row = 0; row < size; row++)\r\n            for (let col = 0; col < size; col++)\r\n                array.push((row == col) ? 1 : 0);\r\n\r\n        return new Matrix(size, size, array);\r\n    }\r\n\r\n    // True means every single value of this matrix equals m2\r\n    equals(m2) {\r\n        if (this.rows != m2.rows || this.cols != m2.cols)\r\n            return false;\r\n        \r\n        for (let i = 0; i < this.array.length; i++)\r\n            // Sometimes we are comparing values like 0 and -5.5e-17 or 1 and 0.99999999999\r\n            // which are effectively the same but floating point precision  (; 3 ;)\r\n            if (Math.abs(this.array[i] - m2.array[i]) > 0.0000000000001) \r\n                return false\r\n        return true;\r\n    }\r\n\r\n    to_string() {\r\n        let s = \"\";\r\n        for (let j = 0; j < this.rows; j++) {\r\n            for (let i = 0; i < this.cols; i++)\r\n                s += ((i == 0 && j == 0) ? \" \" : \"  \") + this.item(j, i);\r\n            if (j + 1 == this.rows)\r\n                s += \" ]\"\r\n            s += \"\\n\"\r\n        }\r\n        return \"[\" + s;\r\n    }\r\n\r\n    __scratch_matrix(row, col) {\r\n        let array = [];\r\n        for (let j = 0; j < this.rows; j++)\r\n            for (let i = 0; i < this.cols; i++) \r\n                if (!(i == col || j == row))\r\n                    array.push(this.item(j, i));\r\n        return new Matrix(this.rows - 1, this.cols - 1, array);\r\n    }\r\n\r\n    // Determinant\r\n    det() {\r\n        if (this.rows != this.cols)\r\n            throw `Unable to find determinant of non-square ${this.rows}x${this.cols} matrix`;\r\n        if (this.rows == 1)\r\n            return this.array[0];\r\n        \r\n        let det = 0;\r\n        for (let i = 0; i < this.cols; i++) \r\n            det += ((i % 2 == 0) ? 1 : -1) * this.item(0, i) * this.__scratch_matrix(0, i).det();\r\n        \r\n        return det;\r\n    }\r\n\r\n    transpose() {\r\n        if (this.rows != this.cols)\r\n            throw `Unable to transpose non-square ${this.rows}x${this.cols} matrix: `;\r\n\r\n        let copy = this.copy();\r\n        for (let j = 0; j < this.rows; j++) \r\n            for (let i = j + 1; i < this.cols; i++) {\r\n                // Swap (x, y) with (y, x)\r\n                let temp = copy.item(j, i);\r\n                copy.set(j, i, copy.item(i, j));\r\n                copy.set(i, j, temp);\r\n            }\r\n\r\n        return copy;\r\n    }\r\n        \r\n    inverse() {\r\n        // Using this algorithm\r\n        // https://www.mathsisfun.com/algebra/matrix-inverse-minors-cofactors-adjugate.html\r\n        if (this.rows != this.cols)\r\n            throw `Unable to find inverse of non-square ${this.rows}x${this.cols} matrix`;\r\n\r\n        let det = this.det();\r\n        if (det == 0)\r\n            throw `Unable to find inverse of 0 determinant matrix`;\r\n            \r\n        let mat = [];\r\n        // Matrix of minors\r\n        for (let j = 0; j < this.rows; j++) \r\n            for (let i = 0; i < this.cols; i++) \r\n                mat.push(this.__scratch_matrix(j, i).det());\r\n\r\n        // Cofactors\r\n        let flip = -1;\r\n        for (let i = 0; i < mat.length; i++) {\r\n            if (i % this.cols == 0)\r\n                flip *= -1\r\n\r\n            mat[i] *= (i % 2 == 0) ? flip : -flip;\r\n        }\r\n\r\n        // Adjugate\r\n        let m = new Matrix(this.rows, this.cols, mat);\r\n        m = m.transpose();\r\n\r\n        return m.multiply_scalar(1 / det);\r\n    }\r\n\r\n    to_vec() {\r\n        return new Vec(this.array);\r\n    }\r\n}\r\n\r\n// Solves linear systems\r\nfunction solve_sys_equation(equations) {\r\n    // Each equation is an array of coefficents [a, b, c, ... , last_element]\r\n    // Representing the equation ax + by + cz + ... = last_element\r\n    // Where the last_element's coefficient is 1. i.e is a constant\r\n    // equations = [[a, b, c, ...], [...], ...]\r\n    \r\n    if (equations.length != (equations[0].length - 1))\r\n        throw `Number of equations less than number of unknowns`;\r\n\r\n    // Gaussian elimination algorithm\r\n    // https://www.youtube.com/watch?v=qhF59G5OTng\r\n    // First we need to reorder the equations such that there are no 0's\r\n    // on the diagonal; i.e. for all n >=0 equations[n][n] != 0\r\n    // To do this we swap rows if we can\r\n\r\n    // Lists the possible rows which each equation can be\r\n    let row_choices = [];\r\n    for (let i = 0; i < equations.length; i++) {\r\n        let choices_row_i = [];\r\n        // Sometimes we have a value like 6.17e-17 which is 0 but floating imprecision\r\n        // cucked us, therefore we instead of checking for 0's on the diagonal we just\r\n        // check if the value is very very smol, i.e. value ~ 0\r\n        for (let j = 0; j < equations.length; j++)\r\n            if (Math.abs(equations[j][i]) > 0.00000000001) // != 0\r\n                choices_row_i.push(j)\r\n\r\n        if (choices_row_i.length == 0)\r\n            throw `No unique solution exists because column ${i} is all 0s`;\r\n        row_choices.push(choices_row_i);\r\n    }\r\n\r\n    let row_order = [];\r\n    function contains(array, element) {\r\n        for (let item of array)\r\n            if (element == item)\r\n                return true;\r\n        return false;\r\n    }\r\n\r\n    function choose_row(row_index) {\r\n        if (row_index >= equations.length)\r\n            return true\r\n\r\n        let possible_choices = row_choices[row_index];\r\n        let index = 0;\r\n        do {\r\n            let choice = possible_choices[index];\r\n            if (!contains(row_order, choice)) {\r\n                row_order.push(choice);\r\n\r\n                let success = choose_row(row_index + 1);\r\n                if (success)\r\n                    return true;\r\n                else {\r\n                    row_order.pop();\r\n                }\r\n            }\r\n            index += 1;\r\n        } while (index < possible_choices.length);\r\n\r\n        return false;\r\n    }\r\n    choose_row(0);\r\n\r\n    \r\n    // Test our row swap algorithm\r\n    // console.log(row_order);\r\n    for (let i = 0; i < row_order.length; i++)\r\n        if (equations[row_order[i]][i] == 0)\r\n            throw `Row swap algorithm failed`;\r\n\r\n    \r\n    // Gaussian elimination algorithm begins\r\n    // https://www.youtube.com/watch?v=qhF59G5OTng\r\n    for (let i = 0; i < equations.length; i++) {\r\n        // Select pivot element and divide entire row by it\r\n        let row_i = equations[row_order[i]];\r\n        let pivot = row_i[i];\r\n\r\n        for (let j = 0; j < row_i.length; j++)\r\n            row_i[j] /= pivot;\r\n        \r\n        // for every row below the pivot row, add (-1 * M * pivot_row)\r\n        // Where M is the ith element of the row\r\n        for (let j = i + 1; j < equations.length; j++) {\r\n            let row_j = equations[row_order[j]];\r\n            let M = row_j[i];\r\n\r\n            for (let k = 0; k < row_j.length; k++)\r\n                row_j[k] -= M * row_i[k];\r\n        }\r\n    }\r\n\r\n    // We should be in row echleon form now\r\n    \r\n    // Init empty solution vector\r\n    let solution = [];\r\n    for (let i = 0; i < equations.length; i++)\r\n        solution.push(0);\r\n\r\n    for (let i = row_order.length - 1; i >= 0; i--) {\r\n        let row_i = equations[row_order[i]];\r\n        \r\n        for (let j = i + 1; j < equations.length; j++)\r\n            row_i[row_i.length - 1] -= row_i[j] * solution[j];\r\n\r\n        solution[i] = row_i[row_i.length - 1] / row_i[i];\r\n    }\r\n    \r\n    return new Vec(solution);\r\n}\r\n\r\n\r\n//////////////////////// HTML stuff to make page nice ///////////////////////////////////\r\n\r\n\r\nvar nerd_shit = document.getElementById(\"what_a_nerd\");\r\nvar nerd_button = document.getElementById(\"nerd_button\");\r\nnerd_button.addEventListener(\"click\", () => {\r\n    if (nerd_shit.style.display == \"none\") {\r\n        nerd_shit.style.display = \"block\";\r\n        nerd_button.innerHTML = \"Ha, what a nerd! (Hide)\";\r\n        setTimeout(() => {\r\n            nerd_shit.scrollIntoView(true);\r\n        }, 10);\r\n    }\r\n    else {\r\n        nerd_shit.style.display = \"none\";\r\n        nerd_button.innerHTML = \"Show me the math!\";\r\n    }\r\n});\r\n\r\n\r\n//////////////////////// Pendulum below ////////////////////////////////\r\n\r\nvar trace_path = false;\r\nvar random_start = false;\r\n\r\nvar x_s = canvas_width / 2;\r\nvar y_s = 200;\r\n\r\nvar g = 9.81;\r\nvar N = 4;\r\nvar draw_radius = canvas_width / 2.5 / N;\r\nvar L_n = [];\r\nvar omega_n = [];\r\nvar theta_n = [];\r\nvar mass_n = [];\r\n\r\nvar delta_t = 0.001;\r\nvar time_end = 250;\r\nvar num_steps = time_end / delta_t;\r\nvar current_step = 0;\r\n\r\nfunction setup_initial_conditions() {\r\n    draw_radius = canvas_width / 2.5 / N;\r\n    L_n = [];\r\n    omega_n = [];\r\n    theta_n = [];\r\n    mass_n = [];\r\n\r\n    for (let n = 0; n < N; n++) {\r\n        L_n.push(1);\r\n        omega_n.push(0);\r\n        mass_n.push(1);\r\n\r\n        if (random_start)\r\n            theta_n.push(Math.PI * 2 * Math.random());\r\n        else\r\n            theta_n.push(Math.PI / 2);\r\n    }\r\n}\r\nsetup_initial_conditions();\r\n\r\nvar trace_path_btn = document.getElementById(\"pathTraceButton\");\r\nvar reset_btn = document.getElementById(\"resetButton\");\r\nvar increase_btn = document.getElementById(\"increaseButton\");\r\nvar decrease_btn = document.getElementById(\"decreaseButton\");\r\nvar random_start_btn = document.getElementById(\"randomButton\");\r\n\r\ntrace_path_btn.addEventListener(\"click\", () => {\r\n    trace_path = !trace_path;\r\n    p5.clear();\r\n});\r\nreset_btn.addEventListener(\"click\", () => {\r\n    current_step = 0;\r\n    p5.clear();\r\n});\r\nrandom_start_btn.addEventListener(\"click\", () => {\r\n    random_start = !random_start;\r\n    if (random_start)\r\n        random_start_btn.innerHTML = \"Change to simple start\";\r\n    else\r\n        random_start_btn.innerHTML = \"Change to random start\";\r\n    restart_animation();\r\n});\r\nincrease_btn.addEventListener(\"click\", () => {\r\n    change_N(1);\r\n    restart_animation();\r\n});\r\ndecrease_btn.addEventListener(\"click\", () => {\r\n    if (change_N(-1))\r\n    restart_animation();\r\n});\r\nfunction change_N(delta_N) {\r\n    if (N + delta_N < 1)\r\n        return false;\r\n    N += delta_N;\r\n    return true;\r\n}\r\n\r\nvar progress_container = document.getElementById(\"progressContainer\");\r\nvar progress_bar = document.getElementById(\"progressBar\");\r\nvar progress_text = document.getElementById(\"progressText\");\r\n\r\nfunction set_progress(percentage) {\r\n    function zero_pad(number, max_length) {\r\n        number = number.toString();\r\n        while (number.length < max_length)\r\n            number += \"0\";\r\n        return number;\r\n    }\r\n    progress_container.style.display = \"block\";\r\n    // percentage should be between 0 and 1.0\r\n    progress_bar.value = progress_bar.max * percentage;\r\n    progress_text.innerHTML = zero_pad((100 * percentage).toPrecision(4), 5) + \" %\";\r\n}\r\n\r\nfunction get_points() {\r\n    let start = Date.now();\r\n    var points = [];\r\n    let alpha_index = 0;\r\n    let a_x_index = alpha_index + N;\r\n    let a_y_index = a_x_index + N;\r\n    let tension_index = a_y_index + N;\r\n    let constant = tension_index + N;\r\n\r\n    function heavyLoad() {\r\n        let equations = [];\r\n\r\n        for (let n = 0; n < N; n++) {\r\n            let eqs = [];\r\n            for (let j = 0; j < 4; j++) {\r\n                let eq = [];\r\n                for (let i = 0; i < 4 * N + 1; i++)\r\n                    eq.push(0);\r\n                eqs.push(eq);\r\n            }\r\n    \r\n            eqs[0][a_x_index + n] = 1;\r\n            if (n > 0) eqs[0][a_x_index + n - 1] = -1;\r\n            eqs[0][alpha_index + n] = -L_n[n] * Math.cos(theta_n[n]);\r\n            eqs[0][constant] = -L_n[n] * Math.pow(omega_n[n], 2) * Math.sin(theta_n[n]);\r\n            \r\n            eqs[1][a_y_index + n] = 1;\r\n            if (n > 0) eqs[1][a_y_index + n - 1] = -1;\r\n            eqs[1][alpha_index + n] = L_n[n] * Math.sin(theta_n[n]);\r\n            eqs[1][constant] = -1 * L_n[n] * Math.pow(omega_n[n], 2) * Math.cos(theta_n[n]);\r\n            \r\n            eqs[2][a_x_index + n] = mass_n[n];\r\n            eqs[2][tension_index + n] = Math.sin(theta_n[n]);\r\n            if (n + 1 < N) eqs[2][tension_index + n + 1] = -1 * Math.sin(theta_n[n + 1]);\r\n            \r\n            eqs[3][a_y_index + n] = mass_n[n];\r\n            eqs[3][tension_index + n] = Math.cos(theta_n[n]);\r\n            if (n + 1 < N) eqs[3][tension_index + n + 1] = -1 * Math.cos(theta_n[n + 1]);\r\n            eqs[3][constant] = mass_n[n] * g;\r\n    \r\n            equations.push(...eqs);\r\n        }\r\n    \r\n        // console.log(equations);\r\n\r\n        let result = solve_sys_equation(equations);\r\n    \r\n        let alpha_n = [];\r\n        for (let i = alpha_index; i < alpha_index + N; i++) \r\n            alpha_n.push(result.components[i]);\r\n    \r\n        // console.log(...alpha_n);\r\n        \r\n        let x_n = 0;\r\n        let y_n = 0;\r\n        for (let n = 0; n < N; n++) {\r\n            omega_n[n] += delta_t * alpha_n[n];\r\n            theta_n[n] += delta_t * omega_n[n];\r\n            x_n += L_n[n] * Math.sin(theta_n[n]);\r\n            y_n += L_n[n] * Math.cos(theta_n[n]);\r\n            \r\n            points.push(x_n, y_n);\r\n        }\r\n    }\r\n\r\n\r\n    for (let i = 0; i < num_steps; i++) {\r\n        setTimeout(() => {\r\n            heavyLoad();\r\n        }, 0);\r\n\r\n        setTimeout(() => {\r\n            set_progress(i / num_steps);\r\n        }, 0);\r\n    }\r\n\r\n    console.log(Date.now() - start + \" ms to compute animation\");\r\n\r\n    return points;\r\n}\r\n\r\nvar animation = null;\r\nvar animation_playing = false;\r\n\r\nfunction restart_animation() {\r\n    stop_animation();\r\n    setup_initial_conditions();\r\n    start_animation();\r\n}\r\n\r\nfunction stop_animation() {\r\n    if (animation_playing) {\r\n        clearInterval(animation);\r\n        animation_playing = false;\r\n        \r\n        current_step = 0;\r\n        p5.clear();\r\n    }\r\n}\r\n\r\nfunction start_animation() {\r\n    stop_animation();\r\n    \r\n    let points = get_points();\r\n    setTimeout(() => {\r\n        progress_container.style.display = \"none\";\r\n    }, 0);\r\n    \r\n    animation = setInterval(() => {\r\n        if (current_step >= num_steps)\r\n            stop_animation();\r\n\r\n        animation_playing = true;\r\n\r\n        if (!trace_path)\r\n            p5.clear();\r\n\r\n        let start_index = current_step * N * 2;\r\n        for (let n = 0; n < N; n++) {\r\n            let x_n_1 = 0;\r\n            let y_n_1 = 0;\r\n            if (n > 0) {\r\n                x_n_1 = points[start_index + n * 2 - 2];\r\n                y_n_1 = points[start_index + n * 2 - 1];\r\n            }\r\n            let x_n = points[start_index + n * 2];\r\n            let y_n = points[start_index + n * 2 + 1];\r\n            \r\n            p5.stroke(0);\r\n            p5.line(x_s + draw_radius * x_n_1, y_s + draw_radius * y_n_1,\r\n                x_s + draw_radius * x_n,   y_s + draw_radius * y_n);\r\n\r\n            p5.stroke(255, 0, 0);\r\n            p5.circle(x_s + draw_radius * x_n, y_s + draw_radius * y_n, 2);\r\n                \r\n            if (trace_path && current_step > 0) {\r\n                let last_start_index = (current_step - 1) * N * 2;\r\n                let last_x_n_1 = 0;\r\n                let last_y_n_1 = 0;\r\n                if (n > 0) {\r\n                    last_x_n_1 = points[last_start_index + n * 2 - 2];\r\n                    last_y_n_1 = points[last_start_index + n * 2 - 1];\r\n                }\r\n                let last_x_n = points[last_start_index + n * 2];\r\n                let last_y_n = points[last_start_index + n * 2 + 1];\r\n                \r\n                p5.stroke(255);\r\n                p5.line(x_s + draw_radius * last_x_n_1, y_s + draw_radius * last_y_n_1,\r\n                    x_s + draw_radius * last_x_n,   y_s + draw_radius * last_y_n);\r\n            }\r\n            \r\n            // End for loop\r\n        }\r\n            \r\n        current_step = (current_step + 1) % num_steps;\r\n    }, 1);\r\n}\r\n\r\nconsole.log(\"pendulum.js loaded\");\r\nstart_animation();\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NPendulum.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NPendulum.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NPendulum.vue?vue&type=template&id=e52cbcfe&scoped=true&\"\nimport script from \"./NPendulum.vue?vue&type=script&lang=js&\"\nexport * from \"./NPendulum.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e52cbcfe\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n\r\nimport About from \"@/components/About.vue\"\r\nimport Index from \"@/components/Index.vue\"\r\n\r\nimport RotatingSolids from \"@/components/pages/RotatingSolids.vue\"\r\nimport Snake from \"@/components/pages/Snake.vue\"\r\nimport OrbitalMechanics from \"@/components/pages/OrbitalMechanics.vue\"\r\nimport ForcesSimulator from \"@/components/pages/ForcesSimulator.vue\"\r\nimport InfinitePolygons from \"@/components/pages/InfinitePolygons.vue\"\r\nimport NPendulum from \"@/components/pages/NPendulum.vue\"\r\n\r\nVue.use(VueRouter)\r\nconst router = new VueRouter({\r\n    routes: [\r\n        { path: '/', component: Index },\r\n        { path: '/about', component: About },\r\n        { path: '/rotating_solids', component: RotatingSolids },\r\n        { path: '/snake', component: Snake },\r\n        { path: '/orbital_mechanics', component: OrbitalMechanics },\r\n        { path: '/forces_simulator', component: ForcesSimulator },\r\n        { path: '/infinite_polygons', component: InfinitePolygons },\r\n        { path: '/n_pendulum', component: NPendulum },\r\n    ]\r\n});\r\n\r\nexport default router;","import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\n\nVue.config.productionTip = false\n\nnew Vue({\n  router,\n  render: h => h(App),\n}).$mount('#app')\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ForcesSimulator.vue?vue&type=style&index=0&id=11d43f89&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ForcesSimulator.vue?vue&type=style&index=0&id=11d43f89&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=style&index=0&id=0e806aa4&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=style&index=0&id=0e806aa4&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RotatingSolids.vue?vue&type=style&index=0&id=194290c6&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RotatingSolids.vue?vue&type=style&index=0&id=194290c6&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Snake.vue?vue&type=style&index=0&id=026f9647&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Snake.vue?vue&type=style&index=0&id=026f9647&scoped=true&lang=css&\"","module.exports = __webpack_public_path__ + \"img/cramers_rule2.64609697.svg\";","module.exports = __webpack_public_path__ + \"img/forces1.dd3b018e.png\";","module.exports = __webpack_public_path__ + \"img/forces2.31009e01.png\";"],"sourceRoot":""}